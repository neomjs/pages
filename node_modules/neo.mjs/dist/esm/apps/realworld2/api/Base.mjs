import{API_URL as e,LOCAL_STORAGE_KEY as t}from"./config.mjs";import a from"../../../src/core/Base.mjs";class o extends a{static observable=!0;static config={className:"RealWorld2.api.Base",defaultHeaders:null,isReady:!1,resource:"/"};onConstructed(){super.onConstructed();const e=this;o.initialTokenRequestSent?o.on({ready:e.onReady,scope:e}):(o.initialTokenRequestSent=!0,e.timeout("development"===Neo.config.environment?0:200).then((()=>{Neo.main.addon.LocalStorage.readLocalStorageItem({key:t}).then((t=>{const a=t.value;a&&(o.token=a),e.onReady(a),o.fire("ready",a)}))})))}createUrl(t){return t.url?e+t.url:e+(t.resource||this.resource)+(t.slug?"/"+t.slug:"")}delete(e={}){return console.log("delete",e),Neo.Xhr.promiseJson({data:e.data,method:"DELETE",params:e.params,url:this.createUrl(e),headers:{...this.defaultHeaders,"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}).catch((e=>{console.log("RealWorld2.api.Base:get()",e)}))}get(e={}){return console.log("get",e),Neo.Xhr.promiseJson({data:e.data,method:"GET",params:e.params,url:this.createUrl(e),headers:{...this.defaultHeaders,"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}).catch((e=>{console.log("RealWorld2.api.Base:get()",e)}))}onReady(e){let t=this;e&&(t.defaultHeaders=t.defaultHeaders||{},t.defaultHeaders.Authorization="Token "+e),t.isReady=!0,t.fire("ready",e)}post(e={}){console.log("post",e);const t=e.params;return delete e.params,Neo.Xhr.promiseJson({data:e.data,method:"POST",params:t,url:this.createUrl(e),headers:{...this.defaultHeaders,"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}).catch((e=>{console.log("RealWorld2.api.Base:post()",e)}))}put(e={}){console.log("put",e);const t=e.params;return delete e.params,Neo.Xhr.promiseJson({data:e.data,method:"PUT",params:t,url:this.createUrl(e),headers:{...this.defaultHeaders,"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}).catch((e=>{console.log("RealWorld2.api.Base:put()",e)}))}}o.initialTokenRequestSent=!1,o.token=null;export default Neo.setupClass(o);