import e from"../../../src/controller/Component.mjs";import a from"../../../src/util/Array.mjs";class t extends e{static config={className:"Covid.view.TableContainerController",apiBaseUrl:"https://disease.sh/",apiFallbackBaseUrl:"https://raw.githubusercontent.com/neomjs/pages/main/resources_pub/data/",apiFallbackHistoricalDataEndpoint:"cvid_static/historical/",apiHistoricalDataEndpoint:"v3/covid-19/historical/",apiHistoricalDataTimeRange:"all",removeEmptyRecords:!0,selectedRecord:null,table_:null};addStoreItems(e){let t,s=this,i=[],l={},r=e?.timeline;e&&!e.timeline&&(r=e),r&&(Object.entries(r.cases||{}).forEach(([e,a])=>{"undefined"!==e&&(l[e]={date:new Date(e).toISOString(),cases:a})}),Object.entries(r.deaths||{}).forEach(([e,a])=>{"undefined"!==e&&(l.hasOwnProperty(e)?l[e].deaths=a:l[e]={date:new Date(e).toISOString(),deaths:a})}),Object.entries(r.recovered||{}).forEach(([e,a])=>{"undefined"!==e&&(l.hasOwnProperty(e)?l[e].recovered=a:l[e]={date:new Date(e).toISOString(),recovered:a})}),Object.values(l).forEach(e=>{e.active=e.cases-e.deaths-e.recovered,i.push(e)}),s.removeEmptyRecords&&[...i].forEach(e=>{0===e.cases&&a.remove(i,e)}),i[0]&&Object.assign(i[0],{dailyActive:i[0].active,dailyCases:i[0].cases,dailyDeaths:i[0].deaths,dailyRecovered:i[0].recovered}),i.forEach((e,a)=>{t=i[a+1],t&&Object.assign(t,{dailyActive:t.active-e.active,dailyCases:t.cases-e.cases,dailyDeaths:t.deaths-e.deaths,dailyRecovered:t.recovered-e.recovered})}),s.getReference("historical-data-table").store.data=i,s.updateLineChart(i))}static assignFieldsOrNull(e){return{active:e.active||null,cases:e.cases||null,deaths:e.deaths||null,dailyActive:e.dailyActive||null,dailyCases:e.dailyCases||null,dailyDeaths:e.dailyDeaths||null,dailyRecovered:e.dailyRecovered||null,recovered:e.recovered>0?e.recovered:null}}beforeGetTable(e){return e||(this._table=e=this.getReference("table")),e}loadHistoricalData(e){let a=this,{useFallbackApi:t}=Neo.config,s=t?a.apiFallbackBaseUrl+a.apiFallbackHistoricalDataEndpoint:a.apiBaseUrl+a.apiHistoricalDataEndpoint;s+=t?e+".json":e+"?lastdays="+a.apiHistoricalDataTimeRange,fetch(s).then(e=>e.json()).catch(e=>console.log("Canâ€™t access "+s,e)).then(e=>a.addStoreItems(e))}on520pxButtonClick(e){this.getReference("controls-panel").width=520}on800pxButtonClick(e){this.getReference("controls-panel").width=800}onCollapseButtonClick(e){let a=this.getReference("controls-panel"),t=40===a.width;a.width=t?this.component.historyPanelWidth:40,e.component.text=t?"X":"+"}onCountryChange(e){let a=this;a.selectedRecord=e?{...e}:null,a.loadHistoricalData(e?.countryInfo?.iso2||"all"),a.getReference("historical-data-label").text="Historical Data ("+(e?.country||"World")+")"}onDailyValuesChange(e){let a=this.getReference("line-chart").id,t=this.getReference("logarithmic-scale-checkbox"),s=e.value;s?t.set({checked:!1,disabled:e.value}):t.disabled=!1,Neo.main.addon.AmCharts.setProperties({id:a,properties:{"series.values.0.dataFields.valueY":s?"dailyActive":"active","series.values.1.dataFields.valueY":s?"dailyCases":"cases","series.values.2.dataFields.valueY":s?"dailyDeaths":"deaths","series.values.3.dataFields.valueY":s?"dailyRecovered":"recovered"}}),Neo.main.addon.AmCharts.callMethod({id:a,path:"invalidateData"})}onLogarithmicScaleChange(e){Neo.main.addon.AmCharts.setProperty({id:this.getReference("line-chart").id,path:"yAxes.values.0.logarithmic",value:e.value})}updateLineChart(e){let a=this,s=a.selectedRecord,i=a.getReference("line-chart");e.forEach(e=>Object.assign(e,t.assignFieldsOrNull(e))),s||(s=a.getParent().summaryData),s&&e.push({date:(new Date).toISOString(),...t.assignFieldsOrNull(s)}),i.chartData=e}}export default Neo.setupClass(t);