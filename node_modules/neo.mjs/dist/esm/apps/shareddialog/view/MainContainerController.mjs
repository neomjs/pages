import e from"../../../src/controller/Component.mjs";import o from"../../../src/manager/Component.mjs";import t from"./DemoDialog.mjs";import d from"../../../src/draggable/DragProxyComponent.mjs";import i from"../../../src/util/Array.mjs";import n from"../../../src/util/Rectangle.mjs";export default Neo.setupClass(class extends e{static config={className:"SharedDialog.view.MainContainerController",dockedWindowSide_:"right"};connectedApps=[];currentTheme="neo-theme-light";dockedWindowAppName="SharedDialog2";dockedWindowId=null;dockedWindowProxy=null;dockedWindowSize=620;dialogRect=null;dragStartWindowRect=null;previousTheme=null;targetWindowSize=0;afterSetDockedWindowSide(e,o){this.hasDockedWindow()&&Neo.main.addon.WindowPosition.setDock({name:this.dockedWindowAppName,dock:e})}createDialog(e,o){let d=this,{windowId:i}=d;d.enableOpenDialogButtons(!1),d.dialog=Neo.create(t,{animateTargetId:e.component.id,appName:o,boundaryContainerId:null,cls:[d.currentTheme],height:200,width:300,windowId:i,dragZoneConfig:{alwaysFireDragMove:!0},listeners:{close:d.onDialogClose,dragZoneCreated:d.onDragZoneCreated,scope:d}})}destroyDockedWindowProxy(){let e=this;e.dockedWindowProxy&&(e.dockedWindowProxy.destroy(!0),e.dockedWindowProxy=null)}dropDialogBetweenWindows(e){let o,t=this,d=t.dialog,i=n.getIntersection(t.dragStartWindowRect,e),a=i?.height*i?.width,r=t.dockedWindowSide;if(a>e.height*e.width/2){switch(t.destroyDockedWindowProxy(),o=d.wrapperStyle,d.appName===t.dockedWindowAppName&&(r=t.getOppositeSide(r)),r){case"bottom":o.top=t.dragStartWindowRect.height-e.height+"px";break;case"left":o.left="0px";break;case"right":o.left=t.dragStartWindowRect.width-e.width+"px";break;case"top":o.top="0px"}d.wrapperStyle=o}else t.mountDialogInOtherWindow({fullyIncludeIntoWindow:!0,proxyRect:e})}enableOpenDialogButtons(e=!0){this.getOpenDialogButtons().forEach((o=>{o.disabled=!e}))}getOpenDockedWindowButton(){return this.component.down({iconCls:"far fa-window-restore"})}getOpenDialogButtons(){return o.find({flag:"open-dialog-button"})}getOppositeSide(e){return{bottom:"top",left:"right",right:"left",top:"bottom"}[e]}getProxyPosition(e,o,t=!1){let d,i,{dragStartWindowRect:n,targetWindowSize:a}=this;switch(o){case"bottom":d=`${e.left}px`,i=(t?0:e.top-n.height)+"px";break;case"left":d=`${t?a-e.width:a+e.left}px`,i=`${e.top}px`;break;case"right":d=(t?0:e.left-n.width)+"px",i=`${e.top}px`;break;case"top":d=`${e.left}px`,i=`${t?a-e.height:a+e.top}px`}return{left:d,top:i}}hasDockedWindow(){return this.connectedApps.includes(this.dockedWindowAppName)}mountDialogInOtherWindow(e){let o,t,d,i=this,{appName:n,windowId:a}=i.component,r=i.dialog,p=i.dockedWindowAppName,s=i.dockedWindowId,c=i.dockedWindowSide;r.appName===p&&(p=n,s=a,c=i.getOppositeSide(i.dockedWindowSide)),t=i.getProxyPosition(e.proxyRect,c,e.fullyIncludeIntoWindow),r.unmount(),i.timeout(70).then((()=>{o=r.appName===p,r.appName=o?n:p,r.windowId=o?a:s,i.getOpenDialogButtons().forEach((e=>{e.appName===r.appName&&(r.animateTargetId=e.id)})),d=r.wrapperStyle,d.left=t.left,d.top=t.top,r.wrapperStyle=d,i.destroyDockedWindowProxy(),r.mount()}))}onAppConnect(e){let o=this,{appName:t,windowId:d}=e;i.add(o.connectedApps,t),"SharedDialog"!==t&&"neo-theme-light"!==o.currentTheme&&o.switchThemeForApp(d),t===o.dockedWindowAppName&&(o.dockedWindowId=e.windowId,o.getOpenDockedWindowButton().disabled=!0),o.enableOpenDialogButtons(!o.dialog)}onAppDisconnect(e){let o=this,{connectedApps:t,dialog:d,windowId:n}=o,a=e.appName;"SharedDialog"===a&&(i.remove(t,"SharedDialog"),Neo.Main.windowClose({names:t,windowId:n})),a===o.dockedWindowAppName&&(i.remove(t,a),Neo.main.addon.WindowPosition.unregisterWindow({name:a,windowId:n}),d&&d.windowId!==n&&o.enableOpenDialogButtons(),o.getOpenDockedWindowButton().disabled=!1)}onConstructed(){super.onConstructed();let e=this;Neo.currentWorker.on({connect:e.onAppConnect,disconnect:e.onAppDisconnect,scope:e})}onCreateDialogButtonClick(e){this.createDialog(e,this.component.appName)}onDialogClose(){this.enableOpenDialogButtons(!0),this.dialog=null}onDockedPositionChange(e){this.dockedWindowSide=e.value}onDragEnd(e){if(this.hasDockedWindow()){let o=this,{dialog:t,dragStartWindowRect:d}=o,i=n.moveTo(o.dialogRect,e.clientX-e.offsetX,e.clientY-e.offsetY),a=o.dockedWindowSide;t.appName===o.dockedWindowAppName&&(a=o.getOppositeSide(o.dockedWindowSide)),n.leavesSide(d,i,a)&&(n.excludes(d,i)?o.mountDialogInOtherWindow({proxyRect:i}):o.dropDialogBetweenWindows(i))}}onDragMove(e){if(this.hasDockedWindow()){let o,t,i=this,{dialogRect:a,dragStartWindowRect:r,dockedWindowAppName:p,dockedWindowId:s}=i,c=n.moveTo(a,e.clientX-e.offsetX,e.clientY-e.offsetY),l=i.dockedWindowSide;i.dialog.appName===p&&(p=i.component.appName,s=i.component.windowId,l=i.getOppositeSide(i.dockedWindowSide)),n.leavesSide(r,c,l)?(o=i.getProxyPosition(c,l),i.dockedWindowProxy?i.updateDockedWindowProxyStyle({...o,visibility:null}):(t=Neo.clone(i.dialog.dragZone.dragProxy.vdom,!0),delete t.id,Object.assign(t.style,{...o,transform:"none",transitionProperty:"none"}),i.dockedWindowProxy=Neo.create({module:d,appName:p,cls:["neo-dialog","neo-panel","neo-container"],moveInMainThread:!1,vdom:t,windowId:s}),Neo.currentWorker.insertThemeFiles(s,Neo.dialog.Base.prototype),Neo.currentWorker.insertThemeFiles(s,Neo.form.field.Text.prototype),Neo.currentWorker.insertThemeFiles(s,Neo.form.field.trigger.Clear.prototype),Neo.currentWorker.insertThemeFiles(s,Neo.draggable.DragProxyComponent.prototype))):i.updateDockedWindowProxyStyle({visibility:"hidden"})}}onDragStart(e){if(this.hasDockedWindow()){let o=this,{appName:t}=o.component,d="left"===o.dockedWindowSide||"right"===o.dockedWindowSide;o.dialogRect=e.dragElementRect;for(let t of e.eventData.path)if("body"===t.tagName){o.dragStartWindowRect=t.rect;break}o.hasDockedWindow()&&Neo.Main.getWindowData({appName:o.dialog.appName===t?o.dockedWindowAppName:t}).then((e=>{o.targetWindowSize=d?e.innerWidth:e.innerHeight}))}}onDragZoneCreated(e){let o=this;e.dragZone.on({dragEnd:o.onDragEnd,dragMove:o.onDragMove,dragStart:o.onDragStart,scope:o})}openDockedWindow(e){let{windowId:o}=this;Neo.Main.getWindowData({windowId:o}).then((e=>{let t,d,i,n,a=this,r=a.dockedWindowSide,p=a.dockedWindowSize;switch(r){case"bottom":t=p,d=e.screenLeft,i=e.outerHeight+e.screenTop-62,n=e.outerWidth;break;case"left":t=e.outerHeight-86,d=e.screenLeft-p,i=e.screenTop+24,n=p;break;case"right":t=e.outerHeight-86,d=e.outerWidth+e.screenLeft,i=e.screenTop+24,n=p;break;case"top":t=p,d=e.screenLeft,i=e.screenTop-p+24,n=e.outerWidth}Neo.Main.windowOpen({url:"childapps/shareddialog2/index.html",windowFeatures:`height=${t},left=${d},top=${i},width=${n}`,windowId:o,windowName:a.dockedWindowAppName}),Neo.main.addon.WindowPosition.registerWindow({dock:r,name:a.dockedWindowAppName,size:p,windowId:o})}))}switchTheme(e){let o,t=this,d=e.component,n="Theme Light",a=t.dialog,r="fa fa-sun",p="neo-theme-dark";"Theme Light"===d.text&&(n="Theme Dark",r="fa fa-moon",p="neo-theme-light"),t.previousTheme=t.currentTheme,t.currentTheme=p,t.connectedApps.forEach((e=>{t.switchThemeForApp(Neo.apps[e].windowId)})),d.set({iconCls:r,text:n}),a&&(o=a.cls,i.removeAdd(o,t.previousTheme,t.currentTheme),a.cls=o)}switchThemeForApp(e){let{currentTheme:o,previousTheme:t}=this;Neo.main.DomAccess.setBodyCls({add:[o],remove:t?[t]:[],windowId:e})}updateDockedWindowProxyStyle(e){let o=this.dockedWindowProxy;o&&(o.style=Object.assign(o.style||{},e))}});