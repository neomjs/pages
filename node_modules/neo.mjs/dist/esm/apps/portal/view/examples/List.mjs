import e from"../../../../src/list/Base.mjs";import t from"../../../../src/util/VDom.mjs";class r extends e{static nameRegEx=/^(.{65}[^\s]*).*/;static config={className:"Portal.view.examples.List",baseCls:["portal-examples-list","neo-list"],baseUrl:"https://neomjs.com/",environment:"development",preloadImages:5,sourceBaseUrl:"https://github.com/neomjs/neo/tree/dev/",useWrapperNode:!0,_vdom:{cn:[{tag:"ul",cn:[]}]}};get imageBasePath(){let e;return Neo.config.isGitHubPages?(e="../../../../resources_pub/website/examples","development"!==Neo.config.environment&&(e="../../"+e)):e="https://raw.githubusercontent.com/neomjs/pages/main/resources_pub/website/examples",e}construct(e){super.construct(e);let t=this;t.addDomListeners({intersect:t.onIntersect,scope:t})}afterSetMounted(e,t){super.afterSetMounted(e,t),e&&this.registerIntersectionObserver()}createItemContent(e){let t=this;return[{cls:["content","neo-relative"],data:{recordId:e.id},removeDom:t.isHiddenItem(e),cn:[{cls:["neo-multi-window"],data:{neoTooltip:"Multi Window Demo"},removeDom:!e.sharedWorkers,cn:[{cls:["far","fa-window-restore"]}]},{cls:["neo-full-size","preview-image"],flag:`image-${e.id}`},{cls:["neo-absolute","neo-item-bottom-position"],cn:[{...t.createLink(e)},{cls:["neo-top-20"],cn:[{...t.createSourceLink(e)},{cls:["neo-inner-content"],cn:[{cls:["neo-inner-details"],html:e.browsers.join(", ")},{cls:["neo-inner-details"],html:e.environments.join(", ")}]}]}]}]}]}createLink(e){let t=e.url.startsWith("http"),n={tag:"a",cls:["neo-title"],cn:[{html:e.name.replace(r.nameRegEx,"$1")}],href:e.url};return t||(n.href=this.baseUrl+e.url),e.sharedWorkers&&this.environment===Neo.config.environment&&!t||(n.target="_blank"),n}createSourceLink(e){let t={tag:"a",cls:["fab fa-github","neo-github-image"],href:e.sourceUrl,target:"_blank"};return e.sourceUrl.startsWith("http")||(t.href=this.sourceBaseUrl+e.sourceUrl),t}getVdomRoot(){return this.vdom.cn[0]}getVnodeRoot(){return this.vnode.childNodes[0]}isHiddenItem(e){return!!e.hidden||"apps/portal"===e.sourceUrl&&this.environment===Neo.config.environment}onIntersect(e){let r,n=this,{imageBasePath:s,store:o}=n,i=o.get(parseInt(e.data.recordId)),a=o.indexOf(i),l=Math.min(a+n.preloadImages,o.getCount()),c=!1;for(;a<l;a++)r=t.getByFlag(n.vdom,`image-${i.id}`),r.style||(c=!0,r.style={backgroundImage:[`url('${s}/${i.image}'),`,"linear-gradient(","var(--portal-examples-list-gradient-start),","var(--portal-examples-list-gradient-end)",")"].join("")});c&&n.update()}async registerIntersectionObserver(){let e,t=this,r={id:t.id,observe:[".content"],windowId:t.windowId},n=0,s=t.intersectionObserverReconnects;if(await t.timeout(150),e=await Neo.main.addon.IntersectionObserver.register({...r,callback:"isVisible",root:`#${t.parentId}`}),e.countTargets<1)for(;n<s&&(await t.timeout(100),e=await Neo.main.addon.IntersectionObserver.observe(r),!(e.countTargets>0));n++);}}export default Neo.setupClass(r);