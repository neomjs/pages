import e from"../../store/ContentSections.mjs";import t from"../../store/Content.mjs";import n from"../../../../src/state/Provider.mjs";export default Neo.setupClass(class extends n{static config={className:"Portal.view.learn.MainContainerStateProvider",data:{contentPath:null,countPages:null,countSections:null,currentPageRecord:null,deck:null,nextPageRecord:null,previousPageRecord:null},stores:{contentSections:{module:e},contentTree:{module:t}}};onDataPropertyChange(e,t,n){super.onDataPropertyChange(e,t,n);let o=this;switch(e){case"countSections":t<1&&o.component.getReference("page-sections-container")?.toggleCls("neo-expanded",!1);break;case"currentPageRecord":{let e,n,r=o.data.countPages,a=o.getStore("contentTree"),s=a.indexOf(t),c=null,d=null,l=null,i=null;for(e=s-1;e>=0;e--)if(n=a.getAt(e),n.isLeaf&&!o.recordIsHidden(n,a)){l=n;break}for(o.setData({previousPageText:i,previousPageRecord:l}),e=s+1;e<r;e++)if(n=a.getAt(e),n.isLeaf&&!o.recordIsHidden(n,a)){c=n;break}o.setData({nextPageText:d,nextPageRecord:c}),o.component.getReference("sidenav-container")?.toggleCls("neo-expanded",!1);break}case"deck":if(t){const e="learnneo"===t?"learn/":`resources/data/deck/${t}/`;o.data.contentPath=Neo.config.basePath+e}}}recordIsHidden(e,t){return!!e.hidden||null!==e.parentId&&this.recordIsHidden(t.get(e.parentId),t)}});