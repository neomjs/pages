import e from"../core/Base.mjs";import t from"./Filter.mjs";import r from"../util/Logger.mjs";import s from"../util/Array.mjs";import i from"../core/Observable.mjs";import o from"./Sorter.mjs";const l=Symbol("countMutations"),n=Symbol("isFiltered"),a=Symbol("isSorted"),p=Symbol("silentUpdateMode"),u=Symbol("toAddArray"),h=Symbol("toRemoveArray"),m=Symbol("updatingIndex");class d extends e{static observable=!0;static config={className:"Neo.collection.Base",ntype:"collection",allItems:null,autoSort:!0,filterMode:"primitive",filters_:[],items_:null,keyProperty:"id",keyPropertyIndex:-1,map_:null,sortDirections:null,sortProperties:null,sorters_:[],sourceId_:null};construct(e){super.construct(e);let t=this,r={enumerable:!1,writable:!0};t.items=t.items||[],Object.defineProperties(t,{[l]:{...r,value:!1},[n]:{...r,value:!1},[a]:{...r,value:!1},[p]:{...r,value:!1},[u]:{...r,value:[]},[h]:{...r,value:[]},[m]:{...r,value:0}}),t.autoSort&&t._sorters.length>0&&t.doSort()}add(e){return this.splice(null,null,e).addedItems}afterSetFilters(e,t){let r=this;e.forEach((e=>{!1===e.listenerApplied&&(e.on("change",r.onFilterChange,r),e.listenerApplied=!0)})),t&&r.filter()}afterSetItems(e,t){if(e){let t,r=this,{keyProperty:s}=r,i=0,o=e.length;for(;i<o;i++)t=e[i],r.map.set(t[s],t)}}afterSetSorters(e,t){let r=this;r.applySorterConfigs(),e.forEach((e=>{!1===e.listenerApplied&&(e.on("change",r.onSorterChange,r),e.listenerApplied=!0)})),t&&r.autoSort&&r.doSort()}afterSetSourceId(e,t){if(e){let r=this,s=Neo.get(e);r._items=[...s._items],r.map=new Map(s.map);const i={mutate:r.onMutate,scope:r};s.on(i),t&&(s=Neo.get(t),s.un(i))}}applySorterConfigs(){let e=this;e.sortDirections=[],e.sortProperties=[],e.sorters.forEach((t=>{e.sortDirections.push(t.directionMultiplier),e.sortProperties.push(t.property)}))}beforeSetFilters(e,r){Array.isArray(e)||(e=e?[e]:[]);let s,i,o=r&&r.length||0;return e.forEach(((l,n)=>{if(r)for(s=!1,i=0;i<o;i++){if(r[i]===l){r[i].set({operator:l.operator,property:l.property,value:l.value}),s=!0;break}if(r[i].operator===(l.operator||"===")&&r[i].property===l.property&&r[i].value===l.value){s=!0;break}}s?(e[n]=r[i],r.splice(i,1),o--):e[n]=Neo.create(t,l)})),Array.isArray(r)&&r.forEach((e=>{e.destroy()})),e}beforeSetMap(e,t){return e||new Map}beforeSetSorters(e,t){Array.isArray(e)||(e=e?[e]:[]);let r,s,i=t?.length||0;return e.forEach(((l,n)=>{if(t){r=!1,s=0;let{direction:e,property:o}=l;for(;s<i;s++){if(t[s]===l){t[s].set({direction:e,property:o}),r=!0;break}if(t[s].property===o&&t[s].direction===e){r=!0;break}}}r?(e[n]=t[s],t.splice(s,1),i--):e[n]=Neo.create(o,l)})),t?.forEach((e=>{e.destroy()})),e}cacheUpdate(e){}clear(){this.splice(0,this.getCount())}clearFilters(e){this.filters=e?Neo.clone(this.originalConfig.filters,!0,!0):null}clearSilent(){let e=this;e._items.splice(0,e.getCount()),e.map.clear()}clearSorters(e){this.sorters=e?Neo.clone(this.originalConfig.sorters,!0,!0):null}clone(){let e=this,t=Neo.clone(e.originalConfig,!0),r=e._filters||[],s=e._sorters||[];return delete t.id,delete t.filters,delete t.items,delete t.sorters,e._items.length>0&&(t.items=[...e._items]),t.filters=[],t.sorters=[],r.forEach((function(e){t.filters.push(e.originalConfig)})),s.forEach((function(e){t.sorters.push(e.originalConfig)})),Neo.create(d,t)}destroy(){let e=this;e._items.splice(0,e._items.length),e.map.clear(),super.destroy()}doSort(e=this._items,t=!1){let r,s,i,o,l,n,p=this,u=[...e],{sorters:h,sortDirections:d,sortProperties:f}=p,c=f.length||0,g=!1,y=!1;c>0&&(h.forEach((e=>{e.sortBy&&(g=!0),e.useTransformValue&&(y=!0)})),g?p._items.sort(((e,t)=>{for(r=0;r<c;r++)if(o=h[r],n=o[o.sortBy?"sortBy":"defaultSortBy"](e,t),0!==n)return n;return 0})):(s=y?e.map(((e,t)=>{for(i={index:t},r=0;r<c;r++)h[r].useTransformValue?i[f[r]]=h[r].transformValue(e[f[r]]):i[f[r]]=e[f[r]];return i})):e,s.sort(((e,t)=>{for(r=0;r<c;r++){if(l=f[r],e[l]>t[l])return 1*d[r];if(e[l]<t[l])return-1*d[r]}return 0})),y&&(p._items=s.map((t=>e[t.index]))))),p[a]=c>0,t||0!==p[m]||p.fire("sort",{items:p._items,previousItems:u,scope:p})}endUpdate(e){const t=this;t[m]>0&&t[m]--,e?t[p]=!1:(t.fire("mutate",{addedItems:t[u],removedItems:t[h]}),t[u].splice(0,t[u].length),t[h].splice(0,t[h].length))}exportFilters(){let e,t=[];return this.filters?.forEach((r=>{e=r.export(),e&&t.push(e)})),t}exportSorters(){let e,t=[];return this.sorters?.forEach((r=>{e=r.export(),e&&t.push(e)})),t}filter(){let e,t,r,s,i,o=this,l=o._filters,a=l.length,p=0,u=o.allItems?._items||o._items,h=0,m=u.length,f=[],c=!1,g=[...o._items];for(;h<a;h++)l[h].disabled||p++;if(0===p&&o.allItems)o.sorters.length>0&&(c=!0),o.clearSilent(),o.items=[...o.allItems._items];else if(o.allItems||(e={...o.originalConfig},delete e.filters,delete e.items,delete e.sorters,o.allItems=Neo.create(d,{...Neo.clone(e,!0,!0),keyProperty:o.keyProperty,sourceId:o.id})),o.map.clear(),"primitive"===o.filterMode){for(h=0;h<m;h++){for(t=!0,r=u[h],s=0;s<a;s++)if(l[s].isFiltered(r,u,u)){t=!1;break}t&&(f.push(r),o.map.set(r[o.keyProperty],r))}o._items=f}else{for(f=[...u],s=0;s<a;s++){for(i=[],h=0;h<m;h++)l[s].isFiltered(f[h],f,u)||i.push(f[h]);f=[...i],m=f.length}o.items=f}o[n]=0!==p,c&&o.doSort(o.items,!0),o.fire("filter",{isFiltered:o[n],items:o.items,oldItems:g,scope:o})}find(e,t,r=!1){let s,i,o,l,n=this,a=[],p=n.isItem(e);for(s of(p&&(o=Object.entries(e),l=o.length),n.items))if(p){if(i=[],o.forEach((([e,t])=>{Neo.ns(e,!1,s)===t&&i.push(!0)})),i.length===l){if(r)return s;a.push(s)}}else if(Neo.ns(e,!1,s)===t){if(r)return s;a.push(s)}return r?null:a}findBy(e,t=this,r=0,s=this.getCount()){let i=this,o=[],l=r;for(;l<s;l++)e.call(t,i.items[l])&&o.push(i.items[l]);return o}findFirst(e,t){return this.find(e,t,!0)}first(){return this._items[0]}get(e){return this.map.get(e)||null}getAt(e){return this._items[e]}getCount(){return this._items.length}getCountMutations(){return this[l]}getFilter(e){let t=this.filters||[],r=0,s=t.length;for(;r<s;r++)if(t[r].property===e)return t[r];return null}getKeyAt(e){let t=this._items[e];return t?.[this.keyProperty]}getRange(e,t){return this._items.slice(e,t)}getSource(){return this.sourceId&&Neo.get(this.sourceId)}has(e){return this.map.has(e)}hasItem(e){return this.map.has(e[this.keyProperty])}indexOf(e){let t=this;return t._items.indexOf(t.isItem(e)?e:t.map.get(e))}indexOfItem(e){return this._items.indexOf(e)}indexOfKey(e){return this._items.indexOf(this.map.get(e))}insert(e,t){return this.splice(e,0,t).addedItems}isFiltered(){return this[n]}isFilteredItem(e){let t=this._filters,r=0,s=t.length,i=!1;for(;r<s;r++)if(t[r].isFiltered(e)){i=!0;break}return i}isItem(e){return"object"==typeof e}isSorted(){return this[a]}last(){return this._items[this.getCount()-1]}move(e,t){if(e===t)return;let{items:r}=this;e>=r.length&&(e=r.length-1),r.splice(t,0,r.splice(e,1)[0])}onFilterChange(e){this.filter()}onMutate(e){this.preventBubbleUp=!0,this.splice(null,e.removedItems,e.addedItems)}onSorterChange(e){this.applySorterConfigs(),this.doSort()}pop(){return this.splice(this.getCount()-1,1).removedItems[0]}push(e){return this.add(e)}remove(e){return this.splice(0,Array.isArray(e)?e:[e]),this.getCount()}removeAt(e){return this.splice(e,1),this.getCount()}reverse(){return this._items.reverse()}shift(){return this.splice(0,1).addedItems[0]}some(...e){return this._items.some(...e)}splice(e,t,s){let i,o,n,a,u,h=this,{keyProperty:d,map:f}=h,c=h.getSource(),g=[],y=h._items,b=[],S=Neo.isNumber(t)?t:null,I=Array.isArray(t)?t:null;if(!Neo.isNumber(e)&&S&&r.error(h.id+": If index is not passed, removeCountAtIndex cannot be used"),s=s&&!Array.isArray(s)?[s]:s,I&&(a=I.length)>0)for(s&&s.length>0&&(u=s.map((e=>e[d]))),i=0;i<a;i++)o=I[i],n=h.isItem(o)?o[d]:o,f.has(n)&&(!u||u&&u.indexOf(n)<0)&&(b.push(y.splice(h.indexOfKey(n),1)[0]),f.delete(n));else S&&S>0&&(b.push(...y.splice(e,S)),b.forEach((e=>{f.delete(e[d])})));if(s&&(a=s.length)>0){for(i=0;i<a;i++)o=s[i],n=o[d],n||(o[d]=n=h.keyPropertyIndex,h.keyPropertyIndex--),f.has(n)||h.isFilteredItem(o)||(g.push(o),f.set(n,o));g.length>0&&(0===y.length?h._items=g:y.splice(Neo.isNumber(e)?e:y.length,0,...g),h.autoSort&&h._sorters.length>0&&h.doSort())}return c&&(c.getSource()||(c.preventBubbleUp=!0),h.preventBubbleUp||(h.startUpdate(!0),c.splice(null,I||b,s),h.endUpdate(!0)),delete c.preventBubbleUp),(g.length>0||b.length>0)&&h[l]++,0===h[m]?h.fire("mutate",{addedItems:s,preventBubbleUp:h.preventBubbleUp,removedItems:I||b}):h[p]||h.cacheUpdate({addedItems:g,removedItems:b}),0===h[m]&&delete h.preventBubbleUp,{addedItems:g,removedItems:b}}startUpdate(e){e&&(this[p]=!0),this[m]++}unshift(e){return this.splice(0,0,e),this.getCount()}}export default Neo.setupClass(d);