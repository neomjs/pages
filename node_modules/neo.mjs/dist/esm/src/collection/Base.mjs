import e from"../core/Base.mjs";import t from"./Filter.mjs";import r from"../util/Logger.mjs";import s from"../util/Array.mjs";import i from"../core/Observable.mjs";import o from"./Sorter.mjs";const l=Symbol("countMutations"),n=Symbol("isFiltered"),a=Symbol("isSorted"),u=Symbol("silentUpdateMode"),p=Symbol("toAddArray"),h=Symbol("toRemoveArray"),m=Symbol("updatingIndex");class f extends e{static observable=!0;static config={className:"Neo.collection.Base",ntype:"collection",allItems:null,autoSort:!0,count_:0,filterMode:"primitive",filters_:[],items_:null,keyProperty:"id",keyPropertyIndex:-1,map_:null,sortDirections:null,sortProperties:null,sorters_:[],sourceId_:null};construct(e){let t=this,r={enumerable:!1,writable:!0};Object.defineProperties(t,{[l]:{...r,value:!1},[n]:{...r,value:!1},[a]:{...r,value:!1},[u]:{...r,value:!1},[p]:{...r,value:[]},[h]:{...r,value:[]},[m]:{...r,value:0}}),super.construct(e),t.items=t.items||[],t.autoSort&&t._sorters.length>0&&t.doSort()}add(e){return this.splice(null,null,e).addedItems}afterSetFilters(e,t){let r=this;e.forEach(e=>{!1===e.listenerApplied&&(e.on("change",r.onFilterChange,r),e.listenerApplied=!0)}),t&&r.filter()}afterSetItems(e,t){if(e){let t,r=this,{keyProperty:s}=r,i=0,o=e.length;for(;i<o;i++)t=e[i],r.map.set(t[s],t);r.count=o}}afterSetSorters(e,t){let r=this;r.applySorterConfigs(),e.forEach(e=>{!1===e.listenerApplied&&(e.on("change",r.onSorterChange,r),e.listenerApplied=!0)}),t&&r.autoSort&&r.doSort()}afterSetSourceId(e,t){if(e){let r=this,s=Neo.get(e);r._items=[...s._items],r.map=new Map(s.map);const i={mutate:r.onMutate,scope:r};s.on(i),t&&(s=Neo.get(t),s.un(i))}}applySorterConfigs(){let e=this;e.sortDirections=[],e.sortProperties=[],e.sorters.forEach(t=>{e.sortDirections.push(t.directionMultiplier),e.sortProperties.push(t.property)})}beforeSetFilters(e,r){Array.isArray(e)||(e=e?[e]:[]);let s,i,o=r&&r.length||0;return e.forEach((l,n)=>{if(r)for(s=!1,i=0;i<o;i++){if(r[i]===l){r[i].set({operator:l.operator,property:l.property,value:l.value}),s=!0;break}if(r[i].operator===(l.operator||"===")&&r[i].property===l.property&&r[i].value===l.value){s=!0;break}}s?(e[n]=r[i],r.splice(i,1),o--):e[n]=Neo.create(t,l)}),Array.isArray(r)&&r.forEach(e=>{e.destroy()}),e}beforeSetMap(e,t){return e||new Map}beforeSetSorters(e,t){Array.isArray(e)||(e=e?[e]:[]);let r,s,i=t?.length||0;return e.forEach((l,n)=>{if(t){r=!1,s=0;let{direction:e,property:o}=l;for(;s<i;s++){if(t[s]===l){t[s].set({direction:e,property:o}),r=!0;break}if(t[s].property===o&&t[s].direction===e){r=!0;break}}}r?(e[n]=t[s],t.splice(s,1),i--):e[n]=Neo.create(o,l)}),t?.forEach(e=>{e.destroy()}),e}cacheUpdate(e){}clear(){this.splice(0,this.count)}clearFilters(e){this.filters=e?Neo.clone(this.originalConfig.filters,!0,!0):null}clearSilent(){let e=this;e._items.splice(0,e.count),e.map.clear()}clearSorters(e){this.sorters=e?Neo.clone(this.originalConfig.sorters,!0,!0):null}clone(){let e=this,t=Neo.clone(e.originalConfig,!0),r=e._filters||[],s=e._sorters||[];return t.keyProperty=e.keyProperty,delete t.id,delete t.filters,delete t.items,delete t.sorters,e._items.length>0&&(t.items=[...e._items],t.count=t.items.length),t.filters=[],t.sorters=[],r.forEach(function(e){t.filters.push(e.originalConfig)}),s.forEach(function(e){t.sorters.push(e.originalConfig)}),Neo.create(f,t)}destroy(){let e=this;e._items.splice(0,e._items.length),e.map.clear(),super.destroy()}doSort(e=this._items,t=!1){let r,s,i,o,l,n,u=this,p=[...e],{sorters:h,sortDirections:f,sortProperties:c}=u,d=c.length||0,g=!1,y=!1;d>0&&(h.forEach(e=>{e.sortBy&&(g=!0),e.useTransformValue&&(y=!0)}),g?u._items.sort((e,t)=>{for(r=0;r<d;r++)if(o=h[r],n=o[o.sortBy?"sortBy":"defaultSortBy"](e,t),0!==n)return n;return 0}):(s=y?e.map((e,t)=>{for(i={index:t},r=0;r<d;r++)h[r].useTransformValue?i[c[r]]=h[r].transformValue(e[c[r]]):i[c[r]]=e[c[r]];return i}):e,s.sort((e,t)=>{for(r=0;r<d;r++){if(l=c[r],e[l]>t[l])return 1*f[r];if(e[l]<t[l])return-1*f[r]}return 0}),y&&(u._items=s.map(t=>e[t.index])))),u[a]=d>0,t||0!==u[m]||u.fire("sort",{items:u._items,previousItems:p,scope:u})}endUpdate(e){const t=this;t[m]>0&&t[m]--,e?t[u]=!1:(t.fire("mutate",{addedItems:t[p],removedItems:t[h]}),t[p].splice(0,t[p].length),t[h].splice(0,t[h].length))}exportFilters(){let e,t=[];return this.filters?.forEach(r=>{e=r.export(),e&&t.push(e)}),t}exportSorters(){let e,t=[];return this.sorters?.forEach(r=>{e=r.export(),e&&t.push(e)}),t}filter(){let e,t,r,s,i,o=this,l=o._filters,a=l.length,u=0,p=o.allItems?._items||o._items,h=0,m=p.length,c=[],d=!1,g=[...o._items];for(;h<a;h++)l[h].disabled||u++;if(0===u&&o.allItems)o.sorters.length>0&&(d=!0),o.clearSilent(),o.items=[...o.allItems._items];else if(o.allItems||(e={...o.originalConfig},delete e.filters,delete e.items,delete e.sorters,o.allItems=Neo.create(f,{...Neo.clone(e,!0,!0),id:o.id+"-all",items:[...o._items],keyProperty:o.keyProperty,sourceId:o.id})),o.map.clear(),"primitive"===o.filterMode){for(h=0;h<m;h++){for(t=!0,r=p[h],s=0;s<a;s++)if(l[s].isFiltered(r,p,p)){t=!1;break}t&&(c.push(r),o.map.set(r[o.keyProperty],r))}o._items=c}else{for(c=[...p],s=0;s<a;s++){for(i=[],h=0;h<m;h++)l[s].isFiltered(c[h],c,p)||i.push(c[h]);c=[...i],m=c.length}o.items=c}o[n]=0!==u,d&&o.doSort(o.items,!0),o.count=o.items.length,o.fire("filter",{isFiltered:o[n],items:o.items,oldItems:g,scope:o})}find(e,t,r=!1){let s,i,o,l,n=this,a=[],u=n.isItem(e);for(s of(u&&(o=Object.entries(e),l=o.length),n.items))if(u){if(i=[],o.forEach(([e,t])=>{Neo.ns(e,!1,s)===t&&i.push(!0)}),i.length===l){if(r)return s;a.push(s)}}else if(Neo.ns(e,!1,s)===t){if(r)return s;a.push(s)}return r?null:a}findBy(e,t=this,r=0,s=this.count){let i=this,o=[],l=r;for(;l<s;l++)e.call(t,i.items[l])&&o.push(i.items[l]);return o}findFirst(e,t){return this.find(e,t,!0)}first(){return this.getAt(0)}get(e){return this.map.get(e)||null}getAt(e){return this._items[e]}getCount(){return this._count||0}getCountMutations(){return this[l]}getFilter(e){let t=this.filters||[],r=0,s=t.length;for(;r<s;r++)if(t[r].property===e)return t[r];return null}getKeyAt(e){let t=this._items[e];return t?.[this.keyProperty]}getRange(e,t){return this._items.slice(e,t)}getSource(){return this.sourceId&&Neo.get(this.sourceId)}has(e){return this.map.has(e)}hasItem(e){return this.map.has(e[this.keyProperty])}indexOf(e){let t=this;return t._items.indexOf(t.isItem(e)?e:t.map.get(e))}indexOfItem(e){return this._items.indexOf(e)}indexOfKey(e){return this._items.indexOf(this.map.get(e))}insert(e,t){return this.splice(e,0,t).addedItems}isFiltered(){return this[n]}isFilteredItem(e){let t=this._filters,r=0,s=t.length,i=!1;for(;r<s;r++)if(t[r].isFiltered(e)){i=!0;break}return i}isItem(e){return"object"==typeof e}isSorted(){return this[a]}last(){return this.getAt(this.count-1)}move(e,t){if(e===t)return;let r=this._items;e>=r.length&&(e=r.length-1);const s=r.splice(e,1)[0];r.splice(t,0,s)}onFilterChange(e){this.filter()}onMutate(e){this.preventBubbleUp=!0,this.splice(null,e.removedItems,e.addedItems)}onSorterChange(e){this.applySorterConfigs(),this.doSort()}pop(){return this.splice(this.count-1,1).removedItems[0]}push(e){return this.add(e)}remove(e){return this.splice(0,Array.isArray(e)?e:[e]),this.count}removeAt(e){return this.splice(e,1),this.count}reverse(){return this._items.reverse()}shift(){return this.splice(0,1).addedItems[0]}some(...e){return this._items.some(...e)}forEach(e,t){this._items.forEach(e,t)}splice(e,t,s){let i,o,n,a,p,h=this,{keyProperty:f,map:c}=h,d=h.getSource(),g=[],y=h._items,_=[],b=Neo.isNumber(t)?t:null,S=Array.isArray(t)?t:null;if(!Neo.isNumber(e)&&b&&r.error(h.id+": If index is not passed, removeCountAtIndex cannot be used"),s=s&&!Array.isArray(s)?[s]:s,S&&(a=S.length)>0)for(s&&s.length>0&&(p=s.map(e=>e[f])),i=0;i<a;i++)o=S[i],n=h.isItem(o)?o[f]:o,c.has(n)&&(!p||p&&p.indexOf(n)<0)&&(_.push(y.splice(h.indexOfKey(n),1)[0]),c.delete(n));else b&&b>0&&(0===e&&b===h.count?(_=y,h._items=[],c.clear()):(_=y.splice(e,b),_.forEach(e=>{c.delete(e[f])})));if(s&&(a=s.length)>0){for(i=0;i<a;i++)o=s[i],n=o[f],n||(o[f]=n=h.keyPropertyIndex,h.keyPropertyIndex--),c.has(n)||h.isFilteredItem(o)||(g.push(o),c.set(n,o));if(g.length>0){if(y&&0!==y.length){const t=Neo.isNumber(e)?e:y.length;if(g.length>5e3){const e=y.slice(0,t),r=y.slice(t);h._items=e.concat(g,r)}else y.splice(t,0,...g)}else h._items=g;h.autoSort&&h._sorters.length>0&&h.doSort()}}return d&&(d.getSource()||(d.preventBubbleUp=!0),h.preventBubbleUp||(h.startUpdate(!0),d.splice(null,S||_,s),h.endUpdate(!0)),delete d.preventBubbleUp),(g.length>0||_.length>0)&&h[l]++,0===h[m]?(h.count=h._items.length,h.fire("mutate",{addedItems:s,preventBubbleUp:h.preventBubbleUp,removedItems:S||_})):h[u]||h.cacheUpdate({addedItems:g,removedItems:_}),0===h[m]&&delete h.preventBubbleUp,{addedItems:g,removedItems:_}}startUpdate(e){e&&(this[u]=!0),this[m]++}unshift(e){return this.splice(0,0,e),this.count}}export default Neo.setupClass(f);