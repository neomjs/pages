import{buffer as e,debounce as t,intercept as s,resolveCallback as o,throttle as r}from"../util/Function.mjs";import i from"../core/Compare.mjs";import n from"../core/Util.mjs";import a from"./Config.mjs";import{isDescriptor as c}from"./ConfigSymbols.mjs";import l from"./IdGenerator.mjs";const d=Symbol.for("configSymbol"),g=Symbol("forceAssignConfigs"),m=Symbol("isInstance");class f{static delayable={};static instanceManagerAvailable=!1;static methodNameRegex=/\n.*\n\s+at\s+.*\.(\w+)\s+.*/;static observable=!1;static overwrittenMethods={};static config={className:"Neo.core.Base",ntype:"base",delayable:null,id_:null,interceptRemotes:null,isConstructed:!1,isReady_:!1,mixins:null,module:null,remote_:null};#e={};#t=[];construct(e={}){let t=this;Object.defineProperties(t,{[d]:{configurable:!0,enumerable:!1,value:{},writable:!0},[m]:{enumerable:!1,value:!0}}),t.id=e.id||l.getId(this.getIdKey()),delete e.id,t.getStaticConfig("observable")&&t.initObservable(e),e=t.setFields(e),t.initConfig(e),Object.defineProperty(t,"configsApplied",{enumerable:!1,value:!0}),t.applyDelayable(),s(t,"destroy",t.isDestroyedCheck,t),Promise.resolve().then(async()=>{await t.initAsync(),t.isReady=!0})}afterSetId(e,t){let s=this,o=!0===f.instanceManagerAvailable;t&&(o?Neo.manager.Instance.unregister(t):delete Neo.idMap[t]),e&&(o?Neo.manager.Instance.register(s):(Neo.idMap??={},Neo.idMap[s.id]=s))}applyDelayable(){let s=this,o=s.constructor.delayable,i=s.delayable?Neo.merge({},s.delayable,o):o;Object.entries(i).forEach(([o,i])=>{if(i){let n={buffer(){s[o]=new e(s[o],s,i.timer)},debounce(){s[o]=new t(s[o],s,i.timer)},throttle(){s[o]=new r(s[o],s,i.timer)}};n[i.type]?.()}})}static applyOverwrites(e){let t,s,o=Neo.ns(e.className,!1,Neo.overwrites);if(o){for(s in o)Neo.isFunction(o[s])&&(t=this.prototype,t[s]&&(t.constructor.overwrittenMethods[s]=t[s]));Object.assign(e,o)}}beforeSetEnumValue(e,t,s,o=s+"s"){let r=Array.isArray(o)?o:this.getStaticConfig(o);return r.includes(e)?e:(console.error(`Supported values for ${s} are:`,...r,this),t)}beforeSetRemote(e,t){let s=this;if(e&&!s.singleton&&!s.isMainThreadAddon)throw new Error("Remote method access is only functional for Singleton classes "+s.className);return e}bindCallback(e,t,s=this,r=this){if(e&&Neo.isString(e)){const i=o(e,s);r[t]=i.fn.bind(i.scope)}}callOverwritten(...e){let t=(new Error).stack.match(f.methodNameRegex)[1];this.__proto__.constructor.overwrittenMethods[t].call(this,...e)}destroy(){let e=this;e.#t.forEach(e=>{clearTimeout(e)}),!0===f.instanceManagerAvailable?Neo.manager.Instance.unregister(e):Neo.idMap&&delete Neo.idMap[e.id],Object.keys(e).forEach(t=>{Object.getOwnPropertyDescriptor(e,t).writable&&"destroy"!==t&&"_id"!==t&&delete e[t]}),Neo.isFunction(e.fire)&&(e.fire=Neo.emptyFn),e.isDestroyed=!0}getConfig(e){let t=this;return!t.#e[e]&&t.isConfig(e)&&(t.#e[e]=new a),t.#e[e]}getIdKey(){return this.ntype}getStaticConfig(e){return this.constructor[e]}hasNtype(e){return this.constructor.ntypeChain.includes(e)}init(){}async initAsync(){this.remote&&this.initRemote()}initConfig(e,t){let s=this;s.isConfiguring=!0,Object.assign(s[d],s.mergeConfig(e,t)),delete s[d].id,s.processConfigs(),s.isConfiguring=!1}initRemote(){let{className:e,remote:t}=this,{currentWorker:s}=Neo;Neo.config.unitTestMode||("main"!==Neo.workerId&&s.isSharedWorker&&!s.isConnected?s.on("connected",()=>{f.sendRemotes(e,t)},this,{once:!0}):f.sendRemotes(e,t))}isDestroyedCheck(){return!this.isDestroyed}isConfig(e){return Neo.hasPropertySetter(this,e)&&e in this.constructor.config}mergeConfig(e,t){let s=this,o=s.constructor;if(!o.config)throw new Error("Neo.applyClassConfig has not been run on "+s.className);return t||(s.originalConfig=Neo.clone(e,!0,!0)),{...o.config,...e}}onAfterConstructed(){let e=this;e.isConstructed=!0,e.getStaticConfig("observable")&&e.fire("constructed",e)}onConstructed(){}onInterceptRemotes(e){}parseItemConfigs(e){let t,s,o,r,i=this;e&&(Array.isArray(e)||(e=[e]),e.forEach(e=>{e&&Object.entries(e).forEach(([n,a])=>{Array.isArray(a)?i.parseItemConfigs(a):"string"==typeof a&&a.startsWith("@config:")&&(s=a.substring(8).trim().split("."),o=s.pop(),t=Neo.ns(s,!1,i),void 0===t[o]?console.error("The used @config does not exist:",o,s.join(".")):(r=Neo.ns(s,!1,i[d]),r&&Object.hasOwn(r,o)?e[n]=r[o]:e[n]=t[o]))})}))}processConfigs(e=!1){let t=this,s=Object.keys(t[d]);t[g]=e,s.length>0&&(!e&&t.hasOwnProperty(s[0])||(t[s[0]]=t[d][s[0]]),delete t[d][s[0]],t.processConfigs(e))}static sendRemotes(e,t){let s;Object.entries(t).forEach(([t,o])=>{Neo.workerId!==t&&(s="main"===Neo.workerId?Neo.worker.Manager:Neo.currentWorker,s.sendMessage(t,{action:"registerRemote",className:e,methods:o}))})}set(e={}){let t=this;e=t.setFields(e),!0!==t[g]&&Object.keys(t[d]).length>0&&t.processConfigs(),Object.assign(t[d],e),t.processConfigs(!0)}setFields(e){let t=this,s=t.constructor.config;return Object.entries(e).forEach(([o,r])=>{s.hasOwnProperty(o)||Neo.hasPropertySetter(t,o)||(t[o]=r,delete e[o])}),e}setStaticConfig(e,t){let s=this.constructor.staticConfig;return!!s.hasOwnProperty(e)&&(s[e]=t,!0)}timeout(e){return new Promise(t=>{let s=this.#t,o=setTimeout(()=>{s.splice(s.indexOf(o),1),t()},e);s.push(o)})}get[Symbol.toStringTag](){return`${this.className} (id: ${this.id})`}static[Symbol.hasInstance](e){return!!e&&(!0===e[m]&&super[Symbol.hasInstance](e))}}export default Neo.setupClass(f);