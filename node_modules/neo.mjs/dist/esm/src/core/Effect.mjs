import e from"./EffectManager.mjs";import n from"./EffectBatchManager.mjs";import s from"./IdGenerator.mjs";class i{dependencies=new Map;_fn=null;id=s.getId("effect");isDestroyed=!1;isRunning=!1;get fn(){return this._fn}set fn(e){this._fn=e,this.run()}constructor({fn:e}){this.fn=e}destroy(){const e=this;e.dependencies.forEach(e=>e()),e.dependencies.clear(),e.isDestroyed=!0}run(){const s=this;if(!s.isDestroyed&&!s.isRunning)if(n.isBatchActive())n.queueEffect(s);else{s.isRunning=!0,s.dependencies.forEach(e=>e()),s.dependencies.clear(),e.push(s);try{s.fn()}finally{e.pop(),s.isRunning=!1}}}addDependency(e){const n=this;if(!n.dependencies.has(e)){const s=e.subscribe({id:n.id,fn:n.run.bind(n)});n.dependencies.set(e,s)}}}Neo.ns("Neo.core",!0).Effect=i;export default i;