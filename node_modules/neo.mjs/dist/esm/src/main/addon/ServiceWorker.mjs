import e from"./Base.mjs";import r from"../../worker/Manager.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.ServiceWorker"};construct(e){super.construct(e),this.registerServiceWorker()}async registerServiceWorker(){if("serviceWorker"in navigator){let e=this,{config:o}=Neo,s="development"===o.environment,a=s?"ServiceWorker.mjs":"serviceworker.js",i=window.location.pathname.includes("/examples/")?"examples/":"apps/",n=s?{type:"module"}:{},t=(s?o.basePath:o.workerBasePath)+(s?i:"")+a,{serviceWorker:c}=navigator,d=await c.register(t,n);window.addEventListener("beforeunload",e.onBeforeUnload.bind(e)),d.addEventListener("updatefound",(()=>{window.location.reload()})),await c.ready,c.onmessage=r.onWorkerMessage.bind(r),r.getWorker("service")||(r.serviceWorker=d.active),r.sendMessage("service",{action:"registerNeoConfig",data:o})}}onBeforeUnload(){r.sendMessage("service",{action:"unregisterPort"})}});