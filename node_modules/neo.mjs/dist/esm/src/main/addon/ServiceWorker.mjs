import e from"./Base.mjs";import r from"../../worker/Manager.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.ServiceWorker"};construct(e){super.construct(e),this.registerServiceWorker()}async registerServiceWorker(){if("serviceWorker"in navigator){let e,o=this,{config:s}=Neo,{environment:i}=s,t="dist/esm"===i,a="development"===i||t,n=a?"ServiceWorker.mjs":"serviceworker.js",c=a?{type:"module"}:{},d=(a?s.basePath:s.workerBasePath)+n,{serviceWorker:v}=navigator;t&&(d=d.substring(6)),e=await v.register(d,c),window.addEventListener("beforeunload",o.onBeforeUnload.bind(o)),e.addEventListener("updatefound",(()=>{window.location.reload()})),await v.ready,v.onmessage=r.onWorkerMessage.bind(r),r.getWorker("service")||(r.serviceWorker=e.active),r.sendMessage("service",{action:"registerNeoConfig",data:s})}}onBeforeUnload(){r.sendMessage("service",{action:"unregisterPort"})}});