import e from"./Base.mjs";import t from"../DomAccess.mjs";import a from"../DomEvents.mjs";class o extends e{static config={className:"Neo.main.addon.MonacoEditor",interceptRemotes:["createInstance","destroyInstance","getValue","layoutEditor","setLanguage","setTheme","setValue","updateOptions"],libraryBasePath:Neo.config.basePath+"node_modules/monaco-editor/min/vs",remote:{app:["createInstance","destroyInstance","getValue","layoutEditor","setLanguage","setTheme","setValue","updateOptions"]}};map={};createInstance(e){let a,o=this,{id:s}=e,n=t.getElement(s);delete e.appName,delete e.id,n?(a=o.map[s]=monaco.editor.create(n,e),a.getModel().onDidChangeContent(o.onContentChange.bind(o,s))):"development"===Neo.config.environment&&console.warn(`addon.MonacoEditor: node ${s} not found`)}destroyInstance(e){delete this.map[e.id]}getValue(e){return this.map[e.id].getModel().getValue()}layoutEditor(e){this.map[e.id].layout()}async loadFiles(){let e=this.libraryBasePath;window.require={paths:{vs:e}},await t.loadScript(e+"/loader.js"),await Promise.all([t.loadStylesheet(e+"/editor/editor.main.css",{name:"vs/editor/editor.main"}),t.loadScript(e+"/editor/editor.main.nls.js"),t.loadScript(e+"/editor/editor.main.js")])}onContentChange(e,o){let s=t.getElement(e),n=a.getPathFromElement(s).map(e=>a.getTargetData(e));a.sendMessageToApp({event:o,id:e,path:n,type:"editorChange",value:this.map[e].getModel().getValue()})}setLanguage(e){this.map[e.id].getModel().setLanguage(e.value)}setTheme(e){this.map[e.id]._themeService.setTheme(e.value)}setValue(e){this.map[e.id].getModel().setValue(e.value)}updateOptions(e){this.map[e.id].updateOptions(e.options)}}export default Neo.setupClass(o);