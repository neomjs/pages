import e from"./Base.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.WindowPosition",adjustWindowPositions:!1,intervalId:null,intervalTime:20,observeResize_:!1,remote:{app:["registerWindow","setConfigs","setDock","unregisterWindow"]},screenLeft:null,screenTop:null,windows:{}};resizeListener=null;construct(e){super.construct(e);let t=this,{screenLeft:i,screenTop:o}=window;t.screenLeft=i,t.screenTop=o,window.addEventListener("mouseout",t.onMouseOut.bind(t))}afterSetObserveResize(e,t){let i=this;i.resizeListener||(i.resizeListener=i.onResize.bind(i)),window[e?"addEventListener":"removeEventListener"]("resize",i.resizeListener)}adjustPositions(){Object.entries(this.windows).forEach((([e,t])=>{let{left:i,top:o}=this.getPosition(t);Neo.Main.windowMoveTo({windowName:e,x:i,y:o})}))}checkMovement(){let e,t=this,{Manager:i}=Neo.worker,o=window,{screenLeft:n,screenTop:s}=o;t.screenLeft===n&&t.screenTop===s||(e=Neo.Main.getWindowData(),t.adjustWindowPositions&&t.adjustPositions(),i.sendMessage("app",{action:"windowPositionChange",data:{appName:i.appName,...e}}),t.screenLeft=n,t.screenTop=s)}dockDirectionChange(e,t){return!(("bottom"!==e&&"top"!==e||"left"!==t&&"right"!==t)&&("bottom"!==t&&"top"!==t||"left"!==e&&"right"!==e))}getPosition(e){let t,i,{size:o}=e,n=window,{screenLeft:s,screenTop:r}=n;switch(e.dock){case"bottom":t=s,i=n.outerHeight+r-62;break;case"left":t=s-o,i=r+24;break;case"right":t=n.outerWidth+s,i=r+24;break;case"top":t=s,i=r-o+86}return{left:t,top:i}}onMouseOut(e){let t=this;e.toElement?t.intervalId&&(clearInterval(t.intervalId),t.intervalId=null):t.intervalId||(t.intervalId=setInterval(t.checkMovement.bind(t),t.intervalTime))}onResize(e){let t,i,o=this,n=window;Object.entries(o.windows).forEach((([e,s])=>{switch(s.dock){case"bottom":case"top":i=n.outerWidth;break;case"left":case"right":t=n.outerHeight-28}o.adjustWindowPositions&&(Neo.Main.windowResizeTo({height:t,width:i,windowName:e}),o.adjustPositions())}))}registerWindow(e){this.windows[e.name]=e}setConfigs(e){delete e.appName,this.set(e)}setDock(e){let t,i,o=this,{dock:n,name:s}=e,r=o.windows[s];r&&(t=o.dockDirectionChange(n,r.dock),r.dock=n,i=o.getPosition(r),t&&Neo.Main.windowResizeTo({height:"bottom"===n||"top"===n?r.size:window.outerHeight-28,width:"left"===n||"right"===n?r.size:window.outerWidth,windowName:s}),Neo.Main.windowMoveTo({windowName:s,x:i.left,y:i.top}))}unregisterWindow(e){delete this.windows[e.name]}});