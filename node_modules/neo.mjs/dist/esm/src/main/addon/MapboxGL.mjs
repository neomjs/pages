import e from"./Base.mjs";import a from"../DomAccess.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.MapboxGL",dataMap:{},downloadPath:"https://api.mapbox.com/mapbox-gl-js/",layers:{},maps:{},mapsToCreate:[],remote:{app:["addLayers","addSources","autoResize","center","create","destroy","setFilter","setLayoutProperty","setPaintProperty","setStyle","updateData","zoom"]},scriptsLoaded_:!1,sources:{},styleMap:{},version:"v1.9.1",zoomMap:{}};construct(e){super.construct(e),this.insertMapboxGLScripts()}addLayers(e){let a,t=this,s=t.maps[e.id];s?e.layers.forEach((e=>{a=e.beforeId,delete e.beforeId,s.addLayer(e,a)})):t.layers[e.id]=Object.assign(t.layers[e.id]||{},e)}addSources(e){let a,t=this,s=t.maps[e.id];s?e.sources.forEach((e=>{a=e.id,delete e.id,s.addSource(a,e)})):t.sources[e.id]=Object.assign(t.sources[e.id]||{},e)}afterSetScriptsLoaded(e,a){if(e){let e=this;e.mapsToCreate.forEach((a=>{e.create(a)})),e.mapsToCreate=[]}}applyStyleObject(e,a,t){t&&(this.styleMap[t]=a),a.layers.forEach((a=>{Object.entries(a.paint).forEach((([t,s])=>{e.setPaintProperty(a.id,t,s)}))}))}autoResize(e){let a=this.maps[e.id];a&&this.timeout(100).then((()=>{a.resize()}))}center(e){let a=this.maps[e.id],t={lat:e.lat,lng:e.lng};a&&(e.animate?a.flyTo({center:t}):a.setCenter(t))}create(e){let a=this;if(a.scriptsLoaded){mapboxgl.accessToken=e.accessToken;let t=e.zoom;a.zoomMap[e.id]&&(t=a.zoomMap[e.id].zoom,delete a.zoomMap[e.id]),a.maps[e.id]=new mapboxgl.Map({center:e.center,container:e.id,style:e.mapboxStyle,zoom:t}),a.maps[e.id].on("load",a.onMapLoaded.bind(a,e))}else a.mapsToCreate.push(e)}destroy(e){this.maps[e.id].remove(),delete this.maps[e.id]}hasMap(e){return!!this.maps[e]}insertMapboxGLScripts(){let e=this,t=e.downloadPath+e.version+"/";Promise.all([a.loadScript(t+"mapbox-gl.js"),a.loadStylesheet(t+"mapbox-gl.css")]).then((()=>{e.scriptsLoaded=!0}))}onMapLoaded(e,a){let t=this,s=e.id;e.sources?t.addSources({id:e.id,sources:e.sources}):t.sources[s]&&(t.addSources(t.sources[s]),delete t.sources[s]),e.layers?t.addLayers({id:e.id,layers:e.layers}):t.layers[s]&&(t.addLayers(t.layers[s]),delete t.layers[s]),a.target.loaded()?t.onMapReallyLoaded(e,a):a.target.once("idle",t.onMapReallyLoaded.bind(t,e))}onMapReallyLoaded(e,a){let t=this;t.timeout(100).then((()=>{e.data?t.updateData({data:e.data,dataSourceId:e.dataSourceId,id:e.id}):t.dataMap[e.id]&&t.updateData(t.dataMap[e.id])}))}setFilter(e){let a=this.maps[e.id];a&&a.setFilter(e.layerId,e.value,e.options||{})}setLayoutProperty(e){let a=this.maps[e.id];a&&a.setLayoutProperty(e.layerId,e.key,e.value,e.options||{})}setPaintProperty(e){let a=this.maps[e.id];a&&a.setPaintProperty(e.layerId,e.key,e.value,e.options||{})}setStyle(e){let a=this;a.scriptsLoaded&&a.hasMap(e.id)&&Neo.isString(e.style)&&(0===e.style.indexOf("mapbox://styles/")&&(e.style=e.style.substring(16)),a.styleMap[e.style]?a.applyStyleObject(a.maps[e.id],a.styleMap[e.style]):fetch(`https://api.mapbox.com/styles/v1/${e.style}?access_token=${e.accessToken}`).then((e=>e.json())).then((t=>a.applyStyleObject(a.maps[e.id],t,e.style))))}updateData(e){let a=this;if(a.scriptsLoaded&&a.hasMap(e.id)){let t=a.maps[e.id].getSource(e.dataSourceId);t?(t.setData(e.data),delete a.dataMap[e.id]):a.dataMap[e.id]=e}else a.dataMap[e.id]=e}zoom(e){let a=this.maps[e.id];a?a.setZoom(e.zoom):this.zoomMap[e.id]=e}});