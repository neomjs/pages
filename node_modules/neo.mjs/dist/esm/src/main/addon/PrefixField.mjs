import e from"./Base.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.PrefixField",accept_:null,pattern_:null,remote:{app:["initialize","destroy","updateAccept","updatePattern","updateSlots"]},slots_:null};elIds=new Map;prev;back=!1;destroy(){}initialize(e){const t=this;t.elId=e.elId;t.el=document.getElementById(e.elId);const s=t.pattern=e.pattern,n=t.slots=new Set(e.slots||"_");var a;t.accept=e.accept,t.prev=(a=0,Array.from(s,((e,t)=>n.has(e)?a=t+1:a))),t.first=[...s].findIndex((e=>n.has(e))),t.addListeners(),t.addCss()}addCss(){this.el.classList.add("tiny-prefix-field-input")}addListeners(){const e=this,t=e.el,s=e.format.bind(e);t.addEventListener("keypress",e.onKeyDown.bind(e)),t.addEventListener("input",s),t.addEventListener("focusin",s),t.addEventListener("focusout",e.onBlur.bind(e))}onBlur(){const e=this.pattern,t=this.el;return t.value===e&&(t.value="")}onKeyDown(e){this.back="Backspace"===e.key}clean(e){this.el;const t=new RegExp(this.accept||"\\d","g"),s=this.pattern,n=this.slots;return e=e.match(t)||[],Array.from(s,(t=>(e[0]===t||n.has(t))&&e.shift()||t))}format(){const e=this,t=this.el,s=this.prev,n=this.clean.bind(this);console.log(t.selectionStart,t.selectionEnd);const[a,i]=[t.selectionStart,t.selectionEnd].map((a=>(a=n(t.value.slice(0,a)).findIndex((t=>e.slots.has(t))))<0?s[s.length-1]:e.back?s[a-1]||e.first:a));t.value=n(t.value).join``,t.setSelectionRange(a,i),this.back=!1}});