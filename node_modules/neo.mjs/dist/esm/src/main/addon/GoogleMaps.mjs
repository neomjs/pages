import e from"./Base.mjs";import o from"../DomAccess.mjs";import a from"../DomEvents.mjs";import s from"../../core/Observable.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.main.addon.GoogleMaps",mixins:[s],remote:{app:["addMarker","create","destroyMarkers","geocode","hideMarker","panTo","removeMap","removeMarker","setCenter","setZoom","showMarker"]}};geoCoder=null;maps={};markers={};construct(e){super.construct(e),this.loadApi()}addMarker(e){let o,a,s=this,{mapId:r}=e;s.maps[r]?(Neo.ns(`${r}`,!0,s.markers),s.markers[r][e.id]=a=new google.maps.Marker({icon:e.icon,label:e.label,map:s.maps[r],neoId:e.id,neoMapId:r,position:e.position,title:e.title}),a.addListener("click",s.onMarkerClick.bind(s,a))):o=s.on("mapCreated",(a=>{r===a&&(s.un(o),s.addMarker(e))}))}create(e){let a,s=this,{id:r}=e;s.maps[r]=a=new google.maps.Map(o.getElement(r),{center:e.center,fullscreenControl:e.fullscreenControl,maxZoom:e.maxZoom,minZoom:e.minZoom,zoom:e.zoom,zoomControl:e.zoomControl,...e.mapOptions}),a.addListener("zoom_changed",s.onMapZoomChange.bind(s,a,r)),s.fire("mapCreated",r)}destroyMarkers(e){let o=this.markers[e.mapId]||{};Object.values(o).forEach((e=>e.setMap(null))),delete this.markers[e.mapId]}async geocode(e){let o,a=this;return a.geoCoder||(a.geoCoder=new google.maps.Geocoder),o=await a.geoCoder.geocode(e),JSON.parse(JSON.stringify(o))}hideMarker(e){this.markers[e.mapId][e.id].setMap(null)}loadApi(){let e=Neo.config.googleMapsApiKey;o.loadScript(` https://maps.googleapis.com/maps/api/js?key=${e}&v=weekly&callback=Neo.emptyFn`).then((()=>{console.log("GoogleMaps API loaded")}))}onMapZoomChange(e,o){a.sendMessageToApp({id:o,path:[{cls:[],id:o}],type:"googleMapZoomChange",value:e.zoom})}onMarkerClick(e,o){let s=a.getMouseEventData(o.domEvent);a.sendMessageToApp({id:e.neoId,path:[{cls:[],id:e.neoMapId}],type:"googleMarkerClick",domEvent:s})}panTo(e){this.maps[e.mapId].panTo(e.position)}removeMap(e){delete this.maps[e.mapId],delete this.markers[e.mapId]}removeMarker(e){let o=this.markers[e.mapId];o[e.id].setMap(null),delete o[e.id]}setCenter(e){this.maps[e.id].setCenter(e.value)}setZoom(e){this.maps[e.id].setZoom(e.value)}showMarker(e){this.markers[e.mapId][e.id].setMap(this.maps[e.mapId])}});