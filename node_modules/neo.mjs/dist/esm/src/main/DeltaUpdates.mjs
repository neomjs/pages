import e from"../core/Base.mjs";import t from"./DomAccess.mjs";import{voidAttributes as n}from"../vdom/domConstants.mjs";const r=Neo.config;export default Neo.setupClass(class extends e{static config={className:"Neo.main.DeltaUpdates",countDeltas:0,countDeltasPer250ms:0,countUpdates:0,renderCountDeltas_:!1,singleton:!0};logDeltasIntervalId=0;construct(e){super.construct(e);let{environment:t}=r;r.renderCountDeltas&&(this.renderCountDeltas=!0),"dist/development"!==t&&"dist/production"!==t||(__webpack_require__.p=r.basePath.substring(6))}afterSetRenderCountDeltas(e,t){let n,r=this,{logDeltasIntervalId:o}=r;e?0===o&&(r.logDeltasIntervalId=setInterval(()=>{n=document.getElementById("neo-delta-updates"),n&&(n.innerHTML=String(4*r.countDeltasPer250ms)),r.countDeltasPer250ms=0},250)):(o&&clearInterval(o),r.logDeltasInterval=0)}changeNodeName(e,t){let n,{attributes:r}=e,o=document.createElement(t),a=0,i=r.length;if(e){for(;a<i;a++)n=r.item(a),o.setAttribute(n.nodeName,n.nodeValue);o.innerHTML=e.innerHTML,e.parentNode.replaceChild(o,e)}}focusNode({id:e}){t.getElement(e)?.focus()}async importRenderer(){const{render:e}=Neo.main;r.useDomApiRenderer?e?.DomApiRenderer||await import("./render/DomApiRenderer.mjs"):e?.StringBasedRenderer||await import("./render/StringBasedRenderer.mjs")}async initAsync(){super.initAsync();let e=this;Neo.worker.Manager.on({neoConfigChange:e.onNeoConfigChange,scope:e}),await e.importRenderer()}insertNode({hasLeadingTextChildren:e,index:n,outerHTML:o,parentId:a,vnode:i}){this.checkRendererAvailability();let{render:s}=Neo.main,d=t.getElementOrBody(a);d&&(r.useDomApiRenderer?s.DomApiRenderer.createDomTree({index:n,isRoot:!0,parentNode:d,vnode:i}):s.StringBasedRenderer.insertNodeAsString({hasLeadingTextChildren:e,index:n,outerHTML:o,parentNode:d}))}checkRendererAvailability(){const{render:e}=Neo.main;if(r.useDomApiRenderer){if(!e?.DomApiRenderer)throw new Error("Neo.main.DeltaUpdates: DomApiRenderer is not loaded yet!")}else if(!e?.StringBasedRenderer)throw new Error("Neo.main.DeltaUpdates: StringBasedRenderer is not loaded yet!")}moveNode({id:e,index:n,parentId:r}){let o=t.getElement(e),a=t.getElement(r);if(o&&a)if(n>=a.childNodes.length)a.appendChild(o);else{let e=a.childNodes[n];o!==e&&(1===o.nodeType&&o===e.nextElementSibling&&o.replaceWith(e),a.insertBefore(o,e))}}async onNeoConfigChange(e){Object.hasOwn(e,"useDomApiRenderer")&&await this.importRenderer()}removeAll({parentId:e}){let n=t.getElement(e);n&&(n.innerHTML="")}removeNode({id:e,parentId:n}){const r=t.getElement(e);if(r)r.remove();else if(n){const r=t.getElementOrBody(n),o=Node.COMMENT_NODE;if(r){const t=Array.from(r.childNodes).find(t=>t.nodeType===o&&t.nodeValue.includes(` ${e} `));if(t){const e=t.nextSibling,n=e?.nextSibling?.nodeType===o?e.nextSibling:null;t.remove(),e?.remove(),n?.remove()}}}}replaceChild({fromId:e,parentId:n,toId:r}){let o=t.getElement(n);o?.replaceChild(t.getElement(r),t.getElement(e))}updateNode(e){let o=this,a=t.getElementOrBody(e.id);a&&Object.entries(e).forEach(([e,t])=>{switch(e){case"attributes":Object.entries(t).forEach(([e,t])=>{n.has(e)?a[e]="true"===t:null===t||""===t?"value"===e?a[e]="":a.removeAttribute(e):"id"===e?a[r.useDomIds?"id":"data-neo-id"]=t:"spellcheck"===e&&"false"===t?a[e]=!1:"value"===e?a[e]=t:a.setAttribute(e,t)});break;case"cls":t.add&&a.classList.add(...t.add),t.remove&&a.classList.remove(...t.remove);break;case"innerHTML":a.innerHTML=t||"";break;case"nodeName":o.changeNodeName(a,t);break;case"outerHTML":a.outerHTML=t||"";break;case"style":Neo.isObject(t)&&Object.entries(t).forEach(([e,t])=>{let n;Neo.isString(t)&&t.includes("!important")&&(t=t.replace("!important","").trim(),n="important"),a.style.setProperty(Neo.decamel(e),t,n)});break;case"textContent":a.textContent=t}})}updateVtext({id:e,parentId:n,value:r}){let o=t.getElement(n),a=o.innerHTML,i=new RegExp(`\x3c!-- ${e} --\x3e`+"[\\s\\S]*?\x3c!-- /neo-vtext --\x3e");o.innerHTML=a.replace(i,r)}update(e){this.checkRendererAvailability();let t,n=this,{deltas:o}=e,a=0;for(o=Array.isArray(o)?o:[o],t=o.length,r.logDeltaUpdates&&t>0&&(n.countDeltas+=t,n.countUpdates++,console.log("update "+n.countUpdates,"total deltas ",n.countDeltas,Neo.clone(e,!0))),r.renderCountDeltas&&t>0&&(n.countDeltasPer250ms+=t);a<t;a++)n[o[a].action||"updateNode"](o[a]);Neo.worker.Manager.sendMessage(e.origin||"app",{action:"reply",replyId:e.id,success:!0})}});