import e from"./Base.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.plugin.PrefixField",ntype:"plugin-prefixfield",inputCls:"neo-prefixfield-input",labelCls:"neo-prefixfield-label",ownerCls:"neo-prefixfield",accept_:null,pattern_:null,slots_:null};first=null;prev=null;selection=null;ignoreSelection=!1;back=!1;construct(e){super.construct(e),this.addListeners(),this.addCss()}addCss(){const e=this,{owner:t}=e,s=t.getInputEl(),n=t.getLabelEl();t.addCls(e.ownerCls),s.cls.push(e.inputCls),n.cls.push(e.labelCls)}addListeners(){let e=this,{owner:t}=e;t.addDomListeners([{keydown:e.onFieldKeyDown,scope:e},{focusin:e.onFieldFocus,scope:e},{focusout:e.onFieldBlur,scope:e},{selectionchange:e.onFieldSelectionChange,scope:e}]),e.owner.on("mounted",(()=>{Neo.currentWorker.insertThemeFiles(t.windowId,e.__proto__)}),e,{once:!0})}afterSetAccept(e,t){this.owner.value&&this.format()}afterSetPattern(e,t){this.owner.placeholderText=e,this.recalcFirstAndPref()}afterSetSlots(e,t){this.recalcFirstAndPref()}beforeSetSlots(e){return new Set(e||"_")}clean(e){const t=this,s=new RegExp(this.accept||"\\d","g");return e=e.match(s)||[],(e=Array.from(t.pattern,(s=>(e[0]===s||t.slots.has(s))&&e.shift()||s))).slice(0,t.pattern.length)}format(){let e=this,t=e.owner,{prev:s,selection:n}=e,l=e.clean.bind(e),o=t.value||"";const[i,r]=[n.start,n.end].map((t=>(t=e.clean(o.slice(0,t)).findIndex((t=>e.slots.has(t))))<0?s[s.length-1]:e.back?s[t-1]||e.first:t));t.value=l(o).join``,e.ignoreSelection=!0,Neo.main.DomAccess.selectNode({id:t.getInputElId(),start:i,end:r}),e.ignoreSelection=!1,e.back=!1}onFieldBlur(e){let{owner:t,pattern:s}=this;return t.value===s&&(t.value="")}onFieldFocus(e){this.format()}onFieldKeyDown(e){this.back="Backspace"===e.key}onFieldSelectionChange(e){let t=this.selection,s=e.selection;this.ignoreSelection||s.start===t.start&&s.end===t.end||(this.selection=s,this.format())}recalcFirstAndPref(){let e=this,{pattern:t,slots:s}=e;var n;e.prev=(n=0,Array.from(t,((e,t)=>s.has(e)?n=t+1:n))),e.first=[...t].findIndex((e=>s.has(e))),e.selection={start:e.first,end:e.first},e.owner.value&&e.format()}});