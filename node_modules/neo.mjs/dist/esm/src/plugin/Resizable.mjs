import e from"../draggable/DragZone.mjs";import t from"../util/Array.mjs";import o from"./Base.mjs";class n extends o{static cursorPositions=["s","sw","se","w","e","n","nw","ne"];static nameRegEx=/-([a-z])/g;static positions=["bottom","bottom-left","bottom-right","left","right","top","top-left","top-right"];static validDirections=["b","bl","br","l","r","t","tl","tr"];static config={className:"Neo.plugin.Resizable",ntype:"plugin-resizable",appName_:null,boundaryContainerId:"document.body",boundaryContainerRect:null,currentNodeName:null,delegationCls:null,directions_:["b","bl","br","l","r","t","tl","tr"],dragZone:null,dragZoneConfig:null,gap:10,initialRect:null,isDragging:!1,maxHeight:null,maxWidth:null,minHeight:200,minWidth:200,nodeBottom:null,nodeBottomLeft:null,nodeBottomRight:null,nodeLeft:null,nodeRight:null,nodeTop:null,nodeTopLeft:null,nodeTopRight:null,targetNode:null};construct(e){super.construct(e);let t=this;t.owner.addDomListeners([{"drag:end":t.onDragEnd,scope:t,delegate:".neo-resizable"},{"drag:move":t.onDragMove,scope:t,delegate:".neo-resizable"},{"drag:start":t.onDragStart,scope:t,delegate:".neo-resizable"},{mousedown:t.onMouseDown,scope:t,delegate:".neo-resizable"},{mousemove:t.onMouseMove,scope:t,local:!0},{mouseleave:t.onMouseLeave,scope:t,delegate:`.${t.delegationCls}`},{mouseup:t.onMouseUp,scope:t,delegate:".neo-resizable"}])}addBodyCursorCls(){Neo.applyDeltas(this.appName,{id:"document.body",cls:{add:[`neo-cursor-${n.cursorPositions[n.positions.indexOf(this.currentNodeName)]}-resize`],remove:[]}})}addNode(e){let t=this,o="node"+Neo.capitalize(e.replace(n.nameRegEx,((e,t)=>t.toUpperCase()))),{targetNode:r}=t;return!!r&&(t.currentNodeName=e,t[o]={cls:["neo-resizable",`neo-resizable-${e}`]},r.cn=r.cn||[],r.cn.push(t[o]),!0)}afterSetAppName(e,t){this.dragZone&&(this.dragZone.appName=e)}afterSetWindowId(e,t){let o=this;e&&Neo.currentWorker.insertThemeFiles(e,o.__proto__),o.dragZone&&(o.dragZone.windowId=e)}beforeSetDirections(e,t){if(Array.isArray(e)){let o=0,n=e.length;for(;o<n;o++)if(this.beforeSetEnumValue(e[o],t,"directions","validDirections")!==e[o])return t}return e}onDragEnd(e){let t=this,{owner:o}=t,n=o.wrapperStyle;Object.assign(t,{boundaryContainerRect:null,initialRect:null,isDragging:!1}),Object.assign(n,{opacity:1,transform:"none",...t.dragZone.dragProxy.wrapperStyle}),o.wrapperStyle=n,t.removeBodyCursorCls(),t.dragZone.dragEnd(),t.removeAllNodes(),o.focus(o.id,!0)}onDragMove(e){let t,o,n,r=this,a=r.currentNodeName,i=r.boundaryContainerRect,{maxHeight:d,maxWidth:l,minHeight:s,minWidth:g}=r,m=r.initialRect;a?r.dragZone.dragProxy&&(n=r.dragZone.dragProxy.wrapperStyle,a.includes("bottom")?(o=Math.max(s,e.clientY-m.top),d&&(o=Math.min(o,d)),i&&(o=Math.min(o,i.bottom-m.top)),n.height=`${o}px`):a.includes("top")&&(t=Math.min(m.bottom-s,e.clientY),o=Math.max(s,m.height+m.top-e.clientY),d&&(t=Math.max(t,m.bottom-d),o=Math.min(o,d)),i&&(t=Math.max(t,i.top),o=Math.min(o,m.bottom-i.top)),n.height=`${o}px`,n.top=`${t}px`),a.includes("left")?(t=Math.min(m.right-g,e.clientX),o=Math.max(g,m.width+m.left-e.clientX),l&&(t=Math.max(t,m.right-l),o=Math.min(o,l)),i&&(t=Math.max(t,i.left),o=Math.min(o,m.right-i.left)),n.left=`${t}px`,n.width=`${o}px`):a.includes("right")&&(o=Math.max(g,m.width-m.right+e.clientX),l&&(o=Math.min(o,l)),i&&(o=Math.min(o,i.right-m.left)),n.width=`${o}px`),r.dragZone.dragProxy.wrapperStyle=n):r.onDragEnd({})}onDragStart(t){let o,n,r,a=this,i=a.boundaryContainerId,d=0,l=t.path.length,{appName:s,owner:g,windowId:m}=a,c=g.wrapperStyle;for(a.isDragging=!0,c.opacity=.3,g.wrapperStyle=c;d<l;d++)if(o=t.path[d],o.cls.includes(a.delegationCls)&&(a.initialRect=o.rect),i&&("document.body"===i&&"body"===o.tagName||i===o.id)){a.boundaryContainerRect=o.rect;break}a.boundaryContainerRect||g.getDomRect(a.boundaryContainerRect).then((e=>{a.boundaryContainerRect=e})),a.addBodyCursorCls(),a.dragZone?a.dragZone.boundaryContainerId=g.boundaryContainerId:(n=Neo.clone(g.vdom,!0),r=n.style,delete n.height,delete n.width,delete r.height,delete r.left,delete r.top,delete r.width,r.opacity=.7,a.dragZone=Neo.create({module:e,appName:s,boundaryContainerId:g.boundaryContainerId,dragElement:n,moveInMainThread:!1,owner:g,windowId:m,...a.dragZoneConfig})),a.dragZone.dragStart(t)}onMouseDown(e){this.isDragging=!0}onMouseMove(e){let t,o,n,r,a,i=this,d=i.directions,l=0,{gap:s,owner:g,targetNode:m}=i,c=!1,p=e.path.length;if(!i.isDragging&&!g.isDragging){for(;l<p;l++)if(e.path[l].cls.includes(i.delegationCls)){r=e.path[l];break}r&&(r.id!==m?.id&&(m&&i.removeAllNodes(),i.targetNode=g.getVdomChild(r.id)),t=e.clientY>=r.rect.y-s+r.rect.height,o=e.clientX<=r.rect.x+s,n=e.clientX>=r.rect.x-s+r.rect.width,a=e.clientY<=r.rect.y+s,i.nodeBottom&&(!t||t&&o||t&&n)&&(c=i.removeNode("bottom")),i.nodeLeft&&(!o||t&&o||a&&o)&&(c=i.removeNode("left")),i.nodeRight&&(!n||t&&n||a&&n)&&(c=i.removeNode("right")),i.nodeTop&&(!a||a&&o||a&&n)&&(c=i.removeNode("top")),!i.nodeBottomLeft||t&&o||(c=i.removeNode("bottom-left")),!i.nodeBottomRight||t&&n||(c=i.removeNode("bottom-right")),!i.nodeTopLeft||a&&o||(c=i.removeNode("top-left")),!i.nodeTopRight||a&&n||(c=i.removeNode("top-right")),d.includes("bl")&&t&&o?i.nodeBottomLeft||(c=i.addNode("bottom-left")):d.includes("br")&&t&&n?i.nodeBottomRight||(c=i.addNode("bottom-right")):d.includes("tl")&&a&&o?i.nodeTopLeft||(c=i.addNode("top-left")):d.includes("tr")&&a&&n?i.nodeTopRight||(c=i.addNode("top-right")):d.includes("b")&&t?i.nodeBottom||(c=i.addNode("bottom")):d.includes("l")&&o?i.nodeLeft||(c=i.addNode("left")):d.includes("r")&&n?i.nodeRight||(c=i.addNode("right")):d.includes("t")&&a&&(i.nodeTop||(c=i.addNode("top"))),c&&g.update())}}onMouseLeave(e){let t=this;t.isDragging||t.owner.isDragging||e.path[0].cls.includes(t.delegationCls)&&t.removeAllNodes()}onMouseUp(e){this.isDragging=!1}removeAllNodes(){let e=this;e.currentNodeName&&(e.removeNode(e.currentNodeName),e.owner.update(),e.currentNodeName=null,e.targetNode=null)}removeBodyCursorCls(){Neo.applyDeltas(this.appName,{id:"document.body",cls:{add:[],remove:[`neo-cursor-${n.cursorPositions[n.positions.indexOf(this.currentNodeName)]}-resize`]}})}removeNode(e){let o=this,r="node"+Neo.capitalize(e.replace(n.nameRegEx,((e,t)=>t.toUpperCase())));return!!o[r]&&(o.currentNodeName=null,t.remove(o.targetNode.cn,o[r]),o[r]=null,!0)}}export default Neo.setupClass(n);