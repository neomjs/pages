import e from"./Base.mjs";import t from"../util/Array.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.component.Timer",ntype:"timer",baseCls:["neo-timer"],colorEnd_:null,colorStart_:null,duration_:"10m",dimensions_:"8em",timer:{currentSecond:null,intervalId:null,running:!1,startTime:null},vdom:{cn:[{cls:"countdown",cn:[{tag:"svg",cls:"clock",viewBox:"-50 -50 100 100",strokeWidth:"10",cn:[{tag:"circle",r:45},{tag:"circle",r:45,pathLength:1}]},{cls:["flip-card"],cn:[{cls:"flip-card-inner enter-mask",cn:[{cls:"flip-card-front",cn:[{tag:"input",cls:"enter-time"},{tag:"button",cls:"fa fa-play"}]},{cls:"flip-card-back",cn:[{cls:"runner",html:"00:00"}]}]}]}]}]}};construct(e){super.construct(e);let t=this;t.addDomListeners([{click:t.onTimerClick,delegate:"flip-card-back"},{click:t.onTimerClick,delegate:"fa fa-play"},{input:t.onTimerInput,delegate:"enter-time"},{focusout:t.onTimerInput,delegate:"enter-time"},{keydown:t.onFieldKeyDown,delegate:"enter-time"}])}afterSetDimensions(e,t){"number"==typeof e&&(e+="px"),this.updateProperties({dimensions:e})}afterSetColorStart(e,t){e&&this.updateProperties({colorStart:e})}afterSetColorEnd(e,t){e&&this.updateProperties({colorEnd:e})}beforeSetDuration(e,t){let r;return this.updateInputField(e),Neo.isString(e)&&(r=e.at(-1),"m"===r?e=60*e.split("m")[0]*1e3:"s"===r&&(e=1e3*e.split("s")[0])),this.updateProperties({full:e}),e}onFieldKeyDown(e){let t=this;"Enter"===e.key&&(t.duration=t.timer.entry,t.onTimerClick())}onTimerClick(){let e=this;e.timer.intervalId?(e.toggleTimer(!1),e.resetTimer()):(e.timer.startTime=(new Date).getTime(),e.timer.intervalId=setInterval((function(){const t=e.timer.startTime,r=(new Date).getTime(),i=t+e.duration;if(r>i)e.toggleTimer(!1),e.resetTimer();else{const t=i-r,n=Math.floor(t/1e3);let o=n%60,l=Math.floor(n/60);o!==e.timer.currentSecond&&(e.timer.currentSecond=o,o=o.toString().padStart(2,"0"),l=l.toString().padStart(2,"0"),e.updateTimer(`${l}:${o}`),e.updateProperties({current:t}),e.toggleTimer(!0))}}),100))}onTimerInput(e){let t=this;e.value?t.timer.entry=e.value:t.duration=t.timer.entry}resetTimer(){let e=this;e.updateProperties({current:""}),e.updateTimer("00:00"),clearInterval(e.timer.intervalId),delete e.timer.intervalId}toggleTimer(e){if(this.running===e)return;let r=this,i=r.vdom.cn[0].cn[1];r.running=e,i.cls=i.cls||[],t[e?"add":"remove"](i.cls,"turn"),r.update()}updateInputField(e){this.vdom.cn[0].cn[1].cn[0].cn[0].cn[0].value=e}updateTimer(e){this.vdom.cn[0].cn[1].cn[0].cn[1].cn[0].innerHTML=e,this.update()}updateProperties(e){let{style:t}=this;void 0!==e.current&&(t["--neo-timer-current"]=`${e.current}!important`),void 0!==e.full&&(t["--neo-timer-full"]=`${e.full}!important`),void 0!==e.colorEnd&&(t["--timer-color-end"]=`${e.colorEnd}!important`),void 0!==e.colorStart&&(t["--timer-color-start"]=`${e.colorStart}!important`),void 0!==e.dimensions&&(t["--timer-dimension"]=`${e.dimensions}!important`),this.style=t}});