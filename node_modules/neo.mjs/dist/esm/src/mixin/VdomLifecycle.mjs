import e from"../core/Base.mjs";import t from"../manager/Component.mjs";import d from"../util/Array.mjs";import o from"../util/vdom/TreeBuilder.mjs";import n from"../util/VDom.mjs";import i from"../manager/VDomUpdate.mjs";import a from"../util/VNode.mjs";import{isDescriptor as s}from"../core/ConfigSymbols.mjs";const{currentWorker:r}=Neo;class m extends e{static config={className:"Neo.mixin.VdomLifecycle",autoInitVnode:!1,autoMount:!1,hasUnmountedVdomChanges_:!1,isVdomUpdating_:!1,isVnodeInitializing_:!1,mounted_:!1,needsVdomUpdate_:!1,silentVdomUpdate_:!1,updateDepth_:1,vnode_:{[s]:!0,clone:"none",cloneOnGet:"none",isEqual:(e,t)=>e===t,value:null}};afterSetHasUnmountedVdomChanges(e,d){if(e||!e&&d){let d,o=t.getParentIds(this),n=0,i=o.length;for(;n<i;n++)d=Neo.getComponent(o[n]),d&&(d._hasUnmountedVdomChanges=e)}}afterSetVdom(e,t){this.updateVdom()}afterSetVnode(e,t){void 0!==t&&this.syncVnodeTree()}createVdomReference(){let e=this,t={componentId:e.id},d=e.vdom.id;return d&&e.id!==d&&(t.id=d),t}async executeVdomUpdate(e,t){let d=this;e&&i.addPromiseCallback(d.id,e),d.isVdomUpdating=!0,i.registerInFlightUpdate(d.id,d.updateDepth);try{const{vdom:e,vnode:t}=d,n=i.getMergedChildIds(d.id),a={vdom:o.getVdomTree(e,d.updateDepth,n),vnode:o.getVnodeTree(t,d.updateDepth,n)};r?.isSharedWorker&&(a.appName=d.appName,a.windowId=d.windowId),d._needsVdomUpdate=!1,d.afterSetNeedsVdomUpdate?.(!1,!0),d._updateDepth=d.constructor.config.updateDepth;const s=await Promise.resolve(Neo.vdom.Helper.update(a));d.id&&(d.vnode=s.vnode,!Neo.config.useVdomWorker&&s.deltas?.length>0&&await Neo.applyDeltas(d.appName,s.deltas),d.isVdomUpdating=!1,d.resolveVdomUpdate(s))}catch(e){d.isVdomUpdating=!1,i.unregisterInFlightUpdate(d.id),t?.(e)}}getMountedParentId(){let e=this.parentId,t=Neo.getComponent(e),d=t?.getVdomItemsRoot?.();return d?d.id:e}getMountedParentIndex(){let e,t=this.parent,d=t?.items||[],o=0,n=0,i=d.length;for(;o<i;o++){if(e=d[o],e===this)return n;e.hidden||"removeDom"!==e.hideMode||n++}}getVdomChild(e,t=this.vdom){return n.find(t,e)?.vdom}getVdomRoot(){return this.vdom}getVnodeRoot(){return this.vnode}hasUpdateCollision(e,t){return-1===e||t<e}async initVnode(e){let t=this,d=e||t.autoMount,{app:n}=t,{allowVdomUpdatesInTests:i,unitTestMode:a,useVdomWorker:s}=Neo.config;if(!a||i)if(a||!d||0===r.countLoadingThemeFiles){if(t.isVnodeInitializing=!0,n.vnodeInitialized||(n.isVnodeInitializing=!0),t.vdom){t.isVdomUpdating=!0,delete t.vdom.removeDom,t._needsVdomUpdate=!1,t.afterSetNeedsVdomUpdate?.(!1,!0);const e=await Promise.resolve(Neo.vdom.Helper.create({appName:t.appName,autoMount:d,parentId:d?t.getMountedParentId():void 0,parentIndex:d?t.getMountedParentIndex():void 0,vdom:o.getVdomTree(t.vdom,-1),windowId:t.windowId}));return t.onInitVnode(e.vnode,!!s&&d),t.isVdomUpdating=!1,d&&!s&&t.mount(),t.resolveVdomUpdate(),e}}else r.on("themeFilesLoaded",function(){!t.mounted&&t.initVnode(e)},t,{once:!0})}isParentUpdating(e=this.parentId,t,d=1){if("document.body"!==e){let o=this,n=Neo.getComponent(e);if(n){if(n.isVdomUpdating){const e=i.getInFlightUpdateDepth(n.id);return!!o.hasUpdateCollision(e,d)&&(Neo.config.logVdomUpdateCollisions&&console.warn("vdom parent update conflict with:",n,"for:",o),i.registerPostUpdate(n.id,o.id,t),!0)}return o.isParentUpdating(n.parentId,t,d+1)}}return!1}mergeIntoParentUpdate(e=this.parentId,t=1){if("document.body"!==e){let d=this,o=Neo.getComponent(e);if(o)return o.needsVdomUpdate&&d.hasUpdateCollision(o.updateDepth,t)?(i.registerMerged(o.id,d.id,d.updateDepth,t),!0):d.mergeIntoParentUpdate(o.parentId,t+1)}return!1}onInitVnode(e,d){let o=this,{app:n}=o;if(o.isVnodeInitializing=!1,n){n.vnodeInitialized||(n.isVnodeInitializing=!1,n.vnodeInitialized=!0,n.fire("vnodeInitialized")),o.vnode=e;let i,a=t.getChildIds(e),s=0,r=a.length;for(;s<r;s++)i=Neo.getComponent(a[s]),i&&(i.vnodeInitialized=!0);o._vnodeInitialized=!0,o.fire("vnodeInitialized",o.id),d&&(o.mounted=!0,n.mounted||(n.mounted=!0,n.fire("mounted")))}}promiseUpdate(){return new Promise((e,t)=>{this.updateVdom(e,t)})}resolveVdomUpdate(e){let t=this;i.executeCallbacks(t.id,e),i.unregisterInFlightUpdate(t.id),i.triggerPostUpdates(t.id),t.needsVdomUpdate&&t.update()}syncVdomIds(e=this.vnode,t=this.vdom,d=!1){n.syncVdomIds(e,t,d)}syncVnodeTree(e=this.vnode){let d,o=this,n=t.getChildren(o),i=!1,s={};o.syncVdomIds(),e&&o.id!==e.id&&t.registerWrapperNode(e.id,o),n.forEach(e=>{d=a.find(o.vnode,e.vdom.id)?.vnode,d&&(s[e.id]=d,e.id!==d.id&&t.registerWrapperNode(d.id,e))}),n.forEach(e=>{d=s[e.id],d?(e._vnode=t.addVnodeComponentReferences(d,e.id),e.vnodeInitialized||(e._vnodeInitialized=!0,e.fire("vnodeInitialized",e.id)),e.mounted=!0):console.warn("syncVnodeTree: Could not replace the child vnode for",e.id)}),o._vnode=e?t.addVnodeComponentReferences(e,o.id):null}update(){this.afterSetVdom(this.vdom,null)}updateVdom(e,t){if(!this.isConstructed)return void e?.();if(Neo.config.unitTestMode&&!Neo.config.allowVdomUpdatesInTests)return void t?.();let d=this,{mounted:o,parentId:n,vnode:a}=d;if(d.isVdomUpdating||d.silentVdomUpdate)e&&i.addPromiseCallback(d.id,e),d.needsVdomUpdate=!0;else if(e&&i.addPromiseCallback(d.id,e),o){if(!d.mergeIntoParentUpdate(n)&&!d.isParentUpdating(n,e)&&o&&a){let o=i.getAdjustedUpdateDepth(d.id);null!==o&&(d.updateDepth=o),Neo.config.unitTestMode||0===r.countLoadingThemeFiles?d.executeVdomUpdate(null,t):r.on("themeFilesLoaded",function(){d.updateVdom(e,t)},d,{once:!0})}}else d.isAwaitingMount||(d.isAwaitingMount=!0,d.mountedPromise.then(()=>{d.isAwaitingMount=!1,d.vnode&&d.update()}));d.hasUnmountedVdomChanges=!o&&d.hasBeenMounted}}Neo.setupClass(m);export default m;