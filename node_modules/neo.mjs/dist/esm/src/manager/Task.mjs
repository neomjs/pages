import r from"./Base.mjs";export default Neo.setupClass(class extends r{static config={className:"Neo.manager.Task",singleton:!0};createTask(r){return r.id||(r.id=Neo.core.IdGenerator.getId("task")),r.scope&&r.run.bind(r.scope),r.addCountToArgs&&r.args.push(0),r={args:[],isRunning:!1,onError:Neo.emptyFn,runCount:0,runner:null,runOnStart:!1,...r},this.register(r),r}removeTask(r){this.unregister(r)}run(r){let n=this,e=n.get(r);if(e.isRunning)return Neo.logError("[Neo.util.TaskManager] Task is already running"),e;try{let r=function(r){r.runCount++,r.addCountToArgs&&(r.args[r.args.length-1]=r.runCount),r.repeat&&r.runCount===r.repeat&&n.stop(r.id),r.run(...r.args)};e.isRunning=!0,e.runner=setInterval(r,e.interval,e)}catch(r){Neo.logError("[Neo.util.TaskManager] Error while running task "+e.id),e.onError(r),e.isRunning=!1}}start(r){let n=this;return Neo.isString(r)?!(r=n.get(r))&&Neo.logError("[Neo.util.TaskManager] You passed a taskId which does not exits"):r.id&&n.get(r.id)||(r=n.createTask(r)),r.isRunning?(Neo.logError("[Neo.util.TaskManager] Task is already running"),r):(r.runOnStart&&(r.runCount++,r.run(...r.args)),n.run(r.id),r)}stop(r,n){let e=this.get(r);e.isRunning&&clearInterval(e.runner),n?this.removeTask(e):(e.isRunning=!1,e.runCount=0,e.runner=null,e.addCountToArgs&&(e.args[e.args.length-1]=0))}stopAll(r){Object.keys(this.map).forEach((n=>{this.stop(n,r)}))}});