import e from"../collection/Base.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.manager.VDomUpdate",singleton:!0,mergedCallbackMap:null,postUpdateQueueMap:null};inFlightUpdateMap=null;promiseCallbackMap=null;construct(t){super.construct(t);const a=this;a.inFlightUpdateMap=new Map,a.mergedCallbackMap=Neo.create(e,{keyProperty:"ownerId"}),a.postUpdateQueueMap=Neo.create(e,{keyProperty:"ownerId"}),a.promiseCallbackMap=new Map}addPromiseCallback(e,t){let a=this;a.promiseCallbackMap.has(e)||a.promiseCallbackMap.set(e,[]),a.promiseCallbackMap.get(e).push(t)}registerInFlightUpdate(e,t){this.inFlightUpdateMap.set(e,t)}getInFlightUpdateDepth(e){return this.inFlightUpdateMap.get(e)}unregisterInFlightUpdate(e){this.inFlightUpdateMap.delete(e)}registerMerged(e,t,a,l){let p=this,s=p.mergedCallbackMap.get(e);s||(s={ownerId:e,children:new Map},p.mergedCallbackMap.add(s)),s.children.set(t,{childUpdateDepth:a,distance:l})}registerPostUpdate(e,t,a){let l=this,p=l.postUpdateQueueMap.get(e);p||(p={ownerId:e,children:[]},l.postUpdateQueueMap.add(p)),p.children.push({childId:t,resolve:a})}getAdjustedUpdateDepth(e){let t,a=Neo.getComponent(e),l=this.mergedCallbackMap.get(e),p=a?.updateDepth??1;return l?(l.children.forEach(e=>{t=-1===e.childUpdateDepth?-1:e.distance+e.childUpdateDepth,-1===t?p=-1:-1!==p&&(p=Math.max(p,t))}),p):null}getMergedChildIds(e){const t=this.mergedCallbackMap.get(e);return t?new Set(t.children.keys()):null}executeCallbacks(e,t){let a=this,l=a.mergedCallbackMap.get(e),p=t?[t]:[];l&&(l.children.forEach((e,t)=>{a.executePromiseCallbacks(t,...p)}),a.mergedCallbackMap.remove(l)),a.executePromiseCallbacks(e,...p)}executePromiseCallbacks(e,t){let a=this.promiseCallbackMap.get(e);a?.forEach(e=>e(t)),this.promiseCallbackMap.delete(e)}triggerPostUpdates(e){let t,a=this,l=a.postUpdateQueueMap.get(e);l&&(l.children.forEach(e=>{t=Neo.getComponent(e.childId),t&&(e.resolve&&a.addPromiseCallback(t.id,e.resolve),t.update())}),a.postUpdateQueueMap.remove(l))}});