import t from"./Base.mjs";import e from"../util/Array.mjs";export default Neo.setupClass(class extends t{static config={className:"Neo.manager.Toast",singleton:!0};defaultMargin=16;maxToasts=3;running={bc:[],bl:[],br:[],tc:[],tl:[],tr:[]};toastClass="Neo.component.Toast";construct(t){super.construct(t),Neo.toast=this.createToast.bind(this)}createToast(t){let e=this;return t.position&&!e.running[t.position]?(Neo.logError("[Neo.manager.Toast] Supported values for slideDirection are: tl, tc, tr, bl, bc, br"),null):t.msg&&t.appName?((t=Neo.create({className:this.toastClass,...t})).on({mounted:e.updateItemsInPosition,scope:e}),t.id):(!t.msg&&Neo.logError("[Neo.manager.Toast] Toast has to define a msg"),!t.appName&&Neo.logError("[Neo.manager.Toast] Toast has to define an appName. Typically me.appName."),null)}findFirstToast(){let t,e,s=this;for(e of(s.filters=[{property:"running",value:!1}],s.map.values()))if(s.running[e.position].length<s.maxToasts){t=e,t.running=!0;break}return s.clearFilters(),t}register(t){super.register(t),this.runQueue()}removeToast(t){let s,o=this,n=o.get(t);n&&(s=n.position,e.remove(o.running[s],t),o.updateItemsInPosition(t))}runQueue(){let t,e=this;e.getCount()>0&&(t=e.findFirstToast(),t&&e.showToast(t))}showToast(t){t.render(!0);let e=this;e.running[t.position].unshift(t.id),e.timeout(50).then((()=>{e.updateItemsInPosition(t.id)}))}unregister(t){super.unregister(t),this.runQueue()}async updateItemsInPosition(t){let e,s,o,n,r,a=this,i=a.get(t),{position:u}=i,l=a.running[u],p=0,m=a.defaultMargin,g="t"===u.substring(0,1)?"top":"bottom";for([o,s]of(r=await i.getDomRect(l),l.entries()))e=Neo.getComponent(s),n={},p+=m,n[g]=p+"px",e.style=n,e.update(),r[o]&&(p+=r[o].height)}});