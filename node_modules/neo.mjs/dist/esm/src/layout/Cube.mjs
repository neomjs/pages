import e from"./Card.mjs";import t from"../util/Array.mjs";const a=Symbol.for("configSymbol");class o extends e{static faces={front:[0,0,0],back:[0,180,0],left:[0,90,0],right:[0,270,0],top:[270,0,0],bottom:[90,0,0]};static config={className:"Neo.layout.Cube",ntype:"layout-cube",activeFace_:null,activeIndex:null,containerCls:"neo-layout-cube",fitContainer_:!1,hideInactiveCardsOnDestroy:!1,perspective_:600,rotateX_:0,rotateY_:0,rotateZ_:0,sideX_:300,sideY_:300,sideZ_:300};#e=null;construct(e){super.construct(e);let t=this,{container:a}=t;t.nestVdom(),a.mounted&&a.update(),t.timeout(100).then((()=>{a.addCls("neo-animate")}))}afterSetActiveFace(e,t){e&&(this.activeIndex=Object.keys(o.faces).indexOf(e))}async afterSetActiveIndex(e,t){if(Neo.isNumber(e)&&e<6){let s=this,{container:i}=s,n=i.items[e];Neo.isNumber(t)||(delete s[a].rotateX,delete s[a].rotateY,delete s[a].rotateZ),"Function"===Neo.typeOf(n.module)&&(await s.loadModule(n,e),i.updateDepth=-1,i.update(),await s.timeout(100)),this.rotateTo(...Object.values(o.faces)[e])}}afterSetFitContainer(e,t){if(e){let e=this,{container:t}=e;t.mounted?e.updateContainerSize():t.on("mounted",(()=>{e.timeout(50).then((()=>{e.updateContainerSize()}))}))}}afterSetPerspective(e,t){this.updateContainerCssVar("--perspective",e+"px")}afterSetRotateX(e,t){this.rotateTo(e)}afterSetRotateY(e,t){this.rotateTo(null,e)}afterSetRotateZ(e,t){this.rotateTo(null,null,e)}afterSetSideX(e,t){this.updateContainerCssVar("--side-x",e+"px")}afterSetSideY(e,t){this.updateContainerCssVar("--side-y",e+"px")}afterSetSideZ(e,t){this.updateContainerCssVar("--side-z",e+"px")}applyChildAttributes(e,a){let{wrapperCls:s}=e;if(a<6){switch(s=t.union(s,"neo-face",Object.keys(o.faces)[a]),a){case 0:case 1:s=t.union(s,"neo-face-z");break;case 2:case 3:s=t.union(s,"neo-face-x");break;case 4:case 5:s=t.union(s,"neo-face-y")}e.wrapperCls=s}}applyRenderAttributes(){this.container.updateDepth=-1,super.applyRenderAttributes()}getPlaneId(){return this.id+"__plane"}nestVdom(){let e=this,{container:t}=e,{vdom:a}=t,{cn:o}=a;a.cn=[{cls:["neo-plane"],id:e.getPlaneId(),cn:[{cls:["neo-box"],cn:o}]}],e.#e=t.getVdomItemsRoot,t.getVdomItemsRoot=function(){return this.vdom.cn[0].cn[0]},e.timeout(50).then((()=>{t.items.forEach(((e,t)=>{t<6&&delete e.vdom.removeDom})),t.updateDepth=-1,t.update()}))}removeChildAttributes(e,a){let{wrapperCls:s}=e;if(a<6){switch(t.remove(s,["neo-face",Object.keys(o.faces)[a]]),a){case 0:case 1:t.remove(s,"neo-face-z");break;case 2:case 3:t.remove(s,"neo-face-x");break;case 4:case 5:t.remove(s,"neo-face-y")}e.wrapperCls=s}}removeRenderAttributes(){super.removeRenderAttributes();let e=this,{container:a}=e,{cls:o,style:s,vdom:i}=a;t.remove(o,"neo-animate"),Object.assign(s,{"--perspective":null,"--rot-x":null,"--rot-y":null,"--rot-z":null,"--side-x":null,"--side-y":null,"--side-z":null}),a.set({cls:o,style:s}),i.cn=a.getVdomItemsRoot().cn,e.hideInactiveCardsOnDestroy&&a.items.forEach(((t,a)=>{a<6&&a!==e.activeIndex&&(t.vdom.removeDom=!0)})),a.getVdomItemsRoot=e.#e,a.updateDepth=-1,a.update()}rotateTo(e,t,a){let o=this,{container:s}=o,{style:i}=s;Neo.isNumber(e)&&(o._rotateX=e,i["--rot-x"]=e+"deg"),Neo.isNumber(t)&&(o._rotateY=t,i["--rot-y"]=t+"deg"),Neo.isNumber(a)&&(o._rotateZ=a,i["--rot-z"]=a+"deg"),s.style=i}updateContainerCssVar(e,t){let{container:a}=this,{style:o}=a;o[e]=t,a.style=o}async updateContainerSize(){let{container:e}=this,{height:t,width:a}=await e.getDomRect(e.id);this.set({sideX:a,sideY:t,sideZ:a})}}export default Neo.setupClass(o);