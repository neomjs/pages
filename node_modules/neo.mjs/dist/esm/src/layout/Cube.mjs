import e from"./Card.mjs";import t from"../util/Array.mjs";const o=Symbol.for("configSymbol");class a extends e{static faces={front:[0,0,0],back:[0,180,0],left:[0,90,0],right:[0,270,0],top:[270,0,0],bottom:[90,0,0]};static config={className:"Neo.layout.Cube",ntype:"layout-cube",activeFace_:null,activeIndex:null,containerCls:"neo-layout-cube",fitContainer_:!1,hideInactiveCardsOnDestroy:!1,perspective_:600,rotateX_:0,rotateY_:0,rotateZ_:0,sideX_:300,sideY_:300,sideZ_:300};#e=null;construct(e){super.construct(e);let t=this,{container:o}=t;t.nestVdom(),t.observeConfig(o,"mounted",e=>{e&&o.addCls("neo-animate")}),o.mounted&&o.promiseUpdate().then(()=>{o.addCls("neo-animate")})}afterSetActiveFace(e,t){e&&(this.activeIndex=Object.keys(a.faces).indexOf(e))}async afterSetActiveIndex(e,t){if(Neo.isNumber(e)&&e<6){let s=this,{container:n}=s,i=n.items[e];Neo.isNumber(t)||(delete s[o].rotateX,delete s[o].rotateY,delete s[o].rotateZ),"Function"===Neo.typeOf(i.module)&&(await s.loadModule(i,e),n.updateDepth=-1,n.update(),await s.timeout(100)),this.rotateTo(...Object.values(a.faces)[e])}}afterSetFitContainer(e,t){if(e){let e=this,{container:t}=e;t.mounted?e.updateContainerSize():t.on("mounted",()=>{e.timeout(50).then(()=>{e.updateContainerSize()})})}}afterSetPerspective(e,t){this.updateContainerCssVar("--perspective",e+"px")}afterSetRotateX(e,t){this.rotateTo(e)}afterSetRotateY(e,t){this.rotateTo(null,e)}afterSetRotateZ(e,t){this.rotateTo(null,null,e)}afterSetSideX(e,t){this.updateContainerCssVar("--side-x",e+"px")}afterSetSideY(e,t){this.updateContainerCssVar("--side-y",e+"px")}afterSetSideZ(e,t){this.updateContainerCssVar("--side-z",e+"px")}applyChildAttributes(e,o){let{wrapperCls:s}=e;if(o<6){switch(s=t.union(s,"neo-face",Object.keys(a.faces)[o]),o){case 0:case 1:s=t.union(s,"neo-face-z");break;case 2:case 3:s=t.union(s,"neo-face-x");break;case 4:case 5:s=t.union(s,"neo-face-y")}e.wrapperCls=s}}applyRenderAttributes(){this.container.updateDepth=-1,super.applyRenderAttributes()}getPlaneId(){return this.id+"__plane"}nestVdom(){let e=this,{container:t}=e,{vdom:o}=t,{cn:a}=o;o.cn=[{cls:["neo-plane"],id:e.getPlaneId(),cn:[{cls:["neo-box"],cn:a}]}],e.#e=t.getVdomItemsRoot,t.getVdomItemsRoot=function(){return this.vdom.cn[0].cn[0]},e.timeout(50).then(()=>{t.items.forEach((e,t)=>{t<6&&delete e.vdom.removeDom}),t.updateDepth=-1,t.update()})}removeChildAttributes(e,o){let{wrapperCls:s}=e;if(o<6){switch(t.remove(s,["neo-face",Object.keys(a.faces)[o]]),o){case 0:case 1:t.remove(s,"neo-face-z");break;case 2:case 3:t.remove(s,"neo-face-x");break;case 4:case 5:t.remove(s,"neo-face-y")}e.wrapperCls=s}}removeRenderAttributes(){super.removeRenderAttributes();let e=this,{container:o}=e,{cls:a,style:s,vdom:n}=o;t.remove(a,"neo-animate"),Object.assign(s,{"--perspective":null,"--rot-x":null,"--rot-y":null,"--rot-z":null,"--side-x":null,"--side-y":null,"--side-z":null}),o.set({cls:a,style:s}),n.cn=o.getVdomItemsRoot().cn,e.hideInactiveCardsOnDestroy&&o.items.forEach((t,o)=>{o<6&&o!==e.activeIndex&&(t.vdom.removeDom=!0)}),o.getVdomItemsRoot=e.#e,o.updateDepth=-1,o.update()}rotateTo(e,t,o){let a=this,{container:s}=a,{style:n}=s;Neo.isNumber(e)&&(a._rotateX=e,n["--rot-x"]=e+"deg"),Neo.isNumber(t)&&(a._rotateY=t,n["--rot-y"]=t+"deg"),Neo.isNumber(o)&&(a._rotateZ=o,n["--rot-z"]=o+"deg"),s.style=n}updateContainerCssVar(e,t){let{container:o}=this,{style:a}=o;a[e]=t,o.style=a}async updateContainerSize(){let{container:e}=this,{height:t,width:o}=await e.getDomRect(e.id);this.set({sideX:o,sideY:t,sideZ:o})}}export default Neo.setupClass(a);