import e from"../../button/Base.mjs";import t from"../store/Calendars.mjs";import i from"../../form/field/Color.mjs";import n from"../../util/Date.mjs";import a from"../../form/Container.mjs";import l from"../../form/field/Text.mjs";import r from"../../form/field/Time.mjs";export default Neo.setupClass(class extends a{static config={className:"Neo.calendar.view.EditEventContainer",baseCls:["neo-calendar-edit-event-container"],bind:{endTime:e=>e.endTime,intlFormat_time:e=>e.intlFormat_time,minimumEventDuration:e=>e.minimumEventDuration,startTime:e=>e.startTime},calendarFieldConfig:null,endTime_:"24:00",endTimeFieldConfig:null,intlFormat_time:null,owner:null,record_:null,startTime_:"00:00",startTimeFieldConfig:null,titleFieldConfig:null};construct(e){super.construct(e),this.vdom.tabIndex=-1}afterSetMounted(e,t){super.afterSetMounted(e,t),e&&this.getField("title").then((e=>e.focus()))}afterSetRecord(e,t){if(e&&t){let t=this,i=t.intlFormat_time,{calendarId:n,title:a}=e;t.getField("endTime").then((i=>i.minValue=t.getEndTimeMinValue(e))),t.getField("startTime").then((i=>i.maxValue=t.getStartTimeMaxValue(e))),t.reset({calendarId:n,endTime:i.format(e.endDate),startTime:i.format(e.startDate),title:a})}else e&&this.createItems()}createItems(){let n=this,{record:a}=n,o=n.intlFormat_time,m={module:r,clearToOriginalValue:!0,flex:"none",labelPosition:"inline",listeners:{change:n.onTimeFieldChange,scope:n},stepSize:900,width:"9em"};a&&(n.items=[{module:l,clearToOriginalValue:!0,flex:"none",labelPosition:"inline",labelText:"Title",listeners:{change:n.onTitleFieldChange,scope:n},name:"title",required:!0,value:a.title,...n.titleFieldConfig},{module:i,clearToOriginalValue:!0,colorField:"color",displayField:"name",flex:"none",forceSelection:!0,labelPosition:"inline",labelText:"Calendar",listeners:{change:n.onCalendarFieldChange,scope:n},name:"calendarId",required:!0,triggerAction:"all",value:a.calendarId,colorFormatter:(e,t)=>{let i=t[e.colorField];return"yellow"===i?"var(--event-yellow-border-color)":`var(--event-${i}-color)`},store:{module:t,sourceId:n.stateProvider.getStore("calendars").id},...n.calendarFieldConfig},{labelText:"Start Time",maxValue:n.getStartTimeMaxValue(a),minValue:n.startTime,name:"startTime",value:o.format(a.startDate),...m,...n.startTimeFieldConfig},{labelText:"End Time",maxValue:n.endTime,minValue:n.getEndTimeMinValue(a),name:"endTime",value:o.format(a.endDate),...m,...n.endTimeFieldConfig},{module:e,cls:["neo-button","neo-red"],handler:n.onDeleteButtonClick.bind(n),iconCls:"fas fa-trash-alt",style:{marginTop:"3em"},text:"Delete"}],super.createItems())}getEndTimeMinValue(e){let t=new Date(e.startDate.valueOf());return t.setMinutes(t.getMinutes()+this.minimumEventDuration),this.intlFormat_time.format(t)}getStartTimeMaxValue(e){let t=new Date(e.endDate.valueOf());return t.setMinutes(t.getMinutes()-this.minimumEventDuration),this.intlFormat_time.format(t)}onCalendarFieldChange(e){Neo.isEmpty(e.value)||(this.record.calendarId=e.value[e.component.store.keyProperty])}onDeleteButtonClick(e){let t=this;t.getStateProvider().getStore("events").remove(t.record),t.unmount()}async onFocusLeave(e){let t=this;await t.timeout(100),t.mounted&&t.unmount()}onTimeFieldChange(e){let t=this,i=e.component.name,a="endTime"===i?"endDate":"startDate",l=t.record,r=n.clone(t.record[a]),o=e.value.split(":").map((e=>Number(e)));r.setHours(o[0]),r.setMinutes(o[1]),l[a]=r,"endTime"===i?t.getField("startTime").then((e=>e.maxValue=t.getStartTimeMaxValue(l))):t.getField("endTime").then((e=>e.minValue=t.getEndTimeMinValue(l)))}onTitleFieldChange(e){Neo.isEmpty(e.value)||(this.record.title=e.value)}});