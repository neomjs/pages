import e from"../Neo.mjs";import t from"./Base.mjs";import*as s from"../core/_export.mjs";import n from"../controller/Application.mjs";import a from"../manager/Instance.mjs";import o from"../manager/DomEvent.mjs";import i from"../util/HashHistory.mjs";export default e.setupClass(class extends t{static config={className:"Neo.worker.App",countLoadingThemeFiles_:0,remote:{main:["createNeoInstance","destroyNeoInstance","fireEvent","getConfigs","setConfigs"]},singleton:!0};data=null;isUsingStateProviders=!1;themeFilesCache=[];workerId="app";construct(t){super.construct(t);let s=this;e.applyDeltas=s.applyDeltas.bind(s),e.setCssVariable=s.setCssVariable.bind(s)}afterSetCountLoadingThemeFiles(e,t){0===e&&void 0!==t&&this.fire("themeFilesLoaded")}applyDeltas(e,t){return this.promiseMessage("main",{action:"updateDom",appName:e,deltas:t})}async createNeoInstance(t){t.importPath&&(await import(t.importPath),delete t.importPath);let s,n,a,o=Object.keys(e.apps)[0],i=e.container?.Base;return(t={appName:o,...t}).parentId?(a=e.getComponent(t.parentId),i&&a&&a instanceof i&&(s=t.parentIndex,delete t.parentId,delete t.parentIndex,n=e.isNumber(s)?a.insert(s,t):a.add(t))):(t.autoMount=!0,t.autoRender=!0,n=e[t.ntype?"ntype":"create"](t)),n.id}createThemeMap(t){e.ns("Neo.cssMap.fileInfo",!0),e.cssMap.fileInfo=t,this.resolveThemeFilesCache()}destroyNeoInstance(t){let s,n=e.get(t);return!!n&&(n.parentId&&(s=e.getComponent(n.parentId),s)?(s.remove(n),!0):(n.destroy(!0,!0),!0))}fireEvent(t){let s,n=e.get(t.id);return!!n&&(s=t.name,delete t.id,delete t.name,n.fire(s,t),!0)}fireMainViewsEvent(t,s){this.ports.forEach((n=>{e.apps[n.appName].mainView.fire(t,s)}))}async getAddon(t,s){let n=e.main?.addon?.[t];return n||(await e.Main.importAddon({name:t,windowId:s}),n=e.main.addon[t]),n}getConfigs(t){let s=e.get(t.id),{keys:n}=t,a=[];return!!s&&(Array.isArray(n)?(n.forEach((e=>{a.push(s[e])})),a):s[n])}importApp(e){return e.endsWith(".mjs")&&(e=e.slice(0,-4)),import(`../../${e}.mjs`)}insertThemeFiles(t,s,n){if(e.config.themes.length>0){n=n||s.className;let a,o,i,r,p,m,d,h=this,l=e.cssMap,c=s?.__proto__;l?(n.startsWith("Neo.")||(o=(n=n.split(".")).shift(),r=o.toLowerCase(),"view"===n[0]&&n.shift(),p=`apps.${e.apps[o]?.appThemeFolder||r}.${n.join(".")}`,n=`apps.${r}.${n.join(".")}`),c&&c!==e.core.Base.prototype&&(e.ns(`${t}.${c.className}`,!1,l)||h.insertThemeFiles(t,c)),d=e.ns(p||n,!1,l.fileInfo),d&&!e.ns(`${t}.${n}`,!1,l)&&(a=n.split("."),i=a.pop(),a=a.join("."),m=e.ns(`${t}.${a}`,!0,l),m[i]=!0,h.countLoadingThemeFiles++,e.main.addon.Stylesheet.addThemeFiles({className:p||n,folders:d,windowId:t}).then((()=>{h.countLoadingThemeFiles--})))):h.themeFilesCache.push([t,s])}}onDomEvent(e){o.fire(e)}onHashChange(e){i.push(e.data)}onLoadApplication(t){let s,n,a=this,{config:o}=e;t&&(a.data=t,o.resourcesPath=t.resourcesPath),n=a.data.path,"development"!==o.environment&&(n=n.startsWith("/")?n.substring(1):n),a.importApp(n).then((e=>{s=e.onStart(),o.hash&&a.timeout(5).then((()=>{i.push(o.hash),delete o.hash}))}))}onOrientationChange(t){Object.values(e.apps).forEach((e=>{e.fire("orientationchange",t.data)}))}onRegisterNeoConfig(t){super.onRegisterNeoConfig(t);let{config:s}=e,{data:n}=t,a="resources/theme-map.json";e.windowConfigs=e.windowConfigs||{},e.windowConfigs[n.windowId]=n,"development"!==s.environment&&"dist/esm"!==s.environment||(a=`../../${a}`),s.workerBasePath?.includes("node_modules")&&(a=`../../${a}`),"."!==a[0]&&(a=`./${a}`),fetch(a).then((e=>e.json())).then((e=>{this.createThemeMap(e)})),s.remotesApiUrl&&import("../remotes/Api.mjs").then((e=>e.default.load())),!s.useVdomWorker&&import("../vdom/Helper.mjs")}onRegisterPort(e){let t=this,s=e.transfer;s.onmessage=t.onMessage.bind(t),t.channelPorts[e.origin]=s}onWindowPositionChange(e){this.fireMainViewsEvent("windowPositionChange",e.data)}registerApp(e){this.onRegisterApp({appName:e}),this.sendMessage("main",{action:"registerAppName",appName:e})}removeAppFromThemeMap(t){delete e.cssMap[t.toLowerCase()]}resolveThemeFilesCache(){let e=this;e.themeFilesCache.forEach((t=>{e.insertThemeFiles(...t)})),e.themeFilesCache=[]}setConfigs(t){let s=e.get(t.id);return!!s&&(delete t.id,s.set(t),!0)}async setCssVariable(t){let s=await this.getAddon("Stylesheet",t.windowId),n=t.theme||e.config.themes?.[0];return n.startsWith("neo-")&&(n=n.substring(4)),s.setCssVariable({theme:n,...t})}});