import e from"../core/Base.mjs";import o from"../core/Observable.mjs";import t from"./Message.mjs";import r from"./mixin/RemoteMethodAccess.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.worker.Base",mixins:[o,r],workerId:null};channelPorts=null;isConnected=!1;isSharedWorker=!1;ports=null;construct(e){super.construct(e);let o=this,t=globalThis;Object.assign(o,{channelPorts:{},isSharedWorker:"[object SharedWorkerGlobalScope]"===t.toString(),ports:[],promises:{}}),o.isSharedWorker?t.onconnect=o.onConnected.bind(o):t.onmessage=o.onMessage.bind(o),Neo.currentWorker=o,Neo.workerId=o.workerId}afterConnect(){}getPort(e){let o,t=null;return this.ports.forEach((r=>{o=!0,Object.entries(e).forEach((([e,t])=>{t!==r[e]&&(o=!1)})),o&&(t=r)})),t}async onConnect(e){await this.timeout(10);let{appName:o,windowId:t}=e;this.fire("connect",{appName:o,windowId:t})}onConnected(e){let o=this,t=Neo.getId("port");o.isConnected=!0,o.ports.push({appName:null,id:t,port:e.ports[0],windowId:null}),o.ports[o.ports.length-1].port.onmessage=o.onMessage.bind(o),o.fire("connected"),o.sendMessage("main",{action:"workerConstructed",port:t}),o.afterConnect()}onConstructed(){super.onConstructed();let e=this;e.isSharedWorker||(e.sendMessage("main",{action:"workerConstructed"}),e.afterConnect())}onDisconnect(e){let{appName:o,windowId:t}=e;this.fire("disconnect",{appName:o,windowId:t})}onMessage(e){let o,t=this,{data:r}=e,{action:s,replyId:n}=r;if(!s)throw new Error("Message action is missing: "+r.id);"reply"!==s?t["on"+Neo.capitalize(s)](r):(o="reply"===s&&t.promises[n])&&(r.reject?o.reject(r.data):o.resolve(r.data),delete t.promises[n])}onPing(e){this.resolve(e,{originMsg:e})}onRegisterApp(e){let o,t=this,{appName:r}=e;for(o of t.ports)if(!o.appName){o.appName=r,t.onConnect({appName:r,windowId:o.windowId});break}}onRegisterNeoConfig(e){Neo.config=Neo.config||{};let o,t=this,{windowId:r}=e.data;for(o of t.ports)if(!o.windowId){o.windowId=r;break}Object.assign(Neo.config,e.data)}promiseMessage(e,o,t){let r=this;return new Promise((function(s,n){let i=r.sendMessage(e,o,t),a=i?.id;a?r.promises[a]={reject:n,resolve:s}:n()}))}sendMessage(e,o,r){o.destination=e;let s,n,i,a=this;return a.channelPorts[e]?n=a.channelPorts[e]:a.isSharedWorker?o.port?n=a.getPort({id:o.port}).port:o.windowId?(i=a.getPort({windowId:o.windowId}),n=i?.port,o.port=i?.id):o.appName?(i=a.getPort({appName:o.appName}),n=i?.port,o.port=i?.id):n=a.ports[0].port:n=globalThis,n&&(s=new t(o),n.postMessage(s,r)),s}});