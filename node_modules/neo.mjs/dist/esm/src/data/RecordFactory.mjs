import e from"../core/Base.mjs";import t from"./Model.mjs";const l=Symbol.for("data"),i=Symbol.for("isModified"),s=Symbol.for("originalData");let a;a=Neo.setupClass(class extends e{static config={className:"Neo.data.RecordFactory",recordNamespace:"Neo.data.record",singleton:!0};assignDefaultValues(e,t){return t.fieldsMap.forEach((l,i)=>{if(Object.hasOwn(l,"defaultValue")){const s=Neo.isFunction(l.defaultValue)?l.defaultValue():l.defaultValue;t.hasNestedFields?Neo.assignToNs(i,s,e,!1):void 0===e[i]&&(e[i]=s)}}),e}createField({field:e,model:t,path:i="",proto:s}){let r,o=e.name,d=""===i?o:`${i}.${o}`;e.fields?e.fields.forEach(e=>{this.createField({field:e,model:t,path:d,proto:s})}):(r={[d]:{configurable:!0,enumerable:!0,get(){return t.hasNestedFields?Neo.ns(d,!1,this[l]):this[l][o]},set(l){this.notifyChange({fields:{[d]:a.parseRecordValue({record:this,field:e,value:l})},model:t,record:this})}}},Object.defineProperties(s,r))}createRecord(e,t){let l=Neo.ns(`${this.recordNamespace}.${e.className}.${e.id}`);return l||(l=this.createRecordClass(e)),new l(t)}createRecordClass(e,r=!1){if(e instanceof t){let t,o,d,n=`${this.recordNamespace}.${e.className}.${e.id}`,c=Neo.ns(n);return!c||r?(o=n.split("."),t=o.pop(),c=Neo.ns(o,!0),d=c[t]=class{static name="Record";[l]={};get isModified(){let t=this;return e.trackModifiedFields?!Neo.isEqual(t[l],t[s]):t[i]}constructor(t){let l=this;t=a.assignDefaultValues(t,e),e.trackModifiedFields?(l[s]={},l.setOriginal(t)):l[i]=!1,l.setSilent(t)}isModifiedField(t){let i=this;if(e.trackModifiedFields){let a,r;if(e.hasNestedFields&&t?.includes(".")){let e=t.split(".");t=e.pop(),a=Neo.ns(e,!1,i[l]),r=Neo.ns(e,!1,i[s])}else a=i[l],r=i[s];return e.getField(t)||Object.hasOwn(a,t)||console.error("The record does not contain the field",t,i),!Neo.isEqual(a[t],r[t])}return null}notifyChange(e,t=!1){const l={...e,silent:t};return a.setRecordFields(l),l}reset(e){this.setOriginal(e),this.set(e)}set(t){this.notifyChange({fields:t,model:e,record:this})}setOriginal(t){a.setRecordFields({fields:t,model:e,record:this,silent:!0,useOriginalData:!0})}setSilent(t){this.notifyChange({fields:t,model:e,record:this},!0)}toJSON(){return structuredClone(this[l])}},Array.isArray(e.fields)&&e.fields.forEach(t=>{a.createField({field:t,model:e,proto:d.prototype})}),Object.defineProperty(d.prototype,"isRecord",{value:!0}),Object.defineProperty(d,"isClass",{value:!0}),c[t]):c}}isRecord(e){return e?.isRecord||!1}onRecordChange(e){Neo.get(e.model.storeId)?.onRecordChange(e)}parseRecordValue({record:e,field:t,value:i=null,recordConfig:a=null,useOriginalData:r=!1}){if(t.calculate)return t.calculate(e[r?s:l],t);t.convert&&(i=t.convert(i));let o=t.name,{mapping:d,maxLength:n,minLength:c,nullable:u}=t,f=a?.[o]||e[o],h=t.type?.toLowerCase();if(d&&a){let e=d.split("."),t=e.pop();e=Neo.ns(e,!0,a),i=e[t]}return Object.hasOwn(t,"maxLength")&&i?.toString().length>n?(console.warn(`Setting record field: ${o} value: ${i} conflicts with maxLength: ${n}`),f):Object.hasOwn(t,"minLength")&&i?.toString().length<c?(console.warn(`Setting record field: ${o} value: ${i} conflicts with minLength: ${c}`),f):Object.hasOwn(t,"nullable")&&!1===u&&null===i?(console.warn(`Setting record field: ${o} value: ${i} conflicts with nullable: ${u}`),f):"date"===h&&"Date"!==Neo.typeOf(i)?new Date(i):("float"===h&&i?i=parseFloat(i):"html"===h&&i?i+="":"int"!==h&&"integer"!==h||!i?"string"===h&&i&&(i=(i+="").replace(/(<([^>]+)>)/gi,"")):i=parseInt(i),i)}setRecordData({fieldName:e,model:t,record:i,useOriginalData:a=!1,value:r}){if(a&&!t.trackModifiedFields)return;let o=a?s:l;if(t.hasNestedFields&&e.includes(".")){let t,l;l=e.split("."),e=l.pop(),t=Neo.ns(l,!0,i[o]),t[e]=r}else i[o][e]=r}setRecordFields({changedFields:e=[],fields:t,model:l,record:s,silent:a=!1,useOriginalData:r=!1}){let o,d,n,c=this,{calculatedFieldsMap:u,fieldsMap:f,trackModifiedFields:h}=l;!h&&r||(Object.entries(t).forEach(([t,a])=>{o=f.has(t),Neo.isObject(a)&&!o?Object.entries(a).forEach(([i,a])=>{c.setRecordFields({changedFields:e,fields:{[`${t}.${i}`]:a},model:l,record:s,silent:!0,useOriginalData:r})}):o&&(n=s[t],a=c.parseRecordValue({record:s,field:l.getField(t),value:a}),Neo.isEqual(n,a)||(c.setRecordData({fieldName:t,model:l,record:s,useOriginalData:r,value:a}),h||r||(s[i]=!0),e.push({name:t,oldValue:n,value:a})))}),d=Object.keys(e).length>0,d&&u.forEach((t,i)=>{n=s[i],t=c.parseRecordValue({record:s,field:l.getField(i),useOriginalData:r}),Neo.isEqual(n,t)||(c.setRecordData({fieldName:i,model:l,record:s,useOriginalData:r,value:t}),e.push({name:i,oldValue:n,value:t}))}),a||r||!d||c.onRecordChange({fields:e,model:l,record:s}))}});export default a;