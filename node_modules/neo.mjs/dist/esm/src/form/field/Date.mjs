import e from"../../component/DateSelector.mjs";import t from"./trigger/Date.mjs";import a from"../../util/Date.mjs";import r from"./Picker.mjs";import o from"../../util/VDom.mjs";export default Neo.setupClass(class extends r{static config={className:"Neo.form.field.Date",ntype:"datefield",baseCls:["neo-datefield","neo-pickerfield","neo-textfield"],dateSelector:null,dateSelectorConfig:null,errorTextInvalidDate:"Not a valid date",isoDate:!1,hidePickerOnSelect:!1,inputType:"date",maxValue_:null,minValue_:null,pickerHeight:225,pickerMaxHeight:225,pickerWidth:200,triggers:[{module:t}]};invalidInput=!1;submitDateObject=!1;construct(t){super.construct(t);let r=this;r.dateSelector=Neo.create({module:e,dayNameFormat:"short",maxValue:r.maxValue,minValue:r.minValue,value:r.value||a.convertToyyyymmdd(new Date),...r.dateSelectorConfig}),r.dateSelector.keys._keys.push({fn:"onContainerKeyDownEscape",key:"Escape",scope:r.id}),r.dateSelector.on({change:r.onDatePickerChange,scope:r})}afterSetMaxValue(e,t){let a=this;a.changeInputElKey("max",e),a.dateSelector&&(a.dateSelector.maxValue=e)}afterSetMinValue(e,t){let a=this;a.changeInputElKey("min",e),a.dateSelector&&(a.dateSelector.minValue=e)}afterSetValue(e,t){super.afterSetValue(e,t),void 0!==t&&(this.dateSelector.value=e)}beforeSetValue(e,t){return"Date"===Neo.typeOf(e)&&(e=a.convertToyyyymmdd(e),this.originalConfig.value=e),e=super.beforeSetValue(e,t),this.isoDate&&e?e.substring(0,10):e}createPickerComponent(){return this.dateSelector}getSubmitValue(){let e=this.value;return this.submitDateObject&&e?new Date(`${e}T12:00:00.000Z`):this.isoDate&&e?new Date(e).toISOString():e}hasContent(){return"inline"===this.labelPosition||super.hasContent()}onContainerKeyDownEscape(e){let t=this;t.hidePicker(),t.focus(t.getInputElId())}onDatePickerChange(e){let t=this;t.clean=!1,t.hidePickerOnSelect?(o.removeVdomChild(t.vdom,t.getPickerId()),t.promiseUpdate().then((a=>{t.value=e.value}))):t.value=e.value}onInputValueChange(e){this.invalidInput=!e.valid,e.valid?super.onInputValueChange(e):this.validate(!1)}onKeyDownEnter(e){let t=this;t.pickerIsMounted?(t.dateSelector.focusCurrentItem(),super.onKeyDownEnter(e)):super.onKeyDownEnter(e,t.dateSelector.focusCurrentItem,t.dateSelector)}validate(e=!0){let t=this,a=super.validate(e);return a&&t.invalidInput&&(t._error=t.errorTextInvalidDate,a=!1),!a&&!t.clean&&t.updateError(t._error,e),a}});