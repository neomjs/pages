import e from"./Base.mjs";import t from"../../util/Array.mjs";import a from"../../util/String.mjs";const o=/^(\d+)(kb|mb|gb)?$/i,l={unit:1,kb:1e3,mb:1e6,gb:1e9},s={2:1,4:1};export default Neo.setupClass(class extends e{static config={className:"Neo.form.field.FileUpload",ntype:"file-upload-field",baseCls:["neo-file-upload-field"],cls:["neo-field-empty"],_vdom:{cn:[{tag:"i",cls:"neo-file-upload-state-icon"},{cls:"neo-file-upload-body",cn:[{cls:"neo-file-upload-filename"},{cls:"neo-file-upload-state"}]},{tag:"button",cls:"neo-file-upload-action-button"},{tag:"input",cls:"neo-file-upload-input",type:"file"},{tag:"label",cls:"neo-file-upload-label"},{cls:"neo-file-upload-error-message"}]},headers_:{},documentStatusMap:{SCANNING:"scanning",UPLOADING:"scanning",MALWARE_DETECTED:"scan-failed",UN_DOWNLOADABLE:"not-downloadable",AVAILABLE:"not-downloadable",DOWNLOADABLE:"downloadable",DELETED:"deleted",ERROR:"error"},document_:null,documentId:null,uploadUrl:null,documentIdParameter:"documentId",downloadUrl_:null,documentStatusUrl_:null,statusScanInterval:2e3,documentDeleteUrl_:null,documentDeleteMethod:"DELETE",state_:"ready",types_:null,maxSize_:null,error_:null,chooseFile:"Choose file",documentText:"Document",invalidFileFormat:"invalid file format",pleaseUseTheseTypes:"Please use these file types {allowedFileTypes}",fileSizeMoreThan:"File size exceeds {allowedFileSize}",uploadError:"Please try again",documentDeleteError:"Document delete service error",isNoLongerAvailable:"is no longer available",documentStatusError:"Document status service error",uploadFailed:"Upload failed",scanning:"Scanning",uploading:"Uploading...",malwareFoundInFile:"Malware found in file",pleaseCheck:"Please check the file and try again",successfullyUploaded:"Successfully uploaded",fileWasDeleted:"File was deleted",fileIsInAnErrorState:"File is in an error state"};construct(e){super.construct(e);const t=this;t.addDomListeners([{input:t.onInputValueChange,scope:t},{click:t.onActionButtonClick,delegate:".neo-file-upload-action-button",scope:t}])}afterSetId(e,t){const a=`${this.id}-input`;this.getInputEl().id=this.vdom.cn[4].for=a,super.afterSetId?.(e,t)}onConstructed(){super.onConstructed(...arguments),this.vdom.cn[4].html=this.chooseFile}getInputEl(){return this.vdom.cn[3]}async clear(){const e=this,{cls:a}=e;t.add(a,"neo-field-empty"),e.cls=a,e.vdom.cn[3]={id:`${e.id}-input`,cls:"neo-file-upload-input",tag:"input",type:"file",value:""},e.state="ready",e.error="",e.file=e.document=null,await e.timeout(100),e.focus(e.getInputEl().id)}onInputValueChange({files:e}){const o=this,{types:l,cls:s}=o,r=o.vdom.cn[1];if(e.length){t.remove(s,"neo-field-empty"),o.cls=s;const n=e.item(0),d=n.name.lastIndexOf("."),i=d>-1?n.name.slice(d+1):"",c=a.escapeHtml(n.name);o.types&&!l[i]?(r.cn[0].html=c,r.cn[1].html=`${o.invalidFileFormat} (.${i}) ${o.formatSize(n.size)}`,o.error=o.pleaseUseTheseTypes?.replace("{allowedFileTypes}",Object.keys(l).join(" ."))):n.size>o.maxSize?(r.cn[0].html=c,r.cn[1].html=o.formatSize(n.size),o.error=o.fileSizeMoreThan?.replace("{allowedFileSize}",String(o._maxSize).toUpperCase())):(o.fileSize=o.formatSize(n.size),o.error="",o.upload(n))}else o.state="ready"}async upload(e){const t=this,o=t.xhr=new XMLHttpRequest,{upload:l}=o,s=new FormData,r={...t.headers};t.file=e,t.state="starting",await t.timeout(100),t.focus(t.vdom.cn[2].id),t.vdom.cn[1].cn[0].html=a.escapeHtml(e.name),t.update(),t.state="uploading",t.progress=NaN,s.append("file",e),l.addEventListener("progress",t.onUploadProgress.bind(t)),l.addEventListener("error",t.onUploadError.bind(t)),l.addEventListener("abort",t.onUploadAbort.bind(t)),o.addEventListener("loadend",t.onUploadDone.bind(t)),o.open("POST",t.uploadUrl,!0),t.fire("beforeRequest",{headers:r});for(const e in r)o.setRequestHeader(e,r[e]);o.send(s)}onUploadProgress({loaded:e,total:t}){const a=this.progress=e/t,{vdom:o}=this;(o.style||(o.style={}))["--upload-progress"]=`${a}turn`,o.cn[1].cn[1].html=`${this.uploading}... (${Math.round(100*a)}%)`,this.uploadSize=e,this.update()}onUploadAbort(e){this.xhr=null,this.clear()}onUploadError(e){this.xhr=null,this.state="upload-failed",this.error=`${this.uploadError}`}onUploadDone({loaded:e,target:t}){const a=this;if(a.xhr=null,s[String(t.status)[0]]&&0!==e){const e=JSON.parse(t.response);e.success?(a.documentId=e[a.documentIdParameter],a.documentStatusUrl?(a.state="processing",a.checkDocumentStatus()):a.state="downloadable"):(a.error=e.message,a.state="upload-failed")}}onActionButtonClick(){const e=this,{state:t}=e;switch(t){case"uploading":e.abortUpload();break;case"processing":break;case"upload-failed":case"scan-failed":case"error":case"deleted":e.clear(),e.state="ready";break;case"processing":case"downloadable":case"not-downloadable":e.deleteDocument();break;case"ready":e.clear()}}abortUpload(){this.xhr?.abort()}async deleteDocument(){const e=this,{headers:t}=e;e.fire("beforeRequest",{headers:t});const a=await fetch(e.documentDeleteUrl,{method:e.documentDeleteMethod,headers:t});s[String(a.status)[0]]?(e.clear(),e.state="ready"):e.error=`${e.documentDeleteError}: ${a.statusText}`}async checkDocumentStatus(){const e=this,{headers:t}=e;if("processing"===e.state){e.fire("beforeRequest",{headers:t});const a=await fetch(e.documentStatusUrl,{headers:t});if(s[String(a.status)[0]]){const t=(await a.json()).status,o=e.documentStatusMap[t]||t;switch(o){case"scanning":e.timeout(e.statusScanInterval).then(()=>{e.checkDocumentStatus()});break;case"deleted":e.error=`${e.documentText} ${e.documentId} ${isNoLongerAvailable}`,e.state="ready";break;case"error":e.error=`${e.documentStatusError}: ${a.statusText||`Server error ${a.status}`}`,e.state="deleted";break;default:e.state=o}}else e.error=`${e.documentStatusError}: ${a.statusText||`Server error ${a.status}`}`,e.state="deleted"}}afterSetDocument(e){if(e){const o=this,{cls:l}=o;t.remove(l,"neo-field-empty"),o.cls=l,o.documentId=e.id,o.fileSize=o.formatSize(e.size),o.vdom.cn[1].cn[0].html=a.escapeHtml(e.fileName),o.state=o.documentStatusMap[e.status]}}afterSetState(e,a){const o=this,{vdom:l}=o,s=l.cn[1].cn[0],r=l.cn[1].cn[1];let n;switch(delete l.inert,e){case"ready":s.tag="div",s.href="",n=!0;break;case"upload-failed":r.html=`${o.uploadFailed}${isNaN(o.progress)?"":`... (${Math.round(100*o.progress)}%)`}`,n=!0;break;case"processing":r.html=`${o.scanning}... (${o.formatSize(o.uploadSize)})`,l.inert=!0;break;case"scan-failed":r.html=`${o.malwareFoundInFile}. • ${o.fileSize}`,o.error=o.pleaseCheck,n=!0;break;case"downloadable":s.tag="a",s.href=o.createUrl(o.downloadUrl,{[o.documentIdParameter]:o.documentId}),r.html=o.fileSize,n=!0;break;case"not-downloadable":r.html=o.document?o.fileSize:`${o.successfullyUploaded} • ${o.fileSize}`,n=!0;break;case"deleted":r.html=o.fileWasDeleted,n=!0;break;case"error":r.html=o.fileIsInAnErrorState,o.error=o.pleaseCheck,n=!0}n&&void 0!==a&&o.fireChangeEvent(o.file),o.validate(),o.update();const{cls:d}=o;t.remove(d,"neo-file-upload-state-"+a),t.add(d,"neo-file-upload-state-"+e),t[(o.file||o.document,"neo-field-empty")],o.cls=d}createUrl(e,t){for(const a in t)e=e.replace(`{${a}}`,t[a]);return e}beforeGetHeaders(e){return{...e||{}}}beforeGetDocumentStatusUrl(e){const t=this;return"function"==typeof e?e.call(t,t):t.createUrl(e,{[t.documentIdParameter]:t.documentId})}beforeGetDocumentDeleteUrl(e){const t=this;return"function"==typeof e?e.call(t,t):t.createUrl(e,{[t.documentIdParameter]:t.documentId})}beforeGetDownloadUrl(e){const t=this;return"function"==typeof e?e.call(t,t):t.createUrl(e,{[t.documentIdParameter]:t.documentId})}beforeGetMaxSize(e){if(null==e)return Number.MAX_SAFE_INTEGER;const t=o.exec(e);if(t){const e=l[(t[2]||"unit").toLowerCase()];return parseInt(t[1])*e}}afterSetError(e){this.vdom.cn[5].cn=e?[{vtype:"text",html:e}]:[],this.validate(),this.update()}formatSize(e,t="",a=""){if(e){const o=["Bytes","KB","MB","GB","TB"],l=Math.min(parseInt(Math.floor(Math.log(e)/Math.log(1e3)).toString(),10),o.length-1);return`${(e/1e3**l).toFixed(l?1:0)}${t}${o[l]}${a}`}return"n/a"}validate(){const{cls:e}=this,a=this.isValid();return t.toggle(e,"neo-invalid",!a),this.cls=e,a}isValid(){const e=this;return!e.error&&!("ready"===e.state&&e.required)||"downloadable"===e.state||"not-downloadable"===e.state}});