import e from"./BaseModel.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.selection.table.RowModel",ntype:"selection-table-rowmodel",cls:"neo-selection-rowmodel"};hasAnnotations(e){return!!Object.getOwnPropertyDescriptor(e.__proto__,this.view.selectedRecordField)}addDomListener(){let e=this;e.view.parent.on("rowClick",e.onRowClick,e)}destroy(...e){let o=this;o.view.parent.un("rowClick",o.onRowClick,o),super.destroy(...e)}onKeyDownDown(e){this.onNavKeyRow(1)}onKeyDownUp(e){this.onNavKeyRow(-1)}onNavKeyRow(e){let o,t,n,s=this,{view:i}=s,{store:r}=i,l=r.getCount(),c=0;for(s.hasSelection()&&(c=r.indexOf(i.getRecordByRowId(s.items[0]))),o=(c+e)%l;o<0;)o+=l;t=r.getAt(o),s.hasAnnotations(t)?s.updateAnnotations(t):(n=i.getRowId(t),n&&(s.select(n),i.fire("select",{record:t})))}onRowClick(e){let o,t,n=this,s=e.data.currentTarget,{view:i}=n;s&&(t=i.getRecord(s),n.hasAnnotations(t)?n.updateAnnotations(t):(n.toggleSelection(s),o=n.isSelected(s),!o&&i.onDeselect?.(t),i.fire(o?"select":"deselect",{record:t})))}register(e){super.register(e);let{id:o,view:t}=this;t.keys?._keys.push({fn:"onKeyDownDown",key:"Down",scope:o},{fn:"onKeyDownUp",key:"Up",scope:o})}unregister(){let{id:e,view:o}=this;o.keys?.removeKeys([{fn:"onKeyDownDown",key:"Down",scope:e},{fn:"onKeyDownUp",key:"Up",scope:e}]),super.unregister()}updateAnnotations(e){let o=this,{view:t}=o,n=t.getRowId(e),s=o.isSelected(n),i=t.selectedRecordField;o.singleSelect?s?e[i]=!1:(o.items.forEach((e=>{t.getRecordByRowId(e).setSilent({[i]:!1})})),e[i]=!0):e[i]=!e[i]}});