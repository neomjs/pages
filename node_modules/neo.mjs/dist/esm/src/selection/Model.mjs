import e from"../core/Base.mjs";import s from"../util/Array.mjs";import t from"../core/Observable.mjs";import{isDescriptor as l}from"../core/ConfigSymbols.mjs";export default Neo.setupClass(class extends e{static observable=!0;static config={className:"Neo.selection.Model",ntype:"selection-model",cls:null,items_:{[l]:!0,clone:"shallow",cloneOnGet:"none",isEqual:()=>!1,value:[]},selectedCls:"neo-selected",singleSelect:!0,view_:null};beforeGetView(e){return Neo.getComponent(this._view)}beforeSetView(e){return e&&e.id}addDomListener(){}deselect(e,t,l=this.items,i){let r,o=this,{view:c}=o;e=e.isRecord?c.getItemId(e):Neo.isObject(e)?e.id:e,l.includes(e)?(r=c.getVdomChild(e),r&&(r.cls=s.remove(r.cls||[],i||o.selectedCls),delete r["aria-selected"]),s.remove(l,e),t||(c.update(),c.parent?.onDeselect?.(),c.onDeselect?.(),o.fire("selectionChange",{selection:l}))):t||o.fire("noChange")}deselectAll(e,s=this.items){let t=this,l=[...s],{view:i}=t;l.length?(l.forEach(e=>{t.deselect(e,!0)}),!e&&l.length>0&&i.update(),t.fire("selectionChange",{selection:this.items})):e||t.fire("noChange")}destroy(...e){this.unregister(),super.destroy(...e)}getSelection(){return this.items}hasSelection(){return this.items.length>0}isSelected(e){return this.items.includes(e)}register(e){let s=this,t=e.wrapperCls||[];s.cls&&!t.includes(s.cls)&&(t.push(s.cls),e.wrapperCls=t),s.view=e,s.addDomListener(),e.fire("selectionModelChange",{value:s})}removeDomListeners(){let e=this,t=e.view,l=[...t.domListeners];t.domListeners.forEach(t=>{t.scope===e&&s.remove(l,t)}),t.domListeners=l}select(e,t=this.items,l){Array.isArray(e)||(e=[e]);let i=this,{view:r}=i;e=e.map(e=>e.isRecord?r.getItemId(e):Neo.isObject(e)?e.id:e),Neo.isEqual(t,e)?i.fire("noChange"):(i.singleSelect&&t===i.items&&i.deselectAll(!0,t),e.forEach(e=>{(e=r.getVdomChild(e))&&(e.cls=s.add(e.cls||[],l||i.selectedCls),e["aria-selected"]=!0)}),s.add(t,e),r.silentSelect||r.update(),r.parent?.onSelect?.(e),r.onSelect?.(e),i.fire("selectionChange",{selection:t}))}toggleSelection(e){let s=this;s.isSelected(e)?s.deselect(e):s.select(e)}unregister(){let e=this,t=e.view.wrapperCls||[];e.cls&&t.includes(e.cls)&&(s.remove(t,e.cls),e.view.wrapperCls=t),e.deselectAll(),e.removeDomListeners()}});