import e from"../core/Base.mjs";import t from"../util/Array.mjs";import o from"../util/Style.mjs";import{rawDimensionTags as d}from"./domConstants.mjs";import n from"./VNode.mjs";const a=Neo.config;export default Neo.setupClass(class extends e{static config={className:"Neo.vdom.Helper",remote:{app:["create","update"]},singleton:!0};compareAttributes(e){let d,n,a,r,i,s,l,{deltas:c,oldVnode:p,vnode:m,vnodeMap:v}=e;return!p.componentId||p.id!==m.id&&p.componentId!==m.id?("text"===m.vtype&&m.innerHTML!==p.innerHTML?c.default.push({action:"updateVtext",id:m.id,parentId:v.get(m.id).parentNode.id,value:m.innerHTML}):(r=Object.keys(m),Object.keys(p).forEach(e=>{m.hasOwnProperty(e)?"attributes"===e&&Object.keys(p[e]).forEach(t=>{m[e].hasOwnProperty(t)||(m[e][t]=null)}):r.push(e)}),r.forEach(e=>{switch(n={},a=m[e],e){case"attributes":d={},Object.entries(a).forEach(([e,t])=>{p.attributes.hasOwnProperty(e)&&p.attributes[e]===t||null!==t&&!Neo.isString(t)&&Neo.isEmpty(t)||(d[e]=t)}),Object.keys(d).length>0&&(n.attributes=d,Object.entries(d).forEach(([e,t])=>{null!==t&&""!==t||delete m.attributes[e]}));break;case"nodeName":case"innerHTML":case"textContent":a!==p[e]&&(n[e]=a);break;case"style":i=o.compareStyles(a,p.style),i&&(n.style=i);break;case"className":p.className?(s=t.difference(a,p.className),l=t.difference(p.className,a)):(s=a,l=[]),(s.length>0||l.length>0)&&(n.cls={},s.length>0&&(n.cls.add=s),l.length>0&&(n.cls.remove=l))}Object.keys(n).length>0&&(n.id=m.id,c.default.push(n))})),c):c}async create(e){let t,o,d=this;return await d.importDomApiVnodeCreator(),await d.importStringFromVnode(),o=d.createVnode(e.vdom),t={...e,vnode:o},delete t.vdom,a.useStringBasedMounting&&(t.outerHTML=Neo.vdom.util.StringFromVnode.create(o)),t}createDeltas(e){let{deltas:t={default:[],remove:[]},oldVnode:o,vnode:d}=e,n=o?.id||o?.componentId,a=d?.id;if(!d&&n)return t.remove.push({action:"removeNode",id:n}),t;if(d.static)return t;if(a!==n&&d.componentId!==o.componentId)throw new Error(`createDeltas() must get called for the same node. ${a}, ${n}`);let r,i,s,l,c=this,p=e.oldVnodeMap||c.createVnodeMap({vnode:o}),m=e.vnodeMap||c.createVnodeMap({vnode:d}),v=d.childNodes||[],u=o.childNodes||[],h=0,N=0,g=0,f=Math.max(v.length,u.length);if(c.compareAttributes({deltas:t,oldVnode:o,vnode:d,vnodeMap:m}),0===v.length&&u.length>1)return t.remove.push({action:"removeAll",parentId:a}),t;for(;h<f&&(r=v[h],s=u[h+N],r||s);h++)if(r&&s&&(r.id===s.id||r.componentId&&r.componentId===s.componentId))c.createDeltas({deltas:t,oldVnode:s,oldVnodeMap:p,vnode:r,vnodeMap:m});else{if(s){if(l=s.id||s.componentId,i=m.get(l),!i){c.removeNode({deltas:t,oldVnode:s,oldVnodeMap:p}),h--,g++;continue}if(r&&a!==i.parentNode.id){h--,N++;continue}}r&&(c.isMovedNode(r,p)?c.moveNode({deltas:t,insertDelta:g,oldVnodeMap:p,vnode:r,vnodeMap:m}):c.insertNode({deltas:t,index:h+g,oldVnodeMap:p,vnode:r,vnodeMap:m}),s&&a===m.get(l)?.parentNode.id&&f++)}return t}createVnode(e){if(e.componentId)return e.childNodes??=[],e.id??=e.componentId,e;if(!0===e.removeDom)return null;let t,o=this,a={attributes:{},style:{}};return Object.entries(e).forEach(([e,n])=>{if(null!=n&&"flag"!==e&&"removeDom"!==e){let r,i,s;switch(e){case"tag":a.nodeName=n;break;case"html":a.innerHTML=n.toString();break;case"text":a.textContent=n;break;case"cn":Array.isArray(n)||(n=[n]),i=[],n.forEach(e=>{!0!==e.removeDom&&(delete e.removeDom,t=o.createVnode(e),t&&i.push(t))}),a.childNodes=i;break;case"cls":n&&!Array.isArray(n)?a.className=[n]:Array.isArray(n)&&n.length<1||(a.className=n);break;case"data":n&&"Object"===Neo.typeOf(n)&&Object.entries(n).forEach(([e,t])=>{a.attributes[`data-${Neo.decamel(e)}`]=t});break;case"height":case"maxHeight":case"maxWidth":case"minHeight":case"minWidth":case"width":d.has(a.nodeName)?a.attributes[e]=n+"":(r=n!=parseInt(n),a.style[e]=n+(r?"":"px"));break;case"componentId":case"id":case"static":a[e]=n;break;case"style":s=a.style,Neo.isString(n)?a.style=Object.assign(s,Neo.core.Util.createStyleObject(n)):a.style=Object.assign(s,n);break;default:a.attributes[e]=n+""}}}),Object.keys(a.attributes).length<1&&delete a.attributes,Object.keys(a.style).length<1&&delete a.style,new n(a)}createVnodeMap(e){let t,{vnode:o,parentNode:d=null,index:n=0,map:a=new Map}=e;return o&&(t=o.id||o.componentId,a.set(t,{id:t,index:n,parentNode:d,vnode:o}),o.childNodes?.forEach((e,t)=>{this.createVnodeMap({vnode:e,parentNode:o,index:t,map:a})})),a}findMovedNodes(e){let{movedNodes:t=new Map,oldVnodeMap:o,vnode:d,vnodeMap:n}=e,a=d?.id;return a&&(this.isMovedNode(d,o)?t.set(a,n.get(a)):d.childNodes?.forEach(e=>{"text"!==e.vtype&&this.findMovedNodes({movedNodes:t,oldVnodeMap:o,vnode:e,vnodeMap:n})})),t}async importDomApiVnodeCreator(){a.useStringBasedMounting||Neo.vdom.util?.DomApiVnodeCreator||await import("./util/DomApiVnodeCreator.mjs")}async importStringFromVnode(){a.useStringBasedMounting&&!Neo.vdom.util?.StringFromVnode&&await import("./util/StringFromVnode.mjs")}insertNode({deltas:e,index:t,oldVnodeMap:o,vnode:d,vnodeMap:n}){let r,i=n.get(d.id),{parentNode:s}=i,l=s.id,c=this,p=c.findMovedNodes({oldVnodeMap:o,vnode:d,vnodeMap:n}),m={action:"insertNode",parentId:l},v=!1,u=t,h=0;for(;h<t;h++)r=s.childNodes[h],"text"===r?.vtype&&(u+=2,v=!0);Object.assign(m,{hasLeadingTextChildren:v,index:u}),a.useStringBasedMounting?m.outerHTML=Neo.vdom.util.StringFromVnode.create(d,p):m.vnode=Neo.vdom.util.DomApiVnodeCreator.create(d,p),e.default.push(m),o.get(l).vnode.childNodes.splice(t,0,d),p.forEach(t=>{let{id:d}=t,a=t.parentNode.id;e.default.push({action:"moveNode",id:d,index:t.index,parentId:a}),c.createDeltas({deltas:e,oldVnode:o.get(d).vnode,oldVnodeMap:o,vnode:t.vnode,vnodeMap:n})})}isMovedNode(e,t){let o=t.get(e.id);return o&&(!o.vnode.componentId||e.componentId===o.vnode.componentId)}moveNode({deltas:e,insertDelta:o,oldVnodeMap:d,vnode:n,vnodeMap:a}){let r,i=a.get(n.id),{index:s,parentNode:l}=i,c=l.id,p=d.get(n.id),m=p.parentNode,{childNodes:v}=m,u={action:"moveNode",id:n.id,parentId:c},h=s,N=0;for(;N<s;N++)r=l.childNodes[N],"text"===r?.vtype&&(h+=2);if(Object.assign(u,{index:h+o}),e.default.push(u),c!==m.id){t.remove(v,p.vnode);let e=d.get(c);e&&(p.parentNode=e.vnode,v=p.parentNode.childNodes)}t.insert(v,s,p.vnode),this.createDeltas({deltas:e,oldVnode:p.vnode,oldVnodeMap:d,vnode:n,vnodeMap:a})}removeNode({deltas:e,oldVnode:o,oldVnodeMap:d}){o.componentId&&(o.id??=o.componentId);let n={action:"removeNode",id:o.id},{parentNode:a}=d.get(o.id);"text"===o.vtype&&(n.parentId=a.id),e.remove.push(n),t.remove(a.childNodes,o)}async update(e){let t,o,d=this;return await d.importDomApiVnodeCreator(),await d.importStringFromVnode(),o=d.createVnode(e.vdom),t=d.createDeltas({oldVnode:e.vnode,vnode:o}),t=t.default.concat(t.remove),{deltas:t,updateVdom:!0,vnode:o}}});