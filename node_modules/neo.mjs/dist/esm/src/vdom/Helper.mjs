import e from"../core/Base.mjs";import t from"../util/Array.mjs";import o from"../util/Style.mjs";import{rawDimensionTags as d}from"./domConstants.mjs";import n from"./VNode.mjs";const a=Neo.config;export default Neo.setupClass(class extends e{static config={className:"Neo.vdom.Helper",remote:{app:["create","update"]},singleton:!0};compareAttributes({deltas:e,oldVnode:d,vnode:n,vnodeMap:a}){if(d.componentId&&(d.id===n.id||d.componentId===n.id))return e;let r,i,s,l,c,p,m;return"text"===n.vtype&&n.innerHTML!==d.innerHTML?e.default.push({action:"updateVtext",id:n.id,parentId:a.get(n.id).parentNode.id,value:n.innerHTML}):(l=Object.keys(n),Object.keys(d).forEach(e=>{n.hasOwnProperty(e)?"attributes"===e&&Object.keys(d[e]).forEach(t=>{n[e].hasOwnProperty(t)||(n[e][t]=null)}):l.push(e)}),l.forEach(a=>{switch(i={},s=n[a],a){case"attributes":r={},Object.entries(s).forEach(([e,t])=>{d.attributes.hasOwnProperty(e)&&d.attributes[e]===t||null!==t&&!Neo.isString(t)&&Neo.isEmpty(t)||(r[e]=t)}),Object.keys(r).length>0&&(i.attributes=r,Object.entries(r).forEach(([e,t])=>{null!==t&&""!==t||delete n.attributes[e]}));break;case"nodeName":case"innerHTML":case"textContent":s!==d[a]&&(i[a]=s);break;case"style":c=o.compareStyles(s,d.style),c&&(i.style=c);break;case"className":d.className?(p=t.difference(s,d.className),m=t.difference(d.className,s)):(p=s,m=[]),(p.length>0||m.length>0)&&(i.cls={},p.length>0&&(i.cls.add=p),m.length>0&&(i.cls.remove=m))}Object.keys(i).length>0&&(i.id=n.id,e.default.push(i))})),e}async create(e){let t,o,d=this;return await d.importDomApiVnodeCreator(),await d.importStringFromVnode(),o=d.createVnode(e.vdom),t={...e,vnode:o},delete t.vdom,a.useStringBasedMounting&&(t.outerHTML=Neo.vdom.util.StringFromVnode.create(o)),t}createDeltas(e){let{deltas:t={default:[],remove:[]},oldVnode:o,vnode:d}=e,n=o?.id||o?.componentId,a=d?.id;if(!d&&n)return t.remove.push({action:"removeNode",id:n}),t;if(d.static)return t;if(a!==n&&d.componentId!==o.componentId)throw new Error(`createDeltas() must get called for the same node. ${a}, ${n}`);let r,i,s,l,c=this,p=e.oldVnodeMap||c.createVnodeMap({vnode:o}),m=e.vnodeMap||c.createVnodeMap({vnode:d}),v=d.childNodes||[],u=o.childNodes||[],h=0,N=0,g=0,f=Math.max(v.length,u.length);if(c.compareAttributes({deltas:t,oldVnode:o,vnode:d,vnodeMap:m}),0===v.length&&u.length>1)return t.remove.push({action:"removeAll",parentId:a}),t;for(;h<f&&(r=v[h],s=u[h+N],r||s);h++)if(r&&s&&(r.id===s.id||r.componentId&&r.componentId===s.componentId))c.createDeltas({deltas:t,oldVnode:s,oldVnodeMap:p,vnode:r,vnodeMap:m});else{if(s){if(l=s.id||s.componentId,i=m.get(l),!i){c.removeNode({deltas:t,oldVnode:s,oldVnodeMap:p}),h--,g++;continue}if(r&&a!==i.parentNode.id){h--,N++;continue}}r&&(c.isMovedNode(r,p)?c.moveNode({deltas:t,insertDelta:g,oldVnodeMap:p,vnode:r,vnodeMap:m}):c.insertNode({deltas:t,index:h+g,oldVnodeMap:p,vnode:r,vnodeMap:m}),s&&a===m.get(l)?.parentNode.id&&f++)}return t}createVnode(e){if(e.componentId)return e.childNodes??=[],e.id??=e.componentId,e;if(!0===e.removeDom)return null;let t,o=this,a={attributes:{},style:{}};return Object.entries(e).forEach(([e,n])=>{if(null!=n&&"flag"!==e&&"removeDom"!==e){let r,i,s;switch(e){case"tag":a.nodeName=n;break;case"html":a.innerHTML=n.toString();break;case"text":a.textContent=n;break;case"cn":Array.isArray(n)||(n=[n]),i=[],n.forEach(e=>{!0!==e.removeDom&&(delete e.removeDom,t=o.createVnode(e),t&&i.push(t))}),a.childNodes=i;break;case"cls":n&&!Array.isArray(n)?a.className=[n]:Array.isArray(n)&&n.length<1||(a.className=n);break;case"data":n&&"Object"===Neo.typeOf(n)&&Object.entries(n).forEach(([e,t])=>{a.attributes[`data-${Neo.decamel(e)}`]=t});break;case"height":case"maxHeight":case"maxWidth":case"minHeight":case"minWidth":case"width":d.has(a.nodeName)?a.attributes[e]=n+"":(r=n!=parseInt(n),a.style[e]=n+(r?"":"px"));break;case"componentId":case"id":case"static":a[e]=n;break;case"style":s=a.style,Neo.isString(n)?a.style=Object.assign(s,Neo.core.Util.createStyleObject(n)):a.style=Object.assign(s,n);break;default:a.attributes[e]=n+""}}}),Object.keys(a.attributes).length<1&&delete a.attributes,Object.keys(a.style).length<1&&delete a.style,new n(a)}createVnodeMap({index:e=0,map:t=new Map,parentNode:o=null,vnode:d}){if(d){let n=d.id||d.componentId;t.set(n,{id:n,index:e,parentNode:o,vnode:d}),d.childNodes?.forEach((e,o)=>{this.createVnodeMap({index:o,map:t,parentNode:d,vnode:e})})}return t}findMovedNodes({movedNodes:e=new Map,oldVnodeMap:t,vnode:o,vnodeMap:d}){let n=o?.id;return n&&(this.isMovedNode(o,t)?e.set(n,d.get(n)):o.childNodes?.forEach(o=>{"text"!==o.vtype&&this.findMovedNodes({movedNodes:e,oldVnodeMap:t,vnode:o,vnodeMap:d})})),e}getPhysicalIndex(e,t){let o=t,d=0;for(;d<t;d++)"text"===e.childNodes[d]?.vtype&&(o+=2);return o}async importDomApiVnodeCreator(){a.useStringBasedMounting||Neo.vdom.util?.DomApiVnodeCreator||await import("./util/DomApiVnodeCreator.mjs")}async importStringFromVnode(){a.useStringBasedMounting&&!Neo.vdom.util?.StringFromVnode&&await import("./util/StringFromVnode.mjs")}insertNode({deltas:e,index:t,oldVnodeMap:o,vnode:d,vnodeMap:n}){let r=n.get(d.id),{parentNode:i}=r,s=i.id,l=this,c=l.findMovedNodes({oldVnodeMap:o,vnode:d,vnodeMap:n}),p={action:"insertNode",parentId:s},m=l.getPhysicalIndex(i,t);Object.assign(p,{hasLeadingTextChildren:!1,index:m}),a.useStringBasedMounting?p.outerHTML=Neo.vdom.util.StringFromVnode.create(d,c):p.vnode=Neo.vdom.util.DomApiVnodeCreator.create(d,c),e.default.push(p),o.get(s).vnode.childNodes.splice(t,0,d),c.forEach(t=>{let{id:d}=t,a=t.parentNode.id;e.default.push({action:"moveNode",id:d,index:t.index,parentId:a}),l.createDeltas({deltas:e,oldVnode:o.get(d).vnode,oldVnodeMap:o,vnode:t.vnode,vnodeMap:n})})}isMovedNode(e,t){let o=t.get(e.id);return o&&(!o.vnode.componentId||e.componentId===o.vnode.componentId)}moveNode({deltas:e,insertDelta:o,oldVnodeMap:d,vnode:n,vnodeMap:a}){let r=a.get(n.id),{index:i,parentNode:s}=r,l=s.id,c=d.get(n.id),p=c.parentNode,{childNodes:m}=p,v={action:"moveNode",id:n.id,parentId:l},u=this.getPhysicalIndex(s,i);if(Object.assign(v,{index:u+o}),e.default.push(v),l!==p.id){t.remove(m,c.vnode);let e=d.get(l);e&&(c.parentNode=e.vnode,m=c.parentNode.childNodes)}t.insert(m,i,c.vnode),this.createDeltas({deltas:e,oldVnode:c.vnode,oldVnodeMap:d,vnode:n,vnodeMap:a})}removeNode({deltas:e,oldVnode:o,oldVnodeMap:d}){o.componentId&&(o.id??=o.componentId);let n={action:"removeNode",id:o.id},{parentNode:a}=d.get(o.id);"text"===o.vtype&&(n.parentId=a.id),e.remove.push(n),t.remove(a.childNodes,o)}async update(e){let t,o,d=this;return await d.importDomApiVnodeCreator(),await d.importStringFromVnode(),o=d.createVnode(e.vdom),t=d.createDeltas({oldVnode:e.vnode,vnode:o}),t=t.default.concat(t.remove),{deltas:t,updateVdom:!0,vnode:o}}});