import t from"../../functional/component/Base.mjs";import e from"../../util/Array.mjs";export default Neo.setupClass(class extends t{static badgePositions=["bottom-left","bottom-right","top-left","top-right"];static iconPositions=["top","right","bottom","left"];static config={className:"Neo.functional.button.Base",ntype:"functional-button",badgePosition_:"top-right",badgeText_:null,baseCls:["neo-button"],editRoute:!0,handler_:null,handlerScope:null,iconCls_:null,iconColor_:null,iconPosition_:"left",menu_:null,pressed_:!1,ripples_:[],route_:null,tag:"button",text_:null,url_:null,urlTarget_:"_blank",useRippleEffect_:!0};rippleEffectDuration=400;rippleCleanupTimeout=null;construct(t){super.construct(t);let e=this;e.addDomListeners({click:e.onClick,scope:e})}createVdom(t,o){const n=this,{badgePosition:i,badgeText:l,cls:s,editRoute:r,iconCls:a,iconColor:u,iconPosition:p,pressed:c,ripples:d,route:m,style:g,tag:h,text:f,url:b,urlTarget:y,useRippleEffect:x}=t,C=[...n.baseCls,...s||[]];e.toggle(C,"no-text",!f),e.toggle(C,"pressed",c),C.push("icon-"+p);const _=!r&&m||b,P=_?"a":h;return{tag:P,cls:C,style:g,href:_?_.startsWith("#")?_:"#"+_:null,target:b?y:null,type:"button"===P?"button":null,cn:[{tag:"span",cls:["neo-button-glyph",...a||[]],removeDom:!a,style:{color:u||null}},{tag:"span",cls:["neo-button-text"],removeDom:!f,text:f},{tag:"span",cls:["neo-button-badge","neo-"+i],removeDom:!l,text:l},{cls:["neo-button-ripple-wrapper"],removeDom:!(x&&d.length>0),cn:d.map(t=>({cls:["neo-button-ripple"],id:t.id,style:{animation:`ripple ${n.rippleEffectDuration}ms linear`,height:`${t.diameter}px`,left:`${t.left}px`,top:`${t.top}px`,width:`${t.diameter}px`}}))}]}}onClick(t){let e=this;if(e.bindCallback(e.handler,"handler",e.handlerScope||e),e.handler?.(t),e.menu&&e.toggleMenu(),e.route&&e.changeRoute(),e.useRippleEffect){const o=t.path[0].rect,n=Math.max(o.height,o.width),i=n/2,l=Neo.getId("ripple");e.ripples=[...e.ripples,{id:l,diameter:n,left:t.clientX-o.left-i,top:t.clientY-o.top-i}],clearTimeout(e.rippleCleanupTimeout),e.rippleCleanupTimeout=e.timeout(e.rippleEffectDuration).then(()=>{e.ripples=[]})}}afterSetMenu(t,e){const o=this;t?(o.menuList?.destroy(!0,!1),o.menuList=null,import("../../menu/List.mjs").then(e=>{const n=Array.isArray(t),i=n?t:t.items,l=n?{}:t,s=o.getStateProvider(),{appName:r,theme:a,windowId:u}=o,p=Neo.merge({module:e.default,align:{edgeAlign:"t0-b0",target:o.id},appName:r,displayField:"text",floating:!0,hidden:!0,parentComponent:o,theme:a,windowId:u},l);i&&(p.items=i),s&&(p.stateProvider={parent:s}),o.menuList=Neo.create(p)})):o.menuList&&(o.menuList.destroy(!0,!1),o.menuList=null)}beforeSetBadgePosition(t,e){return this.beforeSetEnumValue(t,e,"badgePosition",this.constructor.badgePositions)}beforeSetIconCls(t,e){return t&&!Array.isArray(t)?t.split(" ").filter(Boolean):t||null}beforeSetIconPosition(t,e){return this.beforeSetEnumValue(t,e,"iconPosition",this.constructor.iconPositions)}changeRoute(){this.editRoute&&Neo.Main.editRoute(this.route)}destroy(...t){clearTimeout(this.rippleCleanupTimeout),this.menuList?.destroy(!0,!1),super.destroy(...t)}async toggleMenu(){const t=this;let{menuList:e}=t,o=!e?.hidden;e&&(e.hidden=o,o||await t.timeout(50))}});