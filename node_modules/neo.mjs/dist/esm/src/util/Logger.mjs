import o from"../core/Base.mjs";export default Neo.setupClass(class extends o{static config={className:"Neo.util.Logger",level_:"info",singleton:!0};logChars={error:"E",info:"I",log:"L",warn:"W"};logColors={error:"indianred",info:"#acacac",log:"#448888",warn:"#6d6d00"};logLevels=["info","log","warn","error"];construct(o){super.construct(o);let e=this;Neo.applyFromNs(Neo,e,{error:"error",info:"info",log:"log",logError:"logError",warn:"warn"},!0),e.timeout(50).then((()=>{Neo.config.enableLogsInProduction||"dist/production"!==Neo.config.environment||(e.write=Neo.emptyFn)}))}beforeSetLevel(o,e){return this.logLevels.indexOf(o)}error(o){throw new Error(o)}getCaller(){let o,e,r,t=(new Error).stack.split("\n"),l=!1;for(e in t)if(r=t[e],!l&&/Logger\.mjs/.test(r))l=!0;else if(l&&!/Logger\.mjs/.test(r)){r=r.replace(")",""),o=r.match(/([^\/]+)$/)[1].match(/([^ ]+)$/)[1];break}return o}info(...o){o=this.resolveArgs(...o),this.write(o,"info")}log(...o){o=this.resolveArgs(...o),this.write(o,"log")}logError(...o){o=this.resolveArgs(...o),this.write(o,"error")}onContextMenu(o){let{config:e}=Neo;if(e.enableComponentLogger&&("dist/production"!==e.env||!e.enableLogsInProduction)){let e,r=!1;o.path.forEach((o=>{e=Neo.getComponent(o.id,!1),e&&(r||(r=!0,console.group(o.id)),console.log(e))})),r&&console.groupEnd()}}resolveArgs(...o){let e=o[0],r={};return 1===o.length?Neo.isString(e)?r.msg=o[0]:Neo.isObject(e)&&(r=e):o.length>2&&(r.msg=o[0],r.data=o.slice(1)),r}warn(...o){o=this.resolveArgs(...o),this.write(o,"warn")}write(o,e){let r=this;if(r.beforeSetLevel(e)<r.level)return;console.log("#",o.msg,e);let t=r.logColors[e],l=r.logChars[e],n=`background-color:${t}; color: white; font-weight: 900;`,s=`color:${t};`,i=`[${r.getCaller()}] ${o.msg}`;o.data?(console.groupCollapsed(`%c ${l} %c ${i}`,n,s),console.log(o.data),console.groupEnd()):console.log(`%c ${l} %c ${i}`,n,s)}});