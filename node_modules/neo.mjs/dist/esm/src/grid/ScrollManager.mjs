import o from"../core/Base.mjs";export default Neo.setupClass(class extends o{static delayable={onBodyScroll:{type:"throttle",timer:16},onBodyScrollEnd:{type:"buffer",timer:150},onContainerScroll:{type:"throttle",timer:16}};static config={className:"Neo.grid.ScrollManager",scrollLeft_:0,scrollTop_:0};gridBody=null;gridContainer=null;lastTouchX=0;lastTouchY=0;touchMoveOwner=null;construct(o){super.construct(o);let l=this;l.gridBody.addDomListeners({scroll:l.onBodyScroll,touchcancel:l.onTouchCancel,touchend:l.onTouchEnd,scope:l}),l.gridContainer.addDomListeners({scroll:l.onContainerScroll,scope:l})}onBodyScroll({scrollTop:o,touches:l}){let e,c,t=this,r=t.gridBody;t.scrollTop=o,r.set({isScrolling:!0,scrollTop:o}),t.onBodyScrollEnd(),l&&("container"!==t.touchMoveOwner&&(t.touchMoveOwner="body"),"body"===t.touchMoveOwner&&(c=l.lastTouch.clientX-l.firstTouch.clientX,e=t.lastTouchX-c,0!==e&&Neo.main.DomAccess.scrollTo({direction:"left",id:t.gridContainer.id,value:t.scrollLeft+e}),t.lastTouchX=c))}onBodyScrollEnd(){this.gridBody.isScrolling=!1}onContainerScroll({scrollLeft:o,target:l,touches:e}){let c,t,r=this,n=r.gridBody;l.id.includes("grid-container")&&(n.isScrolling=!0,r.onBodyScrollEnd(),r.scrollLeft=o,n.scrollLeft=o,r.gridContainer.headerToolbar.scrollLeft=o,e&&!r.gridContainer.headerToolbar.cls.includes("neo-is-dragging")&&("body"!==r.touchMoveOwner&&(r.touchMoveOwner="container"),"container"===r.touchMoveOwner&&(t=e.lastTouch.clientY-e.firstTouch.clientY,c=r.lastTouchY-t,0!==c&&Neo.main.DomAccess.scrollTo({direction:"top",id:n.vdom.id,value:r.scrollTop+c}),r.lastTouchY=t)))}onTouchCancel(o){this.onTouchEnd(o)}onTouchEnd(o){let l=this;l.touchMoveOwner=null,l.lastTouchX=0,l.lastTouchY=0}});