import o from"../core/Base.mjs";export default Neo.setupClass(class extends o{static config={className:"Neo.grid.ScrollManager",scrollLeft_:0,scrollTop_:0};gridContainer=null;gridView=null;lastTouchX=0;lastTouchY=0;scrollTimeoutId=null;touchMoveOwner=null;construct(o){super.construct(o);let e=this;e.gridContainer.addDomListeners({scroll:e.onContainerScroll,scope:e}),e.gridView.addDomListeners({scroll:e.onViewScroll,touchcancel:e.onTouchCancel,touchend:e.onTouchEnd,scope:e})}onContainerScroll({scrollLeft:o,target:e,touches:l}){let c,t,r=this,i=r.gridView;e.id.includes("grid-container")&&(r.scrollLeft=o,i.scrollLeft=o,r.gridContainer.headerToolbar.scrollLeft=o,l&&!r.gridContainer.headerToolbar.cls.includes("neo-is-dragging")&&("view"!==r.touchMoveOwner&&(r.touchMoveOwner="container"),"container"===r.touchMoveOwner&&(t=l.lastTouch.clientY-l.firstTouch.clientY,c=r.lastTouchY-t,0!==c&&Neo.main.DomAccess.scrollTo({direction:"top",id:i.vdom.id,value:r.scrollTop+c}),r.lastTouchY=t)))}onTouchCancel(o){this.onTouchEnd(o)}onTouchEnd(o){let e=this;e.touchMoveOwner=null,e.lastTouchX=0,e.lastTouchY=0}onViewScroll({scrollTop:o,touches:e}){let l,c,t=this,r=t.gridView;t.scrollTop=o,t.scrollTimeoutId&&clearTimeout(t.scrollTimeoutId),t.scrollTimeoutId=setTimeout((()=>{r.isScrolling=!1}),100),r.set({isScrolling:!0,scrollTop:o}),e&&("container"!==t.touchMoveOwner&&(t.touchMoveOwner="view"),"view"===t.touchMoveOwner&&(c=e.lastTouch.clientX-e.firstTouch.clientX,l=t.lastTouchX-c,0!==l&&Neo.main.DomAccess.scrollTo({direction:"left",id:t.gridContainer.id,value:t.scrollLeft+l}),t.lastTouchX=c))}});