import e from"../helix/ViewportController.mjs";export default Neo.setupClass(class extends e{static config={className:"Neo.examples.component.multiWindowHelix.ViewportController"};connectedApps=[];async createPopupWindow(){let e=this,{windowId:n}=e,{config:o,windowConfigs:t}=Neo,{environment:i}=o,p=parseInt(Object.keys(t)[0]),{basePath:a}=t[p],c=e.getReference("controls-panel"),s=await Neo.Main.getWindowData({windowId:n}),l=await e.component.getDomRect(c.id),{height:d,left:r,top:w,width:m}=l;"development"!==i&&(a=`${a+i}/`),d+=1,r+=m+s.screenLeft,w+=s.outerHeight-s.innerHeight+s.screenTop-63,e.component.up("live-preview")&&(d-=63,w+=63),await Neo.Main.windowOpen({url:a+"examples/component/multiWindowHelix/childapp/",windowFeatures:`height=${d},left=${r},top=${w},width=${m}`,windowId:p,windowName:"HelixControls"})}async onAppConnect(e){let n=this,{appName:o}=e;if("HelixControls"===o){let e=n.getReference("controls-panel"),{mainView:t}=Neo.apps[o];n.connectedApps.push(o),this.getReference("header-toolbar").hidden=!0,t.add(e)}}async onAppDisconnect(e){let n=this,{appName:o,windowId:t}=e;"HelixControls"===o?(n.getReference("header-toolbar").hidden=!1,n.component.add(n.getReference("controls-panel"))):"Neo.examples.component.multiWindowHelix"===o&&Neo.Main.windowClose({names:n.connectedApps,windowId:t})}onConstructed(){super.onConstructed();let e=this;Neo.currentWorker.on({connect:e.onAppConnect,disconnect:e.onAppDisconnect,scope:e})}async onMaximiseButtonClick(e){await this.createPopupWindow()}});