{"classData":[{"comment":"/**\n * @class Neo.mixin.VdomLifecycle\n * @extends Neo.core.Base\n */","meta":{"filename":"VdomLifecycle.mjs","lineno":12,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"kind":"class","name":"VdomLifecycle","augments":["Neo.core.Base"],"memberof":"Neo.mixin","longname":"Neo.mixin.VdomLifecycle","scope":"static","$longname":"Neo.mixin.VdomLifecycle","$kind":"class","id":4597,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * @member {String} className='Neo.mixin.VdomLifecycle'\n         * @protected\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":22,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.mixin.VdomLifecycle'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":4598,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * True automatically initializes the vnode of a component after being created inside the init call.\n         * Use this for the top level component of your app.\n         * @member {Boolean} autoInitVnode=false\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":28,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>True automatically initializes the vnode of a component after being created inside the init call.\nUse this for the top level component of your app.</p>\n","kind":"member","name":"autoInitVnode","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"autoInitVnode","scope":"global","$longname":"autoInitVnode","$kind":"property","id":4599,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * True automatically mounts a component after being rendered.\n         * Use this for the top level component of your app.\n         * @member {Boolean} autoMount=false\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>True automatically mounts a component after being rendered.\nUse this for the top level component of your app.</p>\n","kind":"member","name":"autoMount","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"autoMount","scope":"global","$longname":"autoMount","$kind":"property","id":4600,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * Internal flag for vdom changes after a component got unmounted\n         * (delta updates can no longer get applied & a new render call is required before re-mounting)\n         * @member {Boolean} hasUnmountedVdomChanges_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":42,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>Internal flag for vdom changes after a component got unmounted\n(delta updates can no longer get applied &amp; a new render call is required before re-mounting)</p>\n","kind":"member","name":"hasUnmountedVdomChanges_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"hasUnmountedVdomChanges_","scope":"global","$longname":"hasUnmountedVdomChanges_","$kind":"property","id":4601,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * Internal flag which will get set to true while an update request (worker messages) is in progress\n         * @member {Boolean} isVdomUpdating_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":49,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>Internal flag which will get set to true while an update request (worker messages) is in progress</p>\n","kind":"member","name":"isVdomUpdating_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"isVdomUpdating_","scope":"global","$longname":"isVdomUpdating_","$kind":"property","id":4602,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * True in case the component is initializing the vnode\n         * @member {Boolean} isVnodeInitializing_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":56,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>True in case the component is initializing the vnode</p>\n","kind":"member","name":"isVnodeInitializing_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"isVnodeInitializing_","scope":"global","$longname":"isVnodeInitializing_","$kind":"property","id":4603,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * True in case the component is mounted to the DOM\n         * @member {Boolean} mounted_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":63,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>True in case the component is mounted to the DOM</p>\n","kind":"member","name":"mounted_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"mounted_","scope":"global","$longname":"mounted_","$kind":"property","id":4604,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * Internal flag which will get set to true in case an update call arrives while another update is running\n         * @member {Boolean} needsVdomUpdate_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":70,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>Internal flag which will get set to true in case an update call arrives while another update is running</p>\n","kind":"member","name":"needsVdomUpdate_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"needsVdomUpdate_","scope":"global","$longname":"needsVdomUpdate_","$kind":"property","id":4605,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * Set this to true for bulk updates. Ensure to set it back to false afterwards.\n         * Internally the value will get saved as a number to ensure that child methods won't stop the silent mode too early.\n         * @member {Boolean} silentVdomUpdate_=false\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":77,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>Set this to true for bulk updates. Ensure to set it back to false afterwards.\nInternally the value will get saved as a number to ensure that child methods won&#39;t stop the silent mode too early.</p>\n","kind":"member","name":"silentVdomUpdate_","type":{"names":["Boolean"]},"defaultvalue":false,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"silentVdomUpdate_","scope":"global","$longname":"silentVdomUpdate_","$kind":"property","id":4606,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * Defines the depth of the vdom tree for the next update cycle.\n         * - The value 1 will only send the current vdom structure as it is\n         * - The value of 2 will include the vdom of direct children\n         * - The value of 3 will include the vdom of grandchildren\n         * - The value of -1 will include the full tree of any depth\n         * @member {Number} updateDepth_=1\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":87,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>Defines the depth of the vdom tree for the next update cycle.</p>\n<ul>\n<li>The value 1 will only send the current vdom structure as it is</li>\n<li>The value of 2 will include the vdom of direct children</li>\n<li>The value of 3 will include the vdom of grandchildren</li>\n<li>The value of -1 will include the full tree of any depth</li>\n</ul>\n","kind":"member","name":"updateDepth_","type":{"names":["Number"]},"defaultvalue":1,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"updateDepth_","scope":"global","$longname":"updateDepth_","$kind":"property","id":4607,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n         * The component vnode tree. Available after the component got vnodeInitialized.\n         * @member {Object} vnode_=={[isDescriptor]: true, value: null, isEqual: (a, b) => a === b,}\n         * @protected\n         * @reactive\n         */","meta":{"filename":"VdomLifecycle.mjs","lineno":94,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{}},"description":"<p>The component vnode tree. Available after the component got vnodeInitialized.</p>\n","kind":"member","name":"vnode_","type":{"names":["Object"]},"defaultvalue":"={[isDescriptor]: true, value: null, isEqual: (a, b) => a === b,}","access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"vnode_","scope":"global","$longname":"vnode_","$kind":"property","id":4608,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Triggered after the hasUnmountedVdomChanges config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[4070,4580],"filename":"VdomLifecycle.mjs","lineno":109,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139415","name":"VdomLifecycle#afterSetHasUnmountedVdomChanges","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the hasUnmountedVdomChanges config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetHasUnmountedVdomChanges","longname":"VdomLifecycle#afterSetHasUnmountedVdomChanges","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#afterSetHasUnmountedVdomChanges","$kind":"method","id":4609,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Triggered after the vdom pseudo-config got changed\n     * @param {Object} value\n     * @param {Object|null} oldValue\n     * @protected\n     */","meta":{"range":[4744,4807],"filename":"VdomLifecycle.mjs","lineno":132,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139473","name":"VdomLifecycle#afterSetVdom","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the vdom pseudo-config got changed</p>\n","params":[{"type":{"names":["Object"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetVdom","longname":"VdomLifecycle#afterSetVdom","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#afterSetVdom","$kind":"method","id":4610,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Triggered after the vnode config got changed\n     * @param {Object} value\n     * @param {Object|null} oldValue\n     * @protected\n     */","meta":{"range":[4965,5058],"filename":"VdomLifecycle.mjs","lineno":142,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139484","name":"VdomLifecycle#afterSetVnode","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the vnode config got changed</p>\n","params":[{"type":{"names":["Object"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetVnode","longname":"VdomLifecycle#afterSetVnode","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#afterSetVnode","$kind":"method","id":4611,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Creates a lightweight, serializable placeholder for this component, intended for injection\n     * into the VDOM of other components.\n     *\n     * This is the **only recommended way** to nest a component within another component's VDOM tree.\n     * Directly embedding one component's full `vdom` object into another's is an anti-pattern\n     * that violates the principle of scoped VDOM, leading to unpredictable rendering behavior\n     * and making updates inefficient.\n     *\n     * At its core, the returned object contains a `componentId` that uniquely identifies the\n     * component instance. In cases where a component's structure is wrapped by another element\n     * (e.g., a Button in a Table Header being wrapped by a `<td>`), the reference will also\n     * include the wrapper's `id`. This happens when a component uses `getVdomRoot()` to\n     * designate a deeper node as its logical root, causing the component's `id` and its\n     * VDOM root's `id` to differ. The framework uses this dual-ID reference to correctly\n     * assemble the final VDOM tree.\n     *\n     * @returns {{componentId: String, id: String|undefined}} The VDOM reference object.\n     */","meta":{"range":[6249,6503],"filename":"VdomLifecycle.mjs","lineno":165,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139499","name":"VdomLifecycle#createVdomReference","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Creates a lightweight, serializable placeholder for this component, intended for injection\ninto the VDOM of other components.</p>\n<p>This is the <strong>only recommended way</strong> to nest a component within another component&#39;s VDOM tree.\nDirectly embedding one component&#39;s full <code>vdom</code> object into another&#39;s is an anti-pattern\nthat violates the principle of scoped VDOM, leading to unpredictable rendering behavior\nand making updates inefficient.</p>\n<p>At its core, the returned object contains a <code>componentId</code> that uniquely identifies the\ncomponent instance. In cases where a component&#39;s structure is wrapped by another element\n(e.g., a Button in a Table Header being wrapped by a <code>&lt;td&gt;</code>), the reference will also\ninclude the wrapper&#39;s <code>id</code>. This happens when a component uses <code>getVdomRoot()</code> to\ndesignate a deeper node as its logical root, causing the component&#39;s <code>id</code> and its\nVDOM root&#39;s <code>id</code> to differ. The framework uses this dual-ID reference to correctly\nassemble the final VDOM tree.</p>\n","returns":[{"type":{"names":["Object"]},"description":"The VDOM reference object."}],"name":"createVdomReference","longname":"VdomLifecycle#createVdomReference","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#createVdomReference","$kind":"method","id":4612,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Internal method to send update requests to the vdom worker\n     * @param {function} [resolve] used by promiseUpdate()\n     * @param {function} [reject] used by promiseUpdate()\n     * @private\n     */","meta":{"range":[6724,8782],"filename":"VdomLifecycle.mjs","lineno":183,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139538","name":"VdomLifecycle#executeVdomUpdate","type":"MethodDefinition","paramnames":["resolve","reject"]},"vars":{"":null}},"description":"<p>Internal method to send update requests to the vdom worker</p>\n","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>used by promiseUpdate()</p>\n","name":"resolve"},{"type":{"names":["function"]},"optional":true,"description":"<p>used by promiseUpdate()</p>\n","name":"reject"}],"access":"private","name":"executeVdomUpdate","longname":"VdomLifecycle#executeVdomUpdate","kind":"function","memberof":"VdomLifecycle","scope":"instance","async":true,"$longname":"VdomLifecycle#executeVdomUpdate","$kind":"method","id":4613,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Honors different item roots for mount / render OPs\n     * @returns {String}\n     */","meta":{"range":[8887,9112],"filename":"VdomLifecycle.mjs","lineno":241,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139740","name":"VdomLifecycle#getMountedParentId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Honors different item roots for mount / render OPs</p>\n","returns":[{"type":{"names":["String"]}}],"name":"getMountedParentId","longname":"VdomLifecycle#getMountedParentId","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#getMountedParentId","$kind":"method","id":4614,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Calculate the real parentIndex inside the DOM\n     * @returns {Number|undefined}\n     */","meta":{"range":[9222,9682],"filename":"VdomLifecycle.mjs","lineno":253,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139767","name":"VdomLifecycle#getMountedParentIndex","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Calculate the real parentIndex inside the DOM</p>\n","returns":[{"type":{"names":["Number","undefined"]}}],"name":"getMountedParentIndex","longname":"VdomLifecycle#getMountedParentIndex","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#getMountedParentIndex","$kind":"method","id":4615,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Search a vdom child node by id for a given vdom tree\n     * @param {String} id\n     * @param {Object} vdom=this.vdom\n     * @returns {Object}\n     */","meta":{"range":[9853,9938],"filename":"VdomLifecycle.mjs","lineno":280,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139830","name":"VdomLifecycle#getVdomChild","type":"MethodDefinition","paramnames":["id","vdom"]},"vars":{"":null}},"description":"<p>Search a vdom child node by id for a given vdom tree</p>\n","params":[{"type":{"names":["String"]},"name":"id"},{"type":{"names":["Object"]},"defaultvalue":"this.vdom","name":"vdom"}],"returns":[{"type":{"names":["Object"]}}],"name":"getVdomChild","longname":"VdomLifecycle#getVdomChild","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#getVdomChild","$kind":"method","id":4616,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Specify a different vdom root if needed to apply the top level style attributes on a different level.\n     * Make sure to use getVnodeRoot() as well, to keep the vdom & vnode trees in sync.\n     * @returns {Object} The new vdom root\n     */","meta":{"range":[10200,10246],"filename":"VdomLifecycle.mjs","lineno":289,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139842","name":"VdomLifecycle#getVdomRoot","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Specify a different vdom root if needed to apply the top level style attributes on a different level.\nMake sure to use getVnodeRoot() as well, to keep the vdom &amp; vnode trees in sync.</p>\n","returns":[{"type":{"names":["Object"]},"description":"The new vdom root"}],"name":"getVdomRoot","longname":"VdomLifecycle#getVdomRoot","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#getVdomRoot","$kind":"method","id":4617,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Specify a different vnode root if needed to apply the top level style attributes on a different level.\n     * Make sure to use getVdomRoot() as well, to keep the vdom & vnode trees in sync.\n     * @returns {Object} The new vnode root\n     */","meta":{"range":[10509,10557],"filename":"VdomLifecycle.mjs","lineno":298,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139850","name":"VdomLifecycle#getVnodeRoot","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Specify a different vnode root if needed to apply the top level style attributes on a different level.\nMake sure to use getVdomRoot() as well, to keep the vdom &amp; vnode trees in sync.</p>\n","returns":[{"type":{"names":["Object"]},"description":"The new vnode root"}],"name":"getVnodeRoot","longname":"VdomLifecycle#getVnodeRoot","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#getVnodeRoot","$kind":"method","id":4618,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Checks if a given updateDepth & distance would result in an update collision\n     * @param {Number} updateDepth\n     * @param {Number} distance\n     * @returns {Boolean}\n     */","meta":{"range":[10756,10871],"filename":"VdomLifecycle.mjs","lineno":308,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139858","name":"VdomLifecycle#hasUpdateCollision","type":"MethodDefinition","paramnames":["updateDepth","distance"]},"vars":{"":null}},"description":"<p>Checks if a given updateDepth &amp; distance would result in an update collision</p>\n","params":[{"type":{"names":["Number"]},"name":"updateDepth"},{"type":{"names":["Number"]},"name":"distance"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasUpdateCollision","longname":"VdomLifecycle#hasUpdateCollision","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#hasUpdateCollision","$kind":"method","id":4619,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Creates the vnode tree for this component and mounts the component in case\n     * - you pass true for the mount param\n     * - or the autoMount config is set to true\n     * @param {Boolean} [mount] Mount the DOM after the vnode got created\n     * @returns {Promise<any>} If getting there, we return the data from vdom.Helper: create(), containing the vnode.\n     */","meta":{"range":[11258,12956],"filename":"VdomLifecycle.mjs","lineno":319,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100139874","name":"VdomLifecycle#initVnode","type":"MethodDefinition","paramnames":["mount"]},"vars":{"":null}},"description":"<p>Creates the vnode tree for this component and mounts the component in case</p>\n<ul>\n<li>you pass true for the mount param</li>\n<li>or the autoMount config is set to true</li>\n</ul>\n","params":[{"type":{"names":["Boolean"]},"optional":true,"description":"<p>Mount the DOM after the vnode got created</p>\n","name":"mount"}],"returns":[{"type":{"names":["Promise.<any>"]},"description":"If getting there, we return the data from vdom.Helper: create(), containing the vnode."}],"name":"initVnode","longname":"VdomLifecycle#initVnode","kind":"function","memberof":"VdomLifecycle","scope":"instance","async":true,"$longname":"VdomLifecycle#initVnode","$kind":"method","id":4620,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Checks for vdom updates inside the parent chain and if found.\n     * Registers the component for a vdom update once done.\n     * @param {String} parentId=this.parentId\n     * @param {Function} [resolve] Gets passed by updateVdom()\n     * @param {Number} distance=1 Distance inside the component tree\n     * @returns {Boolean}\n     */","meta":{"range":[13311,14459],"filename":"VdomLifecycle.mjs","lineno":378,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140080","name":"VdomLifecycle#isParentUpdating","type":"MethodDefinition","paramnames":["parentId","resolve","distance"]},"vars":{"":null}},"description":"<p>Checks for vdom updates inside the parent chain and if found.\nRegisters the component for a vdom update once done.</p>\n","params":[{"type":{"names":["String"]},"defaultvalue":"this.parentId","name":"parentId"},{"type":{"names":["function"]},"optional":true,"description":"<p>Gets passed by updateVdom()</p>\n","name":"resolve"},{"type":{"names":["Number"]},"defaultvalue":1,"description":"<p>Distance inside the component tree</p>\n","name":"distance"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isParentUpdating","longname":"VdomLifecycle#isParentUpdating","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#isParentUpdating","$kind":"method","id":4621,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Checks the needsVdomUpdate config inside the parent tree\n     * @param {String} parentId=this.parentId\n     * @param {Function} [resolve] gets passed by updateVdom()\n     * @param {Number} distance=1 Distance inside the component tree\n     * @returns {Boolean}\n     */","meta":{"range":[14749,15449],"filename":"VdomLifecycle.mjs","lineno":415,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140181","name":"VdomLifecycle#mergeIntoParentUpdate","type":"MethodDefinition","paramnames":["parentId","distance"]},"vars":{"":null}},"description":"<p>Checks the needsVdomUpdate config inside the parent tree</p>\n","params":[{"type":{"names":["String"]},"defaultvalue":"this.parentId","name":"parentId"},{"type":{"names":["function"]},"optional":true,"description":"<p>gets passed by updateVdom()</p>\n","name":"resolve"},{"type":{"names":["Number"]},"defaultvalue":1,"description":"<p>Distance inside the component tree</p>\n","name":"distance"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"mergeIntoParentUpdate","longname":"VdomLifecycle#mergeIntoParentUpdate","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#mergeIntoParentUpdate","$kind":"method","id":4622,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Gets called from the initVnode() promise success handler\n     * @param {Object} vnode\n     * @param {Boolean} autoMount Mount the DOM after the vnode got created\n     * @protected\n     */","meta":{"range":[15658,16854],"filename":"VdomLifecycle.mjs","lineno":440,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140256","name":"VdomLifecycle#onInitVnode","type":"MethodDefinition","paramnames":["vnode","autoMount"]},"vars":{"":null}},"description":"<p>Gets called from the initVnode() promise success handler</p>\n","params":[{"type":{"names":["Object"]},"name":"vnode"},{"type":{"names":["Boolean"]},"description":"<p>Mount the DOM after the vnode got created</p>\n","name":"autoMount"}],"access":"protected","name":"onInitVnode","longname":"VdomLifecycle#onInitVnode","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#onInitVnode","$kind":"method","id":4623,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Promise based vdom update\n     * @returns {Promise<any>}\n     */","meta":{"range":[16940,17069],"filename":"VdomLifecycle.mjs","lineno":487,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140396","name":"VdomLifecycle#promiseUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Promise based vdom update</p>\n","returns":[{"type":{"names":["Promise.<any>"]}}],"name":"promiseUpdate","longname":"VdomLifecycle#promiseUpdate","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#promiseUpdate","$kind":"method","id":4624,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Internal helper fn to resolve the Promise for updateVdom()\n     * @param {Object}   [data] The return value of vdom.Helper.update()\n     * @protected\n     */","meta":{"range":[17248,17762],"filename":"VdomLifecycle.mjs","lineno":498,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140414","name":"VdomLifecycle#resolveVdomUpdate","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Internal helper fn to resolve the Promise for updateVdom()</p>\n","params":[{"type":{"names":["Object"]},"optional":true,"description":"<p>The return value of vdom.Helper.update()</p>\n","name":"data"}],"access":"protected","name":"resolveVdomUpdate","longname":"VdomLifecycle#resolveVdomUpdate","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#resolveVdomUpdate","$kind":"method","id":4625,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Placeholder method for util.VDom.syncVdomIds to allow overriding (disabling) it\n     * @param {Neo.vdom.VNode} [vnode=this.vnode]\n     * @param {Object} [vdom=this.vdom]\n     * @param {Boolean} force=false\n     */","meta":{"range":[17997,18112],"filename":"VdomLifecycle.mjs","lineno":522,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140458","name":"VdomLifecycle#syncVdomIds","type":"MethodDefinition","paramnames":["vnode","vdom","force"]},"vars":{"":null}},"description":"<p>Placeholder method for util.VDom.syncVdomIds to allow overriding (disabling) it</p>\n","params":[{"type":{"names":["Neo.vdom.VNode"]},"optional":true,"defaultvalue":"this.vnode","name":"vnode"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"this.vdom","name":"vdom"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"force"}],"name":"syncVdomIds","longname":"VdomLifecycle#syncVdomIds","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#syncVdomIds","$kind":"method","id":4626,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * In case a component receives a new vnode, we want to do:\n     * - sync the vdom ids\n     * - setting vnodeInitialized to true for child components\n     * - updating the parent component to ensure that the vnode tree stays persistent\n     * @param {Neo.vdom.VNode} [vnode=this.vnode]\n     */","meta":{"range":[18424,20309],"filename":"VdomLifecycle.mjs","lineno":533,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140483","name":"VdomLifecycle#syncVnodeTree","type":"MethodDefinition","paramnames":["vnode"]},"vars":{"":null}},"description":"<p>In case a component receives a new vnode, we want to do:</p>\n<ul>\n<li>sync the vdom ids</li>\n<li>setting vnodeInitialized to true for child components</li>\n<li>updating the parent component to ensure that the vnode tree stays persistent</li>\n</ul>\n","params":[{"type":{"names":["Neo.vdom.VNode"]},"optional":true,"defaultvalue":"this.vnode","name":"vnode"}],"name":"syncVnodeTree","longname":"VdomLifecycle#syncVnodeTree","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#syncVnodeTree","$kind":"method","id":4627,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     *\n     */","meta":{"range":[20338,20397],"filename":"VdomLifecycle.mjs","lineno":591,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140691","name":"VdomLifecycle#update","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"update","longname":"VdomLifecycle#update","kind":"function","memberof":"VdomLifecycle","scope":"instance","params":[],"$longname":"VdomLifecycle#update","$kind":"method","id":4628,"neoClassName":"Neo.mixin.VdomLifecycle"},{"comment":"/**\n     * Gets called after the vdom config gets changed in case the component is already mounted (delta updates).\n     * @param {function} [resolve] used by promiseUpdate()\n     * @param {function} [reject] used by promiseUpdate()\n     * @protected\n     */","meta":{"range":[20666,23300],"filename":"VdomLifecycle.mjs","lineno":601,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/mixin","code":{"id":"astnode100140704","name":"VdomLifecycle#updateVdom","type":"MethodDefinition","paramnames":["resolve","reject"]},"vars":{"":null}},"description":"<p>Gets called after the vdom config gets changed in case the component is already mounted (delta updates).</p>\n","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>used by promiseUpdate()</p>\n","name":"resolve"},{"type":{"names":["function"]},"optional":true,"description":"<p>used by promiseUpdate()</p>\n","name":"reject"}],"access":"protected","name":"updateVdom","longname":"VdomLifecycle#updateVdom","kind":"function","memberof":"VdomLifecycle","scope":"instance","$longname":"VdomLifecycle#updateVdom","$kind":"method","id":4629,"neoClassName":"Neo.mixin.VdomLifecycle"}]}