{"classData":[{"comment":"/**\n * @class Neo.collection.Filter\n * @extends Neo.core.Base\n */","meta":{"filename":"Filter.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"class","name":"Filter","augments":["Neo.core.Base"],"memberof":"Neo.collection","longname":"Neo.collection.Filter","scope":"static","$longname":"Neo.collection.Filter","$kind":"class","id":678,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * True automatically applies the core.Observable mixin\n     * @member {Boolean} observable=true\n     * @static\n     */","meta":{"filename":"Filter.mjs","lineno":14,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>True automatically applies the core.Observable mixin</p>\n","kind":"member","name":"observable","type":{"names":["Boolean"]},"defaultvalue":true,"scope":"static","longname":"observable","$longname":"observable","$kind":"property","id":679,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * Valid values for the operator config:<br>\n     * ['==','===','!=','!==','<','<=','>','>=','endsWith','excluded','included','isDefined','isUndefined','like','startsWith']\n     * @member {String[]} operators\n     * @protected\n     * @static\n     */","meta":{"filename":"Filter.mjs","lineno":22,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Valid values for the operator config:<br>\n[&#39;==&#39;,&#39;===&#39;,&#39;!=&#39;,&#39;!==&#39;,&#39;&lt;&#39;,&#39;&lt;=&#39;,&#39;&gt;&#39;,&#39;&gt;=&#39;,&#39;endsWith&#39;,&#39;excluded&#39;,&#39;included&#39;,&#39;isDefined&#39;,&#39;isUndefined&#39;,&#39;like&#39;,&#39;startsWith&#39;]</p>\n","kind":"member","name":"operators","type":{"names":["Array.<String>"]},"access":"protected","scope":"static","longname":"operators","$longname":"operators","$kind":"property","id":680,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * @member {String} className='Neo.collection.Filter'\n         * @protected\n         */","meta":{"filename":"Filter.mjs","lineno":32,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.collection.Filter'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":681,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * @member {String} ntype='filter'\n         * @protected\n         */","meta":{"filename":"Filter.mjs","lineno":37,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'filter'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":682,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * Setting disabled to true will exclude this filter from the collection filtering logic\n         * @member {Boolean} disabled_=false\n         */","meta":{"filename":"Filter.mjs","lineno":42,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Setting disabled to true will exclude this filter from the collection filtering logic</p>\n","kind":"member","name":"disabled_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"disabled_","scope":"global","$longname":"disabled_","$kind":"property","id":683,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * Provide a custom filtering function which has a higher priority than property, operator & value\n         * @member {Function|null} filterBy_=null\n         */","meta":{"filename":"Filter.mjs","lineno":47,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Provide a custom filtering function which has a higher priority than property, operator &amp; value</p>\n","kind":"member","name":"filterBy_","type":{"names":["function","null"]},"defaultvalue":null,"longname":"filterBy_","scope":"global","$longname":"filterBy_","$kind":"property","id":684,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * True means not filtering out items in case the value is '', null, [] or {}\n         * @member {Boolean} includeEmptyValues=true\n         */","meta":{"filename":"Filter.mjs","lineno":52,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>True means not filtering out items in case the value is &#39;&#39;, null, [] or {}</p>\n","kind":"member","name":"includeEmptyValues","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"includeEmptyValues","scope":"global","$longname":"includeEmptyValues","$kind":"property","id":685,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * Set this flag to true before starting bulk updates (e.g. changing property & value)\n         * to prevent multiple change events\n         * @member {Boolean} isUpdating_=false\n         */","meta":{"filename":"Filter.mjs","lineno":58,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Set this flag to true before starting bulk updates (e.g. changing property &amp; value)\nto prevent multiple change events</p>\n","kind":"member","name":"isUpdating_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"isUpdating_","scope":"global","$longname":"isUpdating_","$kind":"property","id":686,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * The owner util.Collection needs to apply an onChange listener once\n         * @member {Boolean} listenerApplied=false\n         * @protected\n         */","meta":{"filename":"Filter.mjs","lineno":64,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The owner util.Collection needs to apply an onChange listener once</p>\n","kind":"member","name":"listenerApplied","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"listenerApplied","scope":"global","$longname":"listenerApplied","$kind":"property","id":687,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * The operator to filter by (use the combination of property, operator & value)\n         * Valid values:\n         *\n         * == (not recommended)\n         * ===\n         * != (not recommended)\n         * !==\n         * <\n         * >=\n         * >\n         * >=\n         * like (collectionValue.toLowerCase().indexOf(filterValue.toLowerCase()) > -1)\n         * included (expects value to be an array)\n         * excluded (expects value to be an array)\n         * @member {String} operator='==='\n         */","meta":{"filename":"Filter.mjs","lineno":82,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The operator to filter by (use the combination of property, operator &amp; value)\nValid values:</p>\n<h1>== (not recommended)</h1>\n<p>!= (not recommended)\n!==\n&lt;</p>\n<blockquote>\n<p>=</p>\n<p>=\nlike (collectionValue.toLowerCase().indexOf(filterValue.toLowerCase()) &gt; -1)\nincluded (expects value to be an array)\nexcluded (expects value to be an array)</p>\n</blockquote>\n","kind":"member","name":"operator","type":{"names":["String"]},"defaultvalue":"'==='","longname":"operator","scope":"global","$longname":"operator","$kind":"property","id":688,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * The property to filter by (use the combination of property, operator & value)\n         * @member {String} property_='id'\n         */","meta":{"filename":"Filter.mjs","lineno":87,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The property to filter by (use the combination of property, operator &amp; value)</p>\n","kind":"member","name":"property_","type":{"names":["String"]},"defaultvalue":"'id'","longname":"property_","scope":"global","$longname":"property_","$kind":"property","id":689,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * The scope to use for the filterBy method, in case it is provided. Defaults to this instance.\n         * @member {Object|null} scope=null\n         */","meta":{"filename":"Filter.mjs","lineno":92,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The scope to use for the filterBy method, in case it is provided. Defaults to this instance.</p>\n","kind":"member","name":"scope","type":{"names":["Object","null"]},"defaultvalue":null,"longname":"scope","scope":"global","$longname":"scope","$kind":"property","id":690,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n         * The value to filter by (use the combination of property, operator & value)\n         * @member {String} value_=null\n         */","meta":{"filename":"Filter.mjs","lineno":97,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The value to filter by (use the combination of property, operator &amp; value)</p>\n","kind":"member","name":"value_","type":{"names":["String"]},"defaultvalue":null,"longname":"value_","scope":"global","$longname":"value_","$kind":"property","id":691,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * Triggered before the operator config gets changed.\n     * @param {String|null} value\n     * @param {String} oldValue\n     * @returns {String}\n     * @protected\n     */","meta":{"range":[4122,4232],"filename":"Filter.mjs","lineno":140,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024141","name":"Filter#beforeSetOperator","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the operator config gets changed.</p>\n","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"returns":[{"type":{"names":["String"]}}],"access":"protected","name":"beforeSetOperator","longname":"Filter#beforeSetOperator","kind":"function","memberof":"Filter","scope":"instance","$longname":"Filter#beforeSetOperator","$kind":"method","id":692,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * Needed for remote filtering\n     * @returns {Object|null}\n     */","meta":{"range":[4319,4536],"filename":"Filter.mjs","lineno":148,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024155","name":"Filter#export","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Needed for remote filtering</p>\n","returns":[{"type":{"names":["Object","null"]}}],"name":"export","longname":"Filter#export","kind":"function","memberof":"Filter","scope":"instance","params":[],"$longname":"Filter#export","$kind":"method","id":693,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * @param value\n     * @param oldValue\n     */","meta":{"range":[4601,4848],"filename":"Filter.mjs","lineno":163,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024188","name":"Filter#fireChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"params":[{"name":"value"},{"name":"oldValue"}],"name":"fireChangeEvent","longname":"Filter#fireChangeEvent","kind":"function","memberof":"Filter","scope":"instance","$longname":"Filter#fireChangeEvent","$kind":"method","id":694,"neoClassName":"Neo.collection.Filter"},{"comment":"/**\n     * Checks if a collection item matches this filter\n     * @param {Object} item The current collection item\n     * @param {Array} filteredItems If the collection filterMode is not primitive contains the items which passed\n     * the previous filters, otherwise all collection items\n     * @param {Array} allItems all collection items\n     * @returns {Boolean}\n     */","meta":{"range":[5233,6072],"filename":"Filter.mjs","lineno":180,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024232","name":"Filter#isFiltered","type":"MethodDefinition","paramnames":["item","filteredItems","allItems"]},"vars":{"":null}},"description":"<p>Checks if a collection item matches this filter</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The current collection item</p>\n","name":"item"},{"type":{"names":["Array"]},"description":"<p>If the collection filterMode is not primitive contains the items which passed\nthe previous filters, otherwise all collection items</p>\n","name":"filteredItems"},{"type":{"names":["Array"]},"description":"<p>all collection items</p>\n","name":"allItems"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isFiltered","longname":"Filter#isFiltered","kind":"function","memberof":"Filter","scope":"instance","$longname":"Filter#isFiltered","$kind":"method","id":695,"neoClassName":"Neo.collection.Filter"}]}