{"classData":[{"comment":"/**\n * @class Neo.functional.component.Base\n * @extends Neo.core.Base\n * @mixes Neo.component.mixin.DomEvents\n * @mixes Neo.core.Observable\n * @mixes Neo.component.mixin.VdomLifecycle\n */","meta":{"filename":"Base.mjs","lineno":16,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"class","name":"Base","augments":["Neo.core.Base"],"mixes":["Neo.component.mixin.DomEvents","Neo.core.Observable","Neo.component.mixin.VdomLifecycle"],"memberof":"Neo.functional.component","longname":"Neo.functional.component.Base","scope":"static","$longname":"Neo.functional.component.Base","$kind":"class","id":3131,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {String} className='Neo.functional.component.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":29,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.functional.component.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3132,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {String} ntype='functional-component'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'functional-component'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":3133,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * Custom CSS selectors to apply to the root level node of this component\n         * @member {String[]} cls=null\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":40,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Custom CSS selectors to apply to the root level node of this component</p>\n","kind":"member","name":"cls","type":{"names":["Array.<String>"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"cls","scope":"global","$longname":"cls","$kind":"property","id":3134,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {Neo.core.Base[]} mixins=[DomEvents, Observable, VdomLifecycle]\n         */","meta":{"filename":"Base.mjs","lineno":44,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"mixins","type":{"names":["Array.<Neo.core.Base>"]},"defaultvalue":"[DomEvents, Observable, VdomLifecycle]","description":"<p>Observable, VdomLifecycle]</p>\n","longname":"mixins","scope":"global","$longname":"mixins","$kind":"property","id":3135,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * True after the component render() method was called. Also fires the rendered event.\n         * @member {Boolean} mounted_=false\n         * @protected\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":51,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>True after the component render() method was called. Also fires the rendered event.</p>\n","kind":"member","name":"mounted_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"mounted_","scope":"global","$longname":"mounted_","$kind":"property","id":3136,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {String|null} parentId_=null\n         * @protected\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":57,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"parentId_","type":{"names":["String","null"]},"defaultvalue":null,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"parentId_","scope":"global","$longname":"parentId_","$kind":"property","id":3137,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * The vdom markup for this component.\n         * @member {Object} vdom={}\n         */","meta":{"filename":"Base.mjs","lineno":62,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>The vdom markup for this component.</p>\n","kind":"member","name":"vdom","type":{"names":["Object"]},"defaultvalue":"{}","longname":"vdom","scope":"global","$longname":"vdom","$kind":"property","id":3138,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * The custom windowIs (timestamp) this component belongs to\n         * @member {Number|null} windowId_=null\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":68,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>The custom windowIs (timestamp) this component belongs to</p>\n","kind":"member","name":"windowId_","type":{"names":["Number","null"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"windowId_","scope":"global","$longname":"windowId_","$kind":"property","id":3139,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Neo component instances, which got defined inside createVdom()\n     * @member {Map|null} childComponents=null\n     */","meta":{"filename":"Base.mjs","lineno":75,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Neo component instances, which got defined inside createVdom()</p>\n","kind":"member","name":"childComponents","type":{"names":["Map","null"]},"defaultvalue":null,"longname":"childComponents","scope":"global","$longname":"childComponents","$kind":"property","id":3140,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Internal flag which will get set to true while a component is waiting for its mountedPromise\n     * @member {Boolean} isAwaitingMount=false\n     * @protected\n     */","meta":{"filename":"Base.mjs","lineno":81,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Internal flag which will get set to true while a component is waiting for its mountedPromise</p>\n","kind":"member","name":"isAwaitingMount","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isAwaitingMount","scope":"global","$longname":"isAwaitingMount","$kind":"property","id":3141,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Internal Map to store the next set of components after the createVdom() Effect has run.\n     * @member {Map|null} nextChildComponents=null\n     * @private\n     */","meta":{"filename":"Base.mjs","lineno":87,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Internal Map to store the next set of components after the createVdom() Effect has run.</p>\n","kind":"member","name":"nextChildComponents","type":{"names":["Map","null"]},"defaultvalue":null,"access":"private","longname":"nextChildComponents","scope":"global","$longname":"nextChildComponents","$kind":"property","id":3142,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * A Promise that resolves when the component is mounted to the DOM.\n     * This provides a convenient way to wait for the component to be fully\n     * available and interactive before executing subsequent logic.\n     *\n     * It also handles unmounting by resetting the promise, so it can be safely\n     * awaited again if the component is remounted.\n     * @returns {Promise<Neo.component.Base>}\n     */","meta":{"range":[3290,3660],"filename":"Base.mjs","lineno":107,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100089770","name":"FunctionalBase#mountedPromise","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>A Promise that resolves when the component is mounted to the DOM.\nThis provides a convenient way to wait for the component to be fully\navailable and interactive before executing subsequent logic.</p>\n<p>It also handles unmounting by resetting the promise, so it can be safely\nawaited again if the component is remounted.</p>\n","returns":[{"type":{"names":["Promise.<Neo.component.Base>"]}}],"name":"mountedPromise","longname":"FunctionalBase#mountedPromise","kind":"member","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#mountedPromise","$kind":"property","id":3143,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Convenience method to access the parent component\n     * @returns {Neo.component.Base|null}\n     */","meta":{"range":[3781,3935],"filename":"Base.mjs","lineno":122,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100089814","name":"FunctionalBase#parent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Convenience method to access the parent component</p>\n","returns":[{"type":{"names":["Neo.component.Base","null"]}}],"name":"parent","longname":"FunctionalBase#parent","kind":"member","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#parent","$kind":"property","id":3144,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[3987,5076],"filename":"Base.mjs","lineno":127,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100089841","name":"FunctionalBase#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"FunctionalBase#construct","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#construct","$kind":"method","id":3145,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the id config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[5236,5426],"filename":"Base.mjs","lineno":163,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100089954","name":"FunctionalBase#afterSetId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the id config got changed</p>\n","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetId","longname":"FunctionalBase#afterSetId","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetId","$kind":"method","id":3146,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the mounted config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[5583,6091],"filename":"Base.mjs","lineno":176,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100089983","name":"FunctionalBase#afterSetMounted","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the mounted config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetMounted","longname":"FunctionalBase#afterSetMounted","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetMounted","$kind":"method","id":3147,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the windowId config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[6257,6820],"filename":"Base.mjs","lineno":200,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090024","name":"FunctionalBase#afterSetWindowId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the windowId config got changed</p>\n","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetWindowId","longname":"FunctionalBase#afterSetWindowId","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetWindowId","$kind":"method","id":3148,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Applies the pending DOM event listeners and updates the active list.\n     * @private\n     */","meta":{"range":[6934,7686],"filename":"Base.mjs","lineno":222,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090059","name":"FunctionalBase#applyPendingDomListeners","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Applies the pending DOM event listeners and updates the active list.</p>\n","access":"private","name":"applyPendingDomListeners","longname":"FunctionalBase#applyPendingDomListeners","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#applyPendingDomListeners","$kind":"method","id":3149,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Override this method in your functional component to return its VDOM structure.\n     * This method will be automatically re-executed when any of the component's configs change.\n     * @param {Neo.functional.component.Base} config - Mental model: while it contains the instance, it makes it clear to access configs\n     * @param {Object}                        data   - Convenience shortcut for accessing `state.Provider` data\n     * @returns {Object} The VDOM structure for the component.\n     */","meta":{"range":[8204,8312],"filename":"Base.mjs","lineno":252,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090128","name":"FunctionalBase#createVdom","type":"MethodDefinition","paramnames":["config","data"]},"vars":{"":null}},"description":"<p>Override this method in your functional component to return its VDOM structure.\nThis method will be automatically re-executed when any of the component&#39;s configs change.</p>\n","params":[{"type":{"names":["Neo.functional.component.Base"]},"description":"<p>Mental model: while it contains the instance, it makes it clear to access configs</p>\n","name":"config"},{"type":{"names":["Object"]},"description":"<p>Convenience shortcut for accessing <code>state.Provider</code> data</p>\n","name":"data"}],"returns":[{"type":{"names":["Object"]},"description":"The VDOM structure for the component."}],"name":"createVdom","longname":"FunctionalBase#createVdom","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#createVdom","$kind":"method","id":3150,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     *\n     */","meta":{"range":[8341,8869],"filename":"Base.mjs","lineno":260,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090136","name":"FunctionalBase#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"destroy","longname":"FunctionalBase#destroy","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#destroy","$kind":"method","id":3151,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * This method recursively compares the new VDOM config with the last applied config\n     * for a given component instance and its sub-instances.\n     * @param {Neo.core.Base} instance The component instance to update.\n     * @param {Object} newConfig The new configuration object from the VDOM.\n     * @param {Object} lastConfig The last applied configuration object.\n     * @private\n     */","meta":{"range":[9280,10218],"filename":"Base.mjs","lineno":289,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090172","name":"FunctionalBase#diffAndSet","type":"MethodDefinition","paramnames":["instance","newConfig","lastConfig"]},"vars":{"":null}},"description":"<p>This method recursively compares the new VDOM config with the last applied config\nfor a given component instance and its sub-instances.</p>\n","params":[{"type":{"names":["Neo.core.Base"]},"description":"<p>The component instance to update.</p>\n","name":"instance"},{"type":{"names":["Object"]},"description":"<p>The new configuration object from the VDOM.</p>\n","name":"newConfig"},{"type":{"names":["Object"]},"description":"<p>The last applied configuration object.</p>\n","name":"lastConfig"}],"access":"private","name":"diffAndSet","longname":"FunctionalBase#diffAndSet","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#diffAndSet","$kind":"method","id":3152,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * This handler runs when the effect's `isRunning` state changes.\n     * It runs outside the effect's tracking scope, preventing feedback loops.\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     */","meta":{"range":[10452,13367],"filename":"Base.mjs","lineno":319,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090264","name":"FunctionalBase#onEffectRunStateChange","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>This handler runs when the effect&#39;s <code>isRunning</code> state changes.\nIt runs outside the effect&#39;s tracking scope, preventing feedback loops.</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"name":"onEffectRunStateChange","longname":"FunctionalBase#onEffectRunStateChange","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#onEffectRunStateChange","$kind":"method","id":3153,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Recursively processes a VDOM node to instantiate components defined within it.\n     * @param {Object} vdomTree The VDOM node to process.\n     * @param {String} parentId The ID of the parent component (the functional component hosting it).\n     * @param {Number} [parentIndex] The index of the vdomNode within its parent's children.\n     * @returns {Object} The processed VDOM node, potentially replaced with a component reference.\n     * @private\n     */","meta":{"range":[13843,16404],"filename":"Base.mjs","lineno":403,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090499","name":"FunctionalBase#processVdomForComponents","type":"MethodDefinition","paramnames":["vdomTree","parentId","parentIndex"]},"vars":{"":null}},"description":"<p>Recursively processes a VDOM node to instantiate components defined within it.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The VDOM node to process.</p>\n","name":"vdomTree"},{"type":{"names":["String"]},"description":"<p>The ID of the parent component (the functional component hosting it).</p>\n","name":"parentId"},{"type":{"names":["Number"]},"optional":true,"description":"<p>The index of the vdomNode within its parent&#39;s children.</p>\n","name":"parentIndex"}],"returns":[{"type":{"names":["Object"]},"description":"The processed VDOM node, potentially replaced with a component reference."}],"access":"private","name":"processVdomForComponents","longname":"FunctionalBase#processVdomForComponents","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#processVdomForComponents","$kind":"method","id":3154,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Change multiple configs at once, ensuring that all afterSet methods get all new assigned values\n     * @param {Object} values={}\n     * @param {Boolean} silent=false\n     * @returns {Promise<*>}\n     */","meta":{"range":[16628,16918],"filename":"Base.mjs","lineno":482,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090700","name":"FunctionalBase#set","type":"MethodDefinition","paramnames":["values","silent"]},"vars":{"":null}},"description":"<p>Change multiple configs at once, ensuring that all afterSet methods get all new assigned values</p>\n","params":[{"type":{"names":["Object"]},"defaultvalue":"{}","name":"values"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"set","longname":"FunctionalBase#set","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#set","$kind":"method","id":3155,"neoClassName":"Neo.functional.component.Base"}]}