{"classData":[{"comment":"/**\n * The App worker contains most parts of the framework as well as all apps which get created.\n * See the tutorials for further infos.\n * @class Neo.worker.App\n * @extends Neo.worker.Base\n * @singleton\n */","meta":{"filename":"App.mjs","lineno":8,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>The App worker contains most parts of the framework as well as all apps which get created.\nSee the tutorials for further infos.</p>\n","kind":"class","name":"App","augments":["Neo.worker.Base"],"tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.worker","longname":"Neo.worker.App","scope":"static","$longname":"Neo.worker.App","$kind":"class","id":5490,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {String} className='Neo.worker.App'\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":21,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.worker.App'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":5491,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {Number} countLoadingThemeFiles_=0\n         */","meta":{"filename":"App.mjs","lineno":25,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"countLoadingThemeFiles_","type":{"names":["Number"]},"defaultvalue":0,"longname":"countLoadingThemeFiles_","scope":"global","$longname":"countLoadingThemeFiles_","$kind":"property","id":5492,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * Remote method access for other workers\n         * @member {Object} remote\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":31,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>Remote method access for other workers</p>\n","kind":"member","name":"remote","type":{"names":["Object"]},"access":"protected","longname":"remote","scope":"global","$longname":"remote","$kind":"property","id":5493,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {Boolean} singleton=true\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":45,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"singleton","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"singleton","scope":"global","$longname":"singleton","$kind":"property","id":5494,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * We are storing the params of insertThemeFiles() calls here, in case the method does get triggered\n     * before the json theme structure got loaded.\n     * @member {Array[]} themeFilesCache=[]\n     * @protected\n     */","meta":{"filename":"App.mjs","lineno":54,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>We are storing the params of insertThemeFiles() calls here, in case the method does get triggered\nbefore the json theme structure got loaded.</p>\n","kind":"member","name":"themeFilesCache","type":{"names":["Array.<Array>"]},"defaultvalue":"[]","access":"protected","longname":"themeFilesCache","scope":"global","$longname":"themeFilesCache","$kind":"property","id":5495,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @member {String} workerId='app'\n     * @protected\n     */","meta":{"filename":"App.mjs","lineno":59,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"workerId","type":{"names":["String"]},"defaultvalue":"'app'","access":"protected","longname":"workerId","scope":"global","$longname":"workerId","$kind":"property","id":5496,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[1780,2009],"filename":"App.mjs","lineno":64,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173328","name":"App#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"App#construct","kind":"function","memberof":"App","scope":"instance","$longname":"App#construct","$kind":"method","id":5497,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Triggered after the countLoadingThemeFiles config got changed\n     * @param {Number} value\n     * @param {Number} oldValue\n     * @protected\n     */","meta":{"range":[2179,2339],"filename":"App.mjs","lineno":80,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173367","name":"App#afterSetCountLoadingThemeFiles","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the countLoadingThemeFiles config got changed</p>\n","params":[{"type":{"names":["Number"]},"name":"value"},{"type":{"names":["Number"]},"name":"oldValue"}],"access":"protected","name":"afterSetCountLoadingThemeFiles","longname":"App#afterSetCountLoadingThemeFiles","kind":"function","memberof":"App","scope":"instance","$longname":"App#afterSetCountLoadingThemeFiles","$kind":"method","id":5498,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {String} appName\n     * @param {Array|Object} deltas\n     * @returns {Promise<*>}\n     */","meta":{"range":[2457,2577],"filename":"App.mjs","lineno":91,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173388","name":"App#applyDeltas","type":"MethodDefinition","paramnames":["appName","deltas"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"appName"},{"type":{"names":["Array","Object"]},"name":"deltas"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"applyDeltas","longname":"App#applyDeltas","kind":"function","memberof":"App","scope":"instance","$longname":"App#applyDeltas","$kind":"method","id":5499,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Remote method to use inside main threads for creating neo based class instances.\n     * Be aware that you can only pass configs which can get converted into pure JSON.\n     *\n     * Rendering a component into the document.body\n     * @example:\n     *     Neo.worker.App.createNeoInstance({\n     *         ntype     : 'button',\n     *         autoMount : true,\n     *         autoRender: true\n     *         text      : 'Hi Nige!'\n     *     }).then(id => console.log(id))\n     *\n     * Inserting a component into a container\n     * @example:\n     *     Neo.worker.App.createNeoInstance({\n     *         ntype      : 'button',\n     *         parentId   : 'neo-container-3',\n     *         parentIndex: 0\n     *         text       : 'Hi Nige!'\n     *     }).then(id => console.log(id))\n     *\n     * @param {Object} config\n     * @param {String} [config.importPath] you can lazy load missing classes via this config. dev mode only.\n     * @param {String} [config.parentId] passing a parentId will put your instance into a container\n     * @param {Number} [config.parentIndex] if a parentId is passed, but no index, neo will use add()\n     * @returns {String} the instance id\n     */","meta":{"range":[3779,4961],"filename":"App.mjs","lineno":123,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173407","name":"App#createNeoInstance","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Remote method to use inside main threads for creating neo based class instances.\nBe aware that you can only pass configs which can get converted into pure JSON.</p>\n<p>Rendering a component into the document.body</p>\n","tags":[{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.createNeoInstance({\n        ntype     : 'button',\n        autoMount : true,\n        autoRender: true\n        text      : 'Hi Nige!'\n    }).then(id => console.log(id))\n\nInserting a component into a container","value":"Neo.worker.App.createNeoInstance({\n        ntype     : 'button',\n        autoMount : true,\n        autoRender: true\n        text      : 'Hi Nige!'\n    }).then(id => console.log(id))\n\nInserting a component into a container"},{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.createNeoInstance({\n        ntype      : 'button',\n        parentId   : 'neo-container-3',\n        parentIndex: 0\n        text       : 'Hi Nige!'\n    }).then(id => console.log(id))","value":"Neo.worker.App.createNeoInstance({\n        ntype      : 'button',\n        parentId   : 'neo-container-3',\n        parentIndex: 0\n        text       : 'Hi Nige!'\n    }).then(id => console.log(id))"}],"params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["String"]},"optional":true,"description":"<p>you can lazy load missing classes via this config. dev mode only.</p>\n","name":"config.importPath"},{"type":{"names":["String"]},"optional":true,"description":"<p>passing a parentId will put your instance into a container</p>\n","name":"config.parentId"},{"type":{"names":["Number"]},"optional":true,"description":"<p>if a parentId is passed, but no index, neo will use add()</p>\n","name":"config.parentIndex"}],"returns":[{"type":{"names":["String"]},"description":"the instance id"}],"name":"createNeoInstance","longname":"App#createNeoInstance","kind":"function","memberof":"App","scope":"instance","async":true,"$longname":"App#createNeoInstance","$kind":"method","id":5500,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[5011,5158],"filename":"App.mjs","lineno":164,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173549","name":"App#createThemeMap","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"createThemeMap","longname":"App#createThemeMap","kind":"function","memberof":"App","scope":"instance","$longname":"App#createThemeMap","$kind":"method","id":5501,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Remote method to use inside main threads for destroying neo based class instances.\n     *\n     * @example:\n     *     Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))\n     *\n     * @param {String} id\n     * @returns {Boolean} returns true, in case the instance was found\n     */","meta":{"range":[5497,5946],"filename":"App.mjs","lineno":179,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173574","name":"App#destroyNeoInstance","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Remote method to use inside main threads for destroying neo based class instances.</p>\n","tags":[{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))","value":"Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))"}],"params":[{"type":{"names":["String"]},"name":"id"}],"returns":[{"type":{"names":["Boolean"]},"description":"returns true, in case the instance was found"}],"name":"destroyNeoInstance","longname":"App#destroyNeoInstance","kind":"function","memberof":"App","scope":"instance","$longname":"App#destroyNeoInstance","$kind":"method","id":5502,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Fires a custom event based on core.Observable on any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     * @param {String} data.name\n     */","meta":{"range":[6159,6452],"filename":"App.mjs","lineno":206,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173629","name":"App#fireEvent","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Fires a custom event based on core.Observable on any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String"]},"name":"data.name"}],"name":"fireEvent","longname":"App#fireEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#fireEvent","$kind":"method","id":5503,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Only needed for the SharedWorkers context\n     * @param {String} eventName\n     * @param {Object} data\n     */","meta":{"range":[6584,6741],"filename":"App.mjs","lineno":229,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173676","name":"App#fireMainViewsEvent","type":"MethodDefinition","paramnames":["eventName","data"]},"vars":{"":null}},"description":"<p>Only needed for the SharedWorkers context</p>\n","params":[{"type":{"names":["String"]},"name":"eventName"},{"type":{"names":["Object"]},"name":"data"}],"name":"fireMainViewsEvent","longname":"App#fireMainViewsEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#fireMainViewsEvent","$kind":"method","id":5504,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Convenience shortcut to lazy-load main thread addons, in case they are not imported yet\n     * @param {String} name\n     * @param {Number} windowId\n     * @returns {Promise<Neo.main.addon.Base>} The namespace of the addon to use via remote method access\n     */","meta":{"range":[7024,7261],"filename":"App.mjs","lineno":241,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173707","name":"App#getAddon","type":"MethodDefinition","paramnames":["name","windowId"]},"vars":{"":null}},"description":"<p>Convenience shortcut to lazy-load main thread addons, in case they are not imported yet</p>\n","params":[{"type":{"names":["String"]},"name":"name"},{"type":{"names":["Number"]},"name":"windowId"}],"returns":[{"type":{"names":["Promise.<Neo.main.addon.Base>"]},"description":"The namespace of the addon to use via remote method access"}],"name":"getAddon","longname":"App#getAddon","kind":"function","memberof":"App","scope":"instance","async":true,"$longname":"App#getAddon","$kind":"method","id":5505,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Get configs of any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     * @param {String|String[]} data.keys\n     * Returns an array of configs if a keys array was passed.\n     * Returns the value of a given config directly, in case no array was passed\n     * Returns false, in case no instance got found.\n     * @returns {*}\n     */","meta":{"range":[7666,8076],"filename":"App.mjs","lineno":262,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173746","name":"App#getConfigs","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Get configs of any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String","Array.<String>"]},"description":"<p>Returns an array of configs if a keys array was passed.\nReturns the value of a given config directly, in case no array was passed\nReturns false, in case no instance got found.</p>\n","name":"data.keys"}],"returns":[{"type":{"names":["*"]}}],"name":"getConfigs","longname":"App#getConfigs","kind":"function","memberof":"App","scope":"instance","$longname":"App#getConfigs","$kind":"method","id":5506,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {String} path\n     * @returns {Promise}\n     */","meta":{"range":[8152,8493],"filename":"App.mjs","lineno":286,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173804","name":"App#importApp","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"path"}],"returns":[{"type":{"names":["Promise"]}}],"name":"importApp","longname":"App#importApp","kind":"function","memberof":"App","scope":"instance","$longname":"App#importApp","$kind":"method","id":5507,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * In case you don't want to include prototype based CSS files, use the className param instead\n     * @param {Number} windowId\n     * @param {Neo.core.Base} [proto]\n     * @param {String} [className]\n     */","meta":{"range":[8720,10874],"filename":"App.mjs","lineno":305,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100173828","name":"App#insertThemeFiles","type":"MethodDefinition","paramnames":["windowId","proto","className"]},"vars":{"":null}},"description":"<p>In case you don&#39;t want to include prototype based CSS files, use the className param instead</p>\n","params":[{"type":{"names":["Number"]},"name":"windowId"},{"type":{"names":["Neo.core.Base"]},"optional":true,"name":"proto"},{"type":{"names":["String"]},"optional":true,"name":"className"}],"name":"insertThemeFiles","longname":"App#insertThemeFiles","kind":"function","memberof":"App","scope":"instance","$longname":"App#insertThemeFiles","$kind":"method","id":5508,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Every dom event will get forwarded as a worker message from main and ends up here first\n     * @param {Object} data useful event properties, differs for different event types. See Neo.main.DomEvents.\n     */","meta":{"range":[11103,11162],"filename":"App.mjs","lineno":363,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174111","name":"App#onDomEvent","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Every dom event will get forwarded as a worker message from main and ends up here first</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>useful event properties, differs for different event types. See Neo.main.DomEvents.</p>\n","name":"data"}],"name":"onDomEvent","longname":"App#onDomEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#onDomEvent","$kind":"method","id":5509,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Every URL hash-change will create a post message in main and end up here first.\n     * @param {Object} data parsed key-value pairs for each hash value\n     */","meta":{"range":[11342,11404],"filename":"App.mjs","lineno":371,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174122","name":"App#onHashChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Every URL hash-change will create a post message in main and end up here first.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>parsed key-value pairs for each hash value</p>\n","name":"data"}],"name":"onHashChange","longname":"App#onHashChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onHashChange","$kind":"method","id":5510,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * The starting point for apps\n     * @param {Object} data\n     */","meta":{"range":[11489,12150],"filename":"App.mjs","lineno":379,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174135","name":"App#onLoadApplication","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>The starting point for apps</p>\n","params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onLoadApplication","longname":"App#onLoadApplication","kind":"function","memberof":"App","scope":"instance","$longname":"App#onLoadApplication","$kind":"method","id":5511,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Fire event on all apps\n     * @param {Object} data\n     * @param {Number} data.angle\n     * @param {String} data.layout landscape|portrait\n     * @param {String} data.type landscape-primary|landscape-secondary|portrait-primary|portrait-secondary\n     */","meta":{"range":[12425,12571],"filename":"App.mjs","lineno":407,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174221","name":"App#onOrientationChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Fire event on all apps</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Number"]},"name":"data.angle"},{"type":{"names":["String"]},"description":"<p>landscape|portrait</p>\n","name":"data.layout"},{"type":{"names":["String"]},"description":"<p>landscape-primary|landscape-secondary|portrait-primary|portrait-secondary</p>\n","name":"data.type"}],"name":"onOrientationChange","longname":"App#onOrientationChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onOrientationChange","$kind":"method","id":5512,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} msg\n     */","meta":{"range":[12620,13501],"filename":"App.mjs","lineno":416,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174249","name":"App#onRegisterNeoConfig","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"msg"}],"name":"onRegisterNeoConfig","longname":"App#onRegisterNeoConfig","kind":"function","memberof":"App","scope":"instance","$longname":"App#onRegisterNeoConfig","$kind":"method","id":5513,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} msg\n     */","meta":{"range":[13550,13728],"filename":"App.mjs","lineno":450,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174387","name":"App#onRegisterPort","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"msg"}],"name":"onRegisterPort","longname":"App#onRegisterPort","kind":"function","memberof":"App","scope":"instance","$longname":"App#onRegisterPort","$kind":"method","id":5514,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[13778,13881],"filename":"App.mjs","lineno":462,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174423","name":"App#onWindowPositionChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onWindowPositionChange","longname":"App#onWindowPositionChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onWindowPositionChange","$kind":"method","id":5515,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Only needed for SharedWorkers\n     * @param {String} appName\n     */","meta":{"range":[13971,14160],"filename":"App.mjs","lineno":470,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174437","name":"App#registerApp","type":"MethodDefinition","paramnames":["appName"]},"vars":{"":null}},"description":"<p>Only needed for SharedWorkers</p>\n","params":[{"type":{"names":["String"]},"name":"appName"}],"name":"registerApp","longname":"App#registerApp","kind":"function","memberof":"App","scope":"instance","$longname":"App#registerApp","$kind":"method","id":5516,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Unregister the app from the CSS map\n     * Only needed for SharedWorkers\n     * @param {String} appName\n     */","meta":{"range":[14293,14380],"filename":"App.mjs","lineno":481,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174461","name":"App#removeAppFromThemeMap","type":"MethodDefinition","paramnames":["appName"]},"vars":{"":null}},"description":"<p>Unregister the app from the CSS map\nOnly needed for SharedWorkers</p>\n","params":[{"type":{"names":["String"]},"name":"appName"}],"name":"removeAppFromThemeMap","longname":"App#removeAppFromThemeMap","kind":"function","memberof":"App","scope":"instance","$longname":"App#removeAppFromThemeMap","$kind":"method","id":5517,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @private\n     */","meta":{"range":[14418,14605],"filename":"App.mjs","lineno":488,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174476","name":"App#resolveThemeFilesCache","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"access":"private","name":"resolveThemeFilesCache","longname":"App#resolveThemeFilesCache","kind":"function","memberof":"App","scope":"instance","params":[],"$longname":"App#resolveThemeFilesCache","$kind":"method","id":5518,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Set configs of any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     */","meta":{"range":[14751,14958],"filename":"App.mjs","lineno":503,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174507","name":"App#setConfigs","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Set configs of any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"}],"name":"setConfigs","longname":"App#setConfigs","kind":"function","memberof":"App","scope":"instance","$longname":"App#setConfigs","$kind":"method","id":5519,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     * @param {String} data.key\n     * @param {String} [data.priority] optionally pass 'important'\n     * @param {String} data.theme=Neo.config.themes[0]\n     * @param {String} data.value\n     * @param {Number} data.windowId\n     * @returns {Promise<any>}\n     */","meta":{"range":[15264,15586],"filename":"App.mjs","lineno":525,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100174540","name":"App#setCssVariable","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.key"},{"type":{"names":["String"]},"optional":true,"description":"<p>optionally pass &#39;important&#39;</p>\n","name":"data.priority"},{"type":{"names":["String"]},"defaultvalue":"Neo.config.themes[0","name":"data.theme"},{"type":{"names":["String"]},"name":"data.value"},{"type":{"names":["Number"]},"name":"data.windowId"}],"returns":[{"type":{"names":["Promise.<any>"]}}],"name":"setCssVariable","longname":"App#setCssVariable","kind":"function","memberof":"App","scope":"instance","async":true,"$longname":"App#setCssVariable","$kind":"method","id":5520,"neoClassName":"Neo.worker.App"}]}