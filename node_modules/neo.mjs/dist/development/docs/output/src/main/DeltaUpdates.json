{"classData":[{"comment":"/**\n * Logic to apply the deltas generated by vdom.Helper to the real DOM\n * @class Neo.main.DeltaUpdates\n * @extends Neo.core.Base\n * @singleton\n */","meta":{"filename":"DeltaUpdates.mjs","lineno":7,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"description":"<p>Logic to apply the deltas generated by vdom.Helper to the real DOM</p>\n","kind":"class","name":"DeltaUpdates","augments":["Neo.core.Base"],"tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.main","longname":"Neo.main.DeltaUpdates","scope":"static","$longname":"Neo.main.DeltaUpdates","$kind":"class","id":3984,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {String} className='Neo.main.DeltaUpdates'\n         * @protected\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":19,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.main.DeltaUpdates'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3985,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {Number} countDeltas=0\n         * @protected\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":24,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"countDeltas","type":{"names":["Number"]},"defaultvalue":0,"access":"protected","longname":"countDeltas","scope":"global","$longname":"countDeltas","$kind":"property","id":3986,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {Number} countDeltasPer250ms=0\n         * @protected\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":29,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"countDeltasPer250ms","type":{"names":["Number"]},"defaultvalue":0,"access":"protected","longname":"countDeltasPer250ms","scope":"global","$longname":"countDeltasPer250ms","$kind":"property","id":3987,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {Number} countUpdates=0\n         * @protected\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"countUpdates","type":{"names":["Number"]},"defaultvalue":0,"access":"protected","longname":"countUpdates","scope":"global","$longname":"countUpdates","$kind":"property","id":3988,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {Boolean} renderCountDeltas_=false\n         * @protected\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":39,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"renderCountDeltas_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"renderCountDeltas_","scope":"global","$longname":"renderCountDeltas_","$kind":"property","id":3989,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n         * @member {Boolean} singleton=true\n         */","meta":{"filename":"DeltaUpdates.mjs","lineno":43,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"singleton","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"singleton","scope":"global","$longname":"singleton","$kind":"property","id":3990,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @member {Number} logDeltasIntervalId=0\n     * @protected\n     */","meta":{"filename":"DeltaUpdates.mjs","lineno":50,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"kind":"member","name":"logDeltasIntervalId","type":{"names":["Number"]},"defaultvalue":0,"access":"protected","longname":"logDeltasIntervalId","scope":"global","$longname":"logDeltasIntervalId","$kind":"property","id":3991,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * Private property to store the dynamically loaded renderer module.\n     * @member {Neo.main.render.DomApiRenderer|Neo.main.render.DomApiRenderer|null} #renderer=null\n     * @private\n     */","meta":{"filename":"DeltaUpdates.mjs","lineno":56,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"description":"<p>Private property to store the dynamically loaded renderer module.</p>\n","kind":"member","name":"#renderer","type":{"names":["Neo.main.render.DomApiRenderer","Neo.main.render.DomApiRenderer","null"]},"defaultvalue":null,"access":"private","longname":"#renderer","scope":"global","$longname":"#renderer","$kind":"property","id":3992,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * Private property to signal that the renderer module has been loaded.\n     * This will be a Promise that resolves when the module is ready.\n     * @private\n     * @member {Promise<void>|null} #_readyPromise\n     */","meta":{"filename":"DeltaUpdates.mjs","lineno":64,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{}},"description":"<p>Private property to signal that the renderer module has been loaded.\nThis will be a Promise that resolves when the module is ready.</p>\n","access":"private","kind":"member","name":"#_readyPromise","type":{"names":["Promise.<void>","null"]},"longname":"#_readyPromise","scope":"global","$longname":"#_readyPromise","$kind":"property","id":3993,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[1772,2619],"filename":"DeltaUpdates.mjs","lineno":69,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116250","name":"DeltaUpdates#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"DeltaUpdates#construct","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#construct","$kind":"method","id":3994,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * Triggered after the renderCountDeltas config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[2786,3489],"filename":"DeltaUpdates.mjs","lineno":103,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116327","name":"DeltaUpdates#afterSetRenderCountDeltas","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the renderCountDeltas config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetRenderCountDeltas","longname":"DeltaUpdates#afterSetRenderCountDeltas","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#afterSetRenderCountDeltas","$kind":"method","id":3995,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {HTMLElement} node\n     * @param {String}      nodeName\n     */","meta":{"range":[3581,4117],"filename":"DeltaUpdates.mjs","lineno":130,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116404","name":"DeltaUpdates#changeNodeName","type":"MethodDefinition","paramnames":["node","nodeName"]},"vars":{"":null}},"params":[{"type":{"names":["HTMLElement"]},"name":"node"},{"type":{"names":["String"]},"name":"nodeName"}],"name":"changeNodeName","longname":"DeltaUpdates#changeNodeName","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#changeNodeName","$kind":"method","id":3996,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} delta.id\n     */","meta":{"range":[4200,4265],"filename":"DeltaUpdates.mjs","lineno":153,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116479","name":"DeltaUpdates#focusNode","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"name":"delta.id"}],"name":"focusNode","longname":"DeltaUpdates#focusNode","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#focusNode","$kind":"method","id":3997,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * Inserts a new node into the DOM tree based on delta updates.\n     * This method handles both string-based (outerHTML) and direct DOM API (vnode) mounting.\n     * It ensures the node is inserted at the correct index within the parent.\n     *\n     * Implementation Details & Considerations:\n     * - `parentNode.children` contains only element nodes (tags).\n     * - `parentNode.childNodes` contains all nodes, including text and comment nodes.\n     * - Since every `vtype:'text'` is wrapped inside a comment block (as an ID),\n     *   calculating a \"realIndex\" is necessary for string-based insertions to\n     *   correctly account for non-element nodes.\n     * - `insertAdjacentHTML()` is generally faster than creating a node via template,\n     *   but it's only available for manipulating children (elements), not `childNodes` (all nodes).\n     * - For performance, in cases where there are no comment nodes (i.e., no wrapped text nodes),\n     *   the method prioritizes `insertAdjacentHTML()` when `useStringBasedMounting` is true.\n     *\n     * @param {Object}         delta\n     * @param {Boolean}        delta.hasLeadingTextChildren Flag to honor leading comments, which require special treatment.\n     * @param {Number}         delta.index                  The index at which to insert the new node within its parent.\n     * @param {String}         [delta.outerHTML]            The string representation of the new node (for string-based mounting).\n     * @param {String}         delta.parentId               The ID of the parent DOM node.\n     * @param {Neo.vdom.VNode} [delta.vnode]                The VNode representation of the new node (for direct DOM API mounting).\n     */","meta":{"range":[5973,6655],"filename":"DeltaUpdates.mjs","lineno":180,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116488","name":"DeltaUpdates#insertNode","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"<p>Inserts a new node into the DOM tree based on delta updates.\nThis method handles both string-based (outerHTML) and direct DOM API (vnode) mounting.\nIt ensures the node is inserted at the correct index within the parent.</p>\n<p>Implementation Details &amp; Considerations:</p>\n<ul>\n<li><code>parentNode.children</code> contains only element nodes (tags).</li>\n<li><code>parentNode.childNodes</code> contains all nodes, including text and comment nodes.</li>\n<li>Since every <code>vtype:&#39;text&#39;</code> is wrapped inside a comment block (as an ID),\ncalculating a &quot;realIndex&quot; is necessary for string-based insertions to\ncorrectly account for non-element nodes.</li>\n<li><code>insertAdjacentHTML()</code> is generally faster than creating a node via template,\nbut it&#39;s only available for manipulating children (elements), not <code>childNodes</code> (all nodes).</li>\n<li>For performance, in cases where there are no comment nodes (i.e., no wrapped text nodes),\nthe method prioritizes <code>insertAdjacentHTML()</code> when <code>useStringBasedMounting</code> is true.</li>\n</ul>\n","params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["Boolean"]},"description":"<p>Flag to honor leading comments, which require special treatment.</p>\n","name":"delta.hasLeadingTextChildren"},{"type":{"names":["Number"]},"description":"<p>The index at which to insert the new node within its parent.</p>\n","name":"delta.index"},{"type":{"names":["String"]},"optional":true,"description":"<p>The string representation of the new node (for string-based mounting).</p>\n","name":"delta.outerHTML"},{"type":{"names":["String"]},"description":"<p>The ID of the parent DOM node.</p>\n","name":"delta.parentId"},{"type":{"names":["Neo.vdom.VNode"]},"optional":true,"description":"<p>The VNode representation of the new node (for direct DOM API mounting).</p>\n","name":"delta.vnode"}],"name":"insertNode","longname":"DeltaUpdates#insertNode","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#insertNode","$kind":"method","id":3998,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * Moves an existing DOM node to a new position within its parent\n     * or to a new parent.\n     * This method directly manipulates the DOM using the pre-calculated physical index.\n     *\n     * @param {Object} delta\n     * @param {String} delta.id       The ID of the DOM node to move.\n     * @param {Number} delta.index    The physical index at which to insert the node\n     * @param {String} delta.parentId The ID of the target parent DOM node.\n     */","meta":{"range":[7130,8179],"filename":"DeltaUpdates.mjs","lineno":208,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116569","name":"DeltaUpdates#moveNode","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"<p>Moves an existing DOM node to a new position within its parent\nor to a new parent.\nThis method directly manipulates the DOM using the pre-calculated physical index.</p>\n","params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"description":"<p>The ID of the DOM node to move.</p>\n","name":"delta.id"},{"type":{"names":["Number"]},"description":"<p>The physical index at which to insert the node</p>\n","name":"delta.index"},{"type":{"names":["String"]},"description":"<p>The ID of the target parent DOM node.</p>\n","name":"delta.parentId"}],"name":"moveNode","longname":"DeltaUpdates#moveNode","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#moveNode","$kind":"method","id":3999,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} delta.parentId\n     */","meta":{"range":[8268,8411],"filename":"DeltaUpdates.mjs","lineno":237,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116655","name":"DeltaUpdates#removeAll","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"name":"delta.parentId"}],"name":"removeAll","longname":"DeltaUpdates#removeAll","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#removeAll","$kind":"method","id":4000,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} delta.id\n     * @param {String} delta.parentId\n     */","meta":{"range":[8532,9768],"filename":"DeltaUpdates.mjs","lineno":250,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116679","name":"DeltaUpdates#removeNode","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"name":"delta.id"},{"type":{"names":["String"]},"name":"delta.parentId"}],"name":"removeNode","longname":"DeltaUpdates#removeNode","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#removeNode","$kind":"method","id":4001,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} delta.fromId\n     * @param {String} delta.parentId\n     * @param {String} delta.toId\n     */","meta":{"range":[9927,10110],"filename":"DeltaUpdates.mjs","lineno":289,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116782","name":"DeltaUpdates#replaceChild","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"name":"delta.fromId"},{"type":{"names":["String"]},"name":"delta.parentId"},{"type":{"names":["String"]},"name":"delta.toId"}],"name":"replaceChild","longname":"DeltaUpdates#replaceChild","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#replaceChild","$kind":"method","id":4002,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} [delta.id]\n     * @param {String} [delta.value\n     */","meta":{"range":[10231,10379],"filename":"DeltaUpdates.mjs","lineno":300,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116803","name":"DeltaUpdates#setTextContent","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"optional":true,"name":"delta.id"},{"type":{"names":["String"]},"name":"delta.value"}],"name":"setTextContent","longname":"DeltaUpdates#setTextContent","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#setTextContent","$kind":"method","id":4003,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {Object} [delta.attributes]\n     * @param {String} [delta.cls]\n     * @param {String} [delta.id]\n     * @param {String} [delta.innerHTML]\n     * @param {String} [delta.outerHTML]\n     * @param {Object} [delta.style]\n     */","meta":{"range":[10660,13615],"filename":"DeltaUpdates.mjs","lineno":317,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100116829","name":"DeltaUpdates#updateNode","type":"MethodDefinition","paramnames":["delta"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["Object"]},"optional":true,"name":"delta.attributes"},{"type":{"names":["String"]},"optional":true,"name":"delta.cls"},{"type":{"names":["String"]},"optional":true,"name":"delta.id"},{"type":{"names":["String"]},"optional":true,"name":"delta.innerHTML"},{"type":{"names":["String"]},"optional":true,"name":"delta.outerHTML"},{"type":{"names":["Object"]},"optional":true,"name":"delta.style"}],"name":"updateNode","longname":"DeltaUpdates#updateNode","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#updateNode","$kind":"method","id":4004,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} delta\n     * @param {String} delta.id\n     * @param {String} delta.parentId\n     * @param {String} delta.value\n     */","meta":{"range":[13771,14088],"filename":"DeltaUpdates.mjs","lineno":390,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100117118","name":"DeltaUpdates#updateVtext","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"delta"},{"type":{"names":["String"]},"name":"delta.id"},{"type":{"names":["String"]},"name":"delta.parentId"},{"type":{"names":["String"]},"name":"delta.value"}],"name":"updateVtext","longname":"DeltaUpdates#updateVtext","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#updateVtext","$kind":"method","id":4005,"neoClassName":"Neo.main.DeltaUpdates"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object|Object[]} data.deltas\n     * @param {String} data.id\n     * @param {String} [data.origin='app']\n     */","meta":{"range":[14256,15298],"filename":"DeltaUpdates.mjs","lineno":405,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main","code":{"id":"astnode100117166","name":"DeltaUpdates#update","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Object","Array.<Object>"]},"name":"data.deltas"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'app'","name":"data.origin"}],"name":"update","longname":"DeltaUpdates#update","kind":"function","memberof":"DeltaUpdates","scope":"instance","$longname":"DeltaUpdates#update","$kind":"method","id":4006,"neoClassName":"Neo.main.DeltaUpdates"}]}