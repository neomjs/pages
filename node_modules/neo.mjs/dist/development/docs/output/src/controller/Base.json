{"classData":[{"comment":"/**\n * @class Neo.controller.Base\n * @extends Neo.core.Base\n */","meta":{"filename":"Base.mjs","lineno":11,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"kind":"class","name":"Base","augments":["Neo.core.Base"],"memberof":"Neo.controller","longname":"Neo.controller.Base","scope":"static","$longname":"Neo.controller.Base","$kind":"class","id":1745,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * @member {String} className='Neo.controller.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":21,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.controller.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1746,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * @member {String} ntype='controller'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'controller'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1747,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * If the URL does not contain a hash value when this controller instance is created,\n         * Neo.mjs will automatically set this hash value, ensuring a default route is active.\n         * @member {String|null} defaultHash=null\n         */","meta":{"filename":"Base.mjs","lineno":32,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"description":"<p>If the URL does not contain a hash value when this controller instance is created,\nNeo.mjs will automatically set this hash value, ensuring a default route is active.</p>\n","kind":"member","name":"defaultHash","type":{"names":["String","null"]},"defaultvalue":null,"longname":"defaultHash","scope":"global","$longname":"defaultHash","$kind":"property","id":1748,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * Specifies the handler method to be invoked when no other defined route matches the URL hash.\n         * This acts as a fallback for unhandled routes.\n         * @member {String|null} defaultRoute=null\n         */","meta":{"filename":"Base.mjs","lineno":38,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"description":"<p>Specifies the handler method to be invoked when no other defined route matches the URL hash.\nThis acts as a fallback for unhandled routes.</p>\n","kind":"member","name":"defaultRoute","type":{"names":["String","null"]},"defaultvalue":null,"longname":"defaultRoute","scope":"global","$longname":"defaultRoute","$kind":"property","id":1749,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * Internal map of compiled regular expressions for each route, used for efficient hash matching.\n         * @protected\n         * @member {Object} handleRoutes={}\n         */","meta":{"filename":"Base.mjs","lineno":44,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"description":"<p>Internal map of compiled regular expressions for each route, used for efficient hash matching.</p>\n","access":"protected","kind":"member","name":"handleRoutes","type":{"names":["Object"]},"defaultvalue":"{}","longname":"handleRoutes","scope":"global","$longname":"handleRoutes","$kind":"property","id":1750,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n         * Defines the routing rules for the controller. Keys are route patterns, and values are either\n         * handler method names (String) or objects containing `handler` and optional `preHandler` method names.\n         * Route patterns can include parameters like `{paramName}` and wildcards like `{*paramName}` for nested paths.\n         * @example\n         * routes: {\n         *     '/home'                         : 'handleHomeRoute',\n         *     '/users/{userId}'               : {handler: 'handleUserRoute', preHandler: 'preHandleUserRoute'},\n         *     '/users/{userId}/posts/{postId}': 'handlePostRoute',\n         *     '/learn/{*itemId}'              : 'onLearnRoute', // Captures nested paths like /learn/gettingstarted/Workspaces\n         *     'default'                       : 'handleOtherRoutes'\n         * }\n         * @member {Object} routes_={}\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":60,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{}},"description":"<p>Defines the routing rules for the controller. Keys are route patterns, and values are either\nhandler method names (String) or objects containing <code>handler</code> and optional <code>preHandler</code> method names.\nRoute patterns can include parameters like <code>{paramName}</code> and wildcards like <code>{*paramName}</code> for nested paths.</p>\n","examples":["routes: {\n    '/home'                         : 'handleHomeRoute',\n    '/users/{userId}'               : {handler: 'handleUserRoute', preHandler: 'preHandleUserRoute'},\n    '/users/{userId}/posts/{postId}': 'handlePostRoute',\n    '/learn/{*itemId}'              : 'onLearnRoute', // Captures nested paths like /learn/gettingstarted/Workspaces\n    'default'                       : 'handleOtherRoutes'\n}"],"kind":"member","name":"routes_","type":{"names":["Object"]},"defaultvalue":"{}","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"routes_","scope":"global","$longname":"routes_","$kind":"property","id":1751,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * Creates a new Controller instance and registers its `onHashChange` method\n     * to listen for changes in the browser's URL hash.\n     * @param {Object} config\n     */","meta":{"range":[2741,2857],"filename":"Base.mjs","lineno":68,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100053840","name":"Controller#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Creates a new Controller instance and registers its <code>onHashChange</code> method\nto listen for changes in the browser&#39;s URL hash.</p>\n","params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Controller#construct","kind":"function","memberof":"Controller","scope":"instance","$longname":"Controller#construct","$kind":"method","id":1752,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * Processes the defined routes configuration, compiling route patterns into regular expressions\n     * for efficient matching and sorting them by specificity (more slashes first).\n     * @param {Object} value\n     * @param {Object} oldValue\n     * @protected\n     */","meta":{"range":[3143,3951],"filename":"Base.mjs","lineno":80,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100053861","name":"Controller#afterSetRoutes","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Processes the defined routes configuration, compiling route patterns into regular expressions\nfor efficient matching and sorting them by specificity (more slashes first).</p>\n","params":[{"type":{"names":["Object"]},"name":"value"},{"type":{"names":["Object"]},"name":"oldValue"}],"access":"protected","name":"afterSetRoutes","longname":"Controller#afterSetRoutes","kind":"function","memberof":"Controller","scope":"instance","$longname":"Controller#afterSetRoutes","$kind":"method","id":1753,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * @param args\n     */","meta":{"range":[3992,4106],"filename":"Base.mjs","lineno":109,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100053973","name":"Controller#destroy","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"name":"args","variable":true}],"name":"destroy","longname":"Controller#destroy","kind":"function","memberof":"Controller","scope":"instance","$longname":"Controller#destroy","$kind":"method","id":1754,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * @returns {Promise<void>}\n     */","meta":{"range":[4160,4941],"filename":"Base.mjs","lineno":117,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100053996","name":"Controller#initAsync","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"initAsync","longname":"Controller#initAsync","kind":"function","memberof":"Controller","scope":"instance","params":[],"async":true,"$longname":"Controller#initAsync","$kind":"method","id":1755,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * Handles changes in the browser's URL hash. It identifies the most specific matching route\n     * and dispatches the corresponding handler, optionally executing a preHandler first.\n     * @param {Object} value - The new hash history entry.\n     * @param {Object} oldValue - The previous hash history entry.\n     */","meta":{"range":[5276,8178],"filename":"Base.mjs","lineno":144,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100054064","name":"Controller#onHashChange","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Handles changes in the browser&#39;s URL hash. It identifies the most specific matching route\nand dispatches the corresponding handler, optionally executing a preHandler first.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The new hash history entry.</p>\n","name":"value"},{"type":{"names":["Object"]},"description":"<p>The previous hash history entry.</p>\n","name":"oldValue"}],"name":"onHashChange","longname":"Controller#onHashChange","kind":"function","memberof":"Controller","scope":"instance","async":true,"$longname":"Controller#onHashChange","$kind":"method","id":1756,"neoClassName":"Neo.controller.Base"},{"comment":"/**\n     * Placeholder method invoked when no matching route is found for the current URL hash.\n     * Controllers can override this to implement custom behavior for unhandled routes.\n     * @param {Object} value - The current hash history entry.\n     * @param {Object} oldValue - The previous hash history entry.\n     */","meta":{"range":[8510,8550],"filename":"Base.mjs","lineno":226,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/controller","code":{"id":"astnode100054347","name":"Controller#onNoRouteFound","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Placeholder method invoked when no matching route is found for the current URL hash.\nControllers can override this to implement custom behavior for unhandled routes.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The current hash history entry.</p>\n","name":"value"},{"type":{"names":["Object"]},"description":"<p>The previous hash history entry.</p>\n","name":"oldValue"}],"name":"onNoRouteFound","longname":"Controller#onNoRouteFound","kind":"function","memberof":"Controller","scope":"instance","$longname":"Controller#onNoRouteFound","$kind":"method","id":1757,"neoClassName":"Neo.controller.Base"}]}