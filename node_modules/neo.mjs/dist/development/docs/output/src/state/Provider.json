{"classData":[{"comment":"/**\n * An optional component state provider for adding bindings to configs\n * @class Neo.state.Provider\n * @extends Neo.core.Base\n * @mixes Neo.core.Observable\n */","meta":{"filename":"Provider.mjs","lineno":12,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>An optional component state provider for adding bindings to configs</p>\n","kind":"class","name":"Provider","augments":["Neo.core.Base"],"mixes":["Neo.core.Observable"],"memberof":"Neo.state","longname":"Neo.state.Provider","scope":"static","$longname":"Neo.state.Provider","$kind":"class","id":4948,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * True automatically applies the core.Observable mixin\n     * @member {Boolean} observable=true\n     * @static\n     */","meta":{"filename":"Provider.mjs","lineno":24,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>True automatically applies the core.Observable mixin</p>\n","kind":"member","name":"observable","type":{"names":["Boolean"]},"defaultvalue":true,"scope":"static","longname":"observable","$longname":"observable","$kind":"property","id":4949,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {String} className='Neo.state.Provider'\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":31,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.state.Provider'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":4950,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {String} ntype='state-provider'\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":36,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'state-provider'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":4951,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {Neo.component.Base|null} component=null\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":41,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"component","type":{"names":["Neo.component.Base","null"]},"defaultvalue":null,"access":"protected","longname":"component","scope":"global","$longname":"component","$kind":"property","id":4952,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         /**\n         * The core data object managed by this StateProvider.\n         * This object holds the reactive state that can be accessed and modified\n         * by components and formulas within the provider's hierarchy.\n         * Changes to properties within this data object will trigger reactivity.\n         * When new data is assigned, it will be deeply merged with existing data.\n         * @member {Object|null} data_=null\n         * @example\n         *     data: {\n         *         user: {\n         *             firstName: 'John',\n         *             lastName : 'Doe'\n         *         },\n         *         settings: {\n         *             theme: 'dark'\n         *         }\n         *     }\n         * @reactive\n         */","meta":{"filename":"Provider.mjs","lineno":62,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>/**\nThe core data object managed by this StateProvider.\nThis object holds the reactive state that can be accessed and modified\nby components and formulas within the provider&#39;s hierarchy.\nChanges to properties within this data object will trigger reactivity.\nWhen new data is assigned, it will be deeply merged with existing data.</p>\n","kind":"member","name":"data_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["data: {\n        user: {\n            firstName: 'John',\n            lastName : 'Doe'\n        },\n        settings: {\n            theme: 'dark'\n        }\n    }"],"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"data_","scope":"global","$longname":"data_","$kind":"property","id":4953,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * Defines computed properties based on other data properties within the StateProvider hierarchy.\n         * Each formula is a function that receives a `data` argument, which is a hierarchical proxy\n         * allowing access to data from the current provider and all its parent providers.\n         * Changes to dependencies (accessed via `data.propertyName`) will automatically re-run the formula.\n         * @member {Object|null} formulas_=null\n         * @example\n         *     data: {\n         *         a    : 1,\n         *         b    : 2,\n         *         total: 50\n         *     }\n         *     formulas: {\n         *         aPlusB : (data) => data.a + data.b,\n         *         aTimesB: (data) => data.a * data.b,\n         *         // Accessing parent data (assuming a parent provider has a 'taxRate' property)\n         *         totalWithTax: (data) => data.total * (1 + data.taxRate)\n         *     }\n         * @reactive\n         */","meta":{"filename":"Provider.mjs","lineno":87,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>Defines computed properties based on other data properties within the StateProvider hierarchy.\nEach formula is a function that receives a <code>data</code> argument, which is a hierarchical proxy\nallowing access to data from the current provider and all its parent providers.\nChanges to dependencies (accessed via <code>data.propertyName</code>) will automatically re-run the formula.</p>\n","kind":"member","name":"formulas_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["data: {\n        a    : 1,\n        b    : 2,\n        total: 50\n    }\n    formulas: {\n        aPlusB : (data) => data.a + data.b,\n        aTimesB: (data) => data.a * data.b,\n        // Accessing parent data (assuming a parent provider has a 'taxRate' property)\n        totalWithTax: (data) => data.total * (1 + data.taxRate)\n    }"],"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"formulas_","scope":"global","$longname":"formulas_","$kind":"property","id":4954,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {Neo.state.Provider|null} parent_=null\n         * @reactive\n         */","meta":{"filename":"Provider.mjs","lineno":92,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"parent_","type":{"names":["Neo.state.Provider","null"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"parent_","scope":"global","$longname":"parent_","$kind":"property","id":4955,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         /**\n         * A collection of Neo.data.Store instances managed by this StateProvider.\n         * Stores are defined as config objects with a `module` property pointing\n         * to the store class, which will then be instantiated by the framework.\n         * @member {Object|null} stores_=null\n         * @example\n         *     stores: {\n         *         myUsers: {\n         *             module: Neo.data.Store,\n         *             model : 'MyApp.model.User',\n         *             data  : [{id: 1, name: 'John'}, {id: 2, name: 'Doe'}]\n         *         },\n         *         myCustomStore1: MyCustomStoreClass,\n         *         myCustomStore2: {\n         *             module  : MyCustomStoreClass,\n         *             autoLoad: true\n         *         }\n         *     }\n         * @reactive\n         */","meta":{"filename":"Provider.mjs","lineno":114,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>/**\nA collection of Neo.data.Store instances managed by this StateProvider.\nStores are defined as config objects with a <code>module</code> property pointing\nto the store class, which will then be instantiated by the framework.</p>\n","kind":"member","name":"stores_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["stores: {\n        myUsers: {\n            module: Neo.data.Store,\n            model : 'MyApp.model.User',\n            data  : [{id: 1, name: 'John'}, {id: 2, name: 'Doe'}]\n        },\n        myCustomStore1: MyCustomStoreClass,\n        myCustomStore2: {\n            module  : MyCustomStoreClass,\n            autoLoad: true\n        }\n    }"],"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"stores_","scope":"global","$longname":"stores_","$kind":"property","id":4956,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Map} #bindingEffects=new Map()\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":121,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#bindingEffects","type":{"names":["Map"]},"defaultvalue":"new","description":"<p>Map()</p>\n","access":"private","longname":"#bindingEffects","scope":"global","$longname":"#bindingEffects","$kind":"property","id":4957,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Object} #dataConfigs={}\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":126,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#dataConfigs","type":{"names":["Object"]},"defaultvalue":"{}","access":"private","longname":"#dataConfigs","scope":"global","$longname":"#dataConfigs","$kind":"property","id":4958,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Map} #formulaEffects=new Map()\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":131,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#formulaEffects","type":{"names":["Map"]},"defaultvalue":"new","description":"<p>Map()</p>\n","access":"private","longname":"#formulaEffects","scope":"global","$longname":"#formulaEffects","$kind":"property","id":4959,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[4648,4747],"filename":"Provider.mjs","lineno":136,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152435","name":"Provider#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Provider#construct","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#construct","$kind":"method","id":4960,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered after the data config got changed.\n     * This method initializes the internal #dataConfigs map, converting each\n     * plain data property into a reactive Neo.core.Config instance.\n     * @param {Object|null} value\n     * @param {Object|null} oldValue\n     * @protected\n     */","meta":{"range":[5057,5141],"filename":"Provider.mjs","lineno":149,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152452","name":"Provider#afterSetData","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the data config got changed.\nThis method initializes the internal #dataConfigs map, converting each\nplain data property into a reactive Neo.core.Config instance.</p>\n","params":[{"type":{"names":["Object","null"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetData","longname":"Provider#afterSetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#afterSetData","$kind":"method","id":4961,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered after the formulas config got changed.\n     * This method sets up reactive effects for each defined formula.\n     * Each formula function receives the hierarchical data proxy, allowing implicit dependency tracking.\n     * @param {Object|null} value The new formulas configuration.\n     * @param {Object|null} oldValue The old formulas configuration.\n     * @protected\n     */","meta":{"range":[5548,6452],"filename":"Provider.mjs","lineno":161,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152466","name":"Provider#afterSetFormulas","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the formulas config got changed.\nThis method sets up reactive effects for each defined formula.\nEach formula function receives the hierarchical data proxy, allowing implicit dependency tracking.</p>\n","params":[{"type":{"names":["Object","null"]},"description":"<p>The new formulas configuration.</p>\n","name":"value"},{"type":{"names":["Object","null"]},"description":"<p>The old formulas configuration.</p>\n","name":"oldValue"}],"access":"protected","name":"afterSetFormulas","longname":"Provider#afterSetFormulas","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#afterSetFormulas","$kind":"method","id":4962,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered when accessing the data config\n     * @param {Object} value\n     * @protected\n     */","meta":{"range":[6569,6636],"filename":"Provider.mjs","lineno":192,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152553","name":"Provider#beforeGetData","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Triggered when accessing the data config</p>\n","params":[{"type":{"names":["Object"]},"name":"value"}],"access":"protected","name":"beforeGetData","longname":"Provider#beforeGetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#beforeGetData","$kind":"method","id":4963,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered before the stores config gets changed.\n     * @param {Object|null} value\n     * @param {Object|null} oldValue\n     * @returns {Object|null}\n     * @protected\n     */","meta":{"range":[6833,7404],"filename":"Provider.mjs","lineno":203,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152563","name":"Provider#beforeSetStores","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the stores config gets changed.</p>\n","params":[{"type":{"names":["Object","null"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"returns":[{"type":{"names":["Object","null"]}}],"access":"protected","name":"beforeSetStores","longname":"Provider#beforeSetStores","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#beforeSetStores","$kind":"method","id":4964,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Creates a new binding for a component's config to a data property.\n     * This now uses the Effect-based reactivity system.\n     * @param {String} componentId\n     * @param {String} configKey The component config to bind (e.g., 'text').\n     * @param {String|Function} formatter The function that computes the value.\n     */","meta":{"range":[7750,8864],"filename":"Provider.mjs","lineno":227,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152627","name":"Provider#createBinding","type":"MethodDefinition","paramnames":["componentId","configKey","formatter"]},"vars":{"":null}},"description":"<p>Creates a new binding for a component&#39;s config to a data property.\nThis now uses the Effect-based reactivity system.</p>\n","params":[{"type":{"names":["String"]},"name":"componentId"},{"type":{"names":["String"]},"description":"<p>The component config to bind (e.g., &#39;text&#39;).</p>\n","name":"configKey"},{"type":{"names":["String","function"]},"description":"<p>The function that computes the value.</p>\n","name":"formatter"}],"name":"createBinding","longname":"Provider#createBinding","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#createBinding","$kind":"method","id":4965,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Processes a component's `bind` configuration to create reactive bindings.\n     * It differentiates between store bindings and data bindings, and sets up two-way binding if specified.\n     * @param {Neo.component.Base} component The component instance whose bindings are to be created.\n     */","meta":{"range":[9178,10393],"filename":"Provider.mjs","lineno":263,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152740","name":"Provider#createBindings","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Processes a component&#39;s <code>bind</code> configuration to create reactive bindings.\nIt differentiates between store bindings and data bindings, and sets up two-way binding if specified.</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"description":"<p>The component instance whose bindings are to be created.</p>\n","name":"component"}],"name":"createBindings","longname":"Provider#createBindings","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#createBindings","$kind":"method","id":4966,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Destroys the state provider and cleans up all associated effects.\n     */","meta":{"range":[10488,10757],"filename":"Provider.mjs","lineno":297,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152836","name":"Provider#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Destroys the state provider and cleans up all associated effects.</p>\n","name":"destroy","longname":"Provider#destroy","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#destroy","$kind":"method","id":4967,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Convenience shortcut\n     * @param {String} [ntype]\n     * @returns {Neo.controller.Component|null}\n     */","meta":{"range":[10886,10965],"filename":"Provider.mjs","lineno":314,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152893","name":"Provider#getController","type":"MethodDefinition","paramnames":["ntype"]},"vars":{"":null}},"description":"<p>Convenience shortcut</p>\n","params":[{"type":{"names":["String"]},"optional":true,"name":"ntype"}],"returns":[{"type":{"names":["Neo.controller.Component","null"]}}],"name":"getController","longname":"Provider#getController","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getController","$kind":"method","id":4968,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Access the closest data property inside the parent chain.\n     * @param {String} key\n     * @returns {*} value\n     */","meta":{"range":[11105,11312],"filename":"Provider.mjs","lineno":323,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152906","name":"Provider#getData","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Access the closest data property inside the parent chain.</p>\n","params":[{"type":{"names":["String"]},"name":"key"}],"returns":[{"type":{"names":["*"]},"description":"value"}],"name":"getData","longname":"Provider#getData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getData","$kind":"method","id":4969,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Retrieves the underlying core.Config instance for a given data property path.\n     * @param {String} path The full path of the data property (e.g., 'user.firstname').\n     * @returns {Neo.core.Config|null}\n     */","meta":{"range":[11547,11621],"filename":"Provider.mjs","lineno":336,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152935","name":"Provider#getDataConfig","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Retrieves the underlying core.Config instance for a given data property path.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The full path of the data property (e.g., &#39;user.firstname&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Neo.core.Config","null"]}}],"name":"getDataConfig","longname":"Provider#getDataConfig","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getDataConfig","$kind":"method","id":4970,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Returns the merged, hierarchical data object as a reactive Proxy.\n     * @returns {Proxy}\n     */","meta":{"range":[11740,11815],"filename":"Provider.mjs","lineno":344,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152949","name":"Provider#getHierarchyData","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the merged, hierarchical data object as a reactive Proxy.</p>\n","returns":[{"type":{"names":["Proxy"]}}],"name":"getHierarchyData","longname":"Provider#getHierarchyData","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#getHierarchyData","$kind":"method","id":4971,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Finds the state.Provider instance that owns a specific data property.\n     * @param {String} path The full path of the data property.\n     * @returns {{owner: Neo.state.Provider, propertyName: String}|null}\n     */","meta":{"range":[12051,12395],"filename":"Provider.mjs","lineno":353,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152957","name":"Provider#getOwnerOfDataProperty","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Finds the state.Provider instance that owns a specific data property.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The full path of the data property.</p>\n","name":"path"}],"returns":[{"type":{"names":["Object","null"]}}],"name":"getOwnerOfDataProperty","longname":"Provider#getOwnerOfDataProperty","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getOwnerOfDataProperty","$kind":"method","id":4972,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Get the closest stateProvider inside the components parent tree\n     * @returns {Neo.state.Provider|null}\n     */","meta":{"range":[12530,13118],"filename":"Provider.mjs","lineno":373,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100152998","name":"Provider#getParent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Get the closest stateProvider inside the components parent tree</p>\n","returns":[{"type":{"names":["Neo.state.Provider","null"]}}],"name":"getParent","longname":"Provider#getParent","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#getParent","$kind":"method","id":4973,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Access the closest store inside the VM parent chain.\n     * @param {String} key\n     * @param {Neo.state.Provider} originStateProvider=this for internal usage only\n     * @returns {Neo.data.Store}\n     */","meta":{"range":[13344,13843],"filename":"Provider.mjs","lineno":398,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153026","name":"Provider#getStore","type":"MethodDefinition","paramnames":["key","originStateProvider"]},"vars":{"":null}},"description":"<p>Access the closest store inside the VM parent chain.</p>\n","params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["Neo.state.Provider"]},"defaultvalue":"this","description":"<p>for internal usage only</p>\n","name":"originStateProvider"}],"returns":[{"type":{"names":["Neo.data.Store"]}}],"name":"getStore","longname":"Provider#getStore","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getStore","$kind":"method","id":4974,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Checks if any data property in the hierarchy starts with the given path.\n     * This is used by the HierarchicalDataProxy to determine if it should return a nested proxy.\n     * @param {String} path The path to check (e.g., 'user').\n     * @returns {Boolean}\n     */","meta":{"range":[14131,14407],"filename":"Provider.mjs","lineno":422,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153080","name":"Provider#hasNestedDataStartingWith","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Checks if any data property in the hierarchy starts with the given path.\nThis is used by the HierarchicalDataProxy to determine if it should return a nested proxy.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The path to check (e.g., &#39;user&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasNestedDataStartingWith","longname":"Provider#hasNestedDataStartingWith","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#hasNestedDataStartingWith","$kind":"method","id":4975,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Returns the top-level data keys for a given path within this provider's data.\n     * @param {String} path The path to get keys for (e.g., 'user.address').\n     * @returns {String[]}\n     */","meta":{"range":[14618,15166],"filename":"Provider.mjs","lineno":437,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153118","name":"Provider#getTopLevelDataKeys","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Returns the top-level data keys for a given path within this provider&#39;s data.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The path to get keys for (e.g., &#39;user.address&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Array.<String>"]}}],"name":"getTopLevelDataKeys","longname":"Provider#getTopLevelDataKeys","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getTopLevelDataKeys","$kind":"method","id":4976,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * This is the core method for setting data, providing a single entry point for all data modifications.\n     * It handles multiple scenarios:\n     * 1.  **Object-based updates:** If `key` is an object, it recursively calls itself for each key-value pair.\n     * 2.  **Data Records:** If `value` is a `Neo.data.Record`, it is treated as an atomic value and set directly.\n     * 3.  **Bubbling Reactivity:** For a given key (e.g., 'user.name'), it sets the leaf value and then \"bubbles up\"\n     *     the change, creating new parent objects (e.g., 'user') to ensure that effects depending on any part\n     *     of the path are triggered.\n     *\n     * All updates are batched by the public `setData` methods to ensure effects run only once.\n     * Use `setData()` or `setDataAtSameLevel()` instead of calling this method directly.\n     *\n     * @param {Object|String} key The property to set, or an object of key-value pairs.\n     * @param {*} value The new value.\n     * @param {Neo.state.Provider} [originStateProvider] The provider to start the search from for hierarchical updates.\n     * @protected\n     */","meta":{"range":[16295,18979],"filename":"Provider.mjs","lineno":474,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153187","name":"Provider#internalSetData","type":"MethodDefinition","paramnames":["key","value","originStateProvider"]},"vars":{"":null}},"description":"<p>This is the core method for setting data, providing a single entry point for all data modifications.\nIt handles multiple scenarios:</p>\n<ol>\n<li><strong>Object-based updates:</strong> If <code>key</code> is an object, it recursively calls itself for each key-value pair.</li>\n<li><strong>Data Records:</strong> If <code>value</code> is a <code>Neo.data.Record</code>, it is treated as an atomic value and set directly.</li>\n<li><strong>Bubbling Reactivity:</strong> For a given key (e.g., &#39;user.name&#39;), it sets the leaf value and then &quot;bubbles up&quot;\nthe change, creating new parent objects (e.g., &#39;user&#39;) to ensure that effects depending on any part\nof the path are triggered.</li>\n</ol>\n<p>All updates are batched by the public <code>setData</code> methods to ensure effects run only once.\nUse <code>setData()</code> or <code>setDataAtSameLevel()</code> instead of calling this method directly.</p>\n","params":[{"type":{"names":["Object","String"]},"description":"<p>The property to set, or an object of key-value pairs.</p>\n","name":"key"},{"type":{"names":["*"]},"description":"<p>The new value.</p>\n","name":"value"},{"type":{"names":["Neo.state.Provider"]},"optional":true,"description":"<p>The provider to start the search from for hierarchical updates.</p>\n","name":"originStateProvider"}],"access":"protected","name":"internalSetData","longname":"Provider#internalSetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#internalSetData","$kind":"method","id":4977,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Internal convenience method to check if a binding value is supposed to match a store\n     * @param {String} value\n     * @returns {Boolean}\n     */","meta":{"range":[19148,19241],"filename":"Provider.mjs","lineno":539,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153396","name":"Provider#isStoreValue","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Internal convenience method to check if a binding value is supposed to match a store</p>\n","params":[{"type":{"names":["String"]},"name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isStoreValue","longname":"Provider#isStoreValue","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#isStoreValue","$kind":"method","id":4978,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Gets called after all constructors & configs are applied.\n     * @protected\n     */","meta":{"range":[19346,19625],"filename":"Provider.mjs","lineno":547,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153413","name":"Provider#onConstructed","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Gets called after all constructors &amp; configs are applied.</p>\n","access":"protected","name":"onConstructed","longname":"Provider#onConstructed","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#onConstructed","$kind":"method","id":4979,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {String} key\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[19725,19818],"filename":"Provider.mjs","lineno":560,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153436","name":"Provider#onDataPropertyChange","type":"MethodDefinition","paramnames":["key","value","oldValue"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"onDataPropertyChange","longname":"Provider#onDataPropertyChange","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#onDataPropertyChange","$kind":"method","id":4980,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Recursively processes a data object, creating or updating Neo.core.Config instances\n     * for each property and storing them in the #dataConfigs map.\n     * @param {Object} obj The data object to process.\n     * @param {String} [path=''] The current path prefix for nested objects.\n     * @protected\n     */","meta":{"range":[20148,20810],"filename":"Provider.mjs","lineno":571,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153443","name":"Provider#processDataObject","type":"MethodDefinition","paramnames":["obj","path"]},"vars":{"":null}},"description":"<p>Recursively processes a data object, creating or updating Neo.core.Config instances\nfor each property and storing them in the #dataConfigs map.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The data object to process.</p>\n","name":"obj"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"''","description":"<p>The current path prefix for nested objects.</p>\n","name":"path"}],"access":"protected","name":"processDataObject","longname":"Provider#processDataObject","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#processDataObject","$kind":"method","id":4981,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {Neo.component.Base} component\n     * @param {String}             configName\n     * @param {String}             storeName\n     */","meta":{"range":[20968,21168],"filename":"Provider.mjs","lineno":596,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153526","name":"Provider#resolveStore","type":"MethodDefinition","paramnames":["component","configName","storeName"]},"vars":{"":null}},"params":[{"type":{"names":["Neo.component.Base"]},"name":"component"},{"type":{"names":["String"]},"name":"configName"},{"type":{"names":["String"]},"name":"storeName"}],"name":"resolveStore","longname":"Provider#resolveStore","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#resolveStore","$kind":"method","id":4982,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * The method will assign all values to the closest stateProvider where it finds an existing key.\n     * In case no match is found inside the parent chain, a new data property will get generated.\n     *\n     * All updates within a single call are batched to ensure that reactive effects (bindings and formulas)\n     * are run only once.\n     *\n     * @param {Object|String} key\n     * @param {*}             value\n     */","meta":{"range":[22930,23118],"filename":"Provider.mjs","lineno":642,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153628","name":"Provider#setData","type":"MethodDefinition","paramnames":["key","value"]},"vars":{"":null}},"description":"<p>The method will assign all values to the closest stateProvider where it finds an existing key.\nIn case no match is found inside the parent chain, a new data property will get generated.</p>\n<p>All updates within a single call are batched to ensure that reactive effects (bindings and formulas)\nare run only once.</p>\n","params":[{"type":{"names":["Object","String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"}],"name":"setData","longname":"Provider#setData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#setData","$kind":"method","id":4983,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Use this method instead of setData() in case you want to enforce\n     * setting all keys on this instance instead of looking for matches inside parent stateProviders.\n     *\n     * All updates within a single call are batched to ensure that reactive effects (bindings and formulas)\n     * are run only once.\n     *\n     * @param {Object|String} key\n     * @param {*}             value\n     */","meta":{"range":[23532,23725],"filename":"Provider.mjs","lineno":661,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100153655","name":"Provider#setDataAtSameLevel","type":"MethodDefinition","paramnames":["key","value"]},"vars":{"":null}},"description":"<p>Use this method instead of setData() in case you want to enforce\nsetting all keys on this instance instead of looking for matches inside parent stateProviders.</p>\n<p>All updates within a single call are batched to ensure that reactive effects (bindings and formulas)\nare run only once.</p>\n","params":[{"type":{"names":["Object","String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"}],"name":"setDataAtSameLevel","longname":"Provider#setDataAtSameLevel","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#setDataAtSameLevel","$kind":"method","id":4984,"neoClassName":"Neo.state.Provider"}]}