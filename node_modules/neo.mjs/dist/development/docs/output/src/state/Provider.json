{"classData":[{"comment":"/**\n * An optional component state provider for adding bindings to configs\n * @class Neo.state.Provider\n * @extends Neo.core.Base\n */","meta":{"filename":"Provider.mjs","lineno":11,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>An optional component state provider for adding bindings to configs</p>\n","kind":"class","name":"Provider","augments":["Neo.core.Base"],"memberof":"Neo.state","longname":"Neo.state.Provider","scope":"static","$longname":"Neo.state.Provider","$kind":"class","id":4864,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * True automatically applies the core.Observable mixin\n     * @member {Boolean} observable=true\n     * @static\n     */","meta":{"filename":"Provider.mjs","lineno":22,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>True automatically applies the core.Observable mixin</p>\n","kind":"member","name":"observable","type":{"names":["Boolean"]},"defaultvalue":true,"scope":"static","longname":"observable","$longname":"observable","$kind":"property","id":4865,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {String} className='Neo.state.Provider'\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":29,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.state.Provider'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":4866,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {String} ntype='state-provider'\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'state-provider'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":4867,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {Neo.component.Base|null} component=null\n         * @protected\n         */","meta":{"filename":"Provider.mjs","lineno":39,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"component","type":{"names":["Neo.component.Base","null"]},"defaultvalue":null,"access":"protected","longname":"component","scope":"global","$longname":"component","$kind":"property","id":4868,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         /**\n         * The core data object managed by this StateProvider.\n         * This object holds the reactive state that can be accessed and modified\n         * by components and formulas within the provider's hierarchy.\n         * Changes to properties within this data object will trigger reactivity.\n         * When new data is assigned, it will be deeply merged with existing data.\n         * @member {Object|null} data_=null\n         * @example\n         *     data: {\n         *         user: {\n         *             firstName: 'John',\n         *             lastName : 'Doe'\n         *         },\n         *         settings: {\n         *             theme: 'dark'\n         *         }\n         *     }\n         */","meta":{"filename":"Provider.mjs","lineno":59,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>/**\nThe core data object managed by this StateProvider.\nThis object holds the reactive state that can be accessed and modified\nby components and formulas within the provider&#39;s hierarchy.\nChanges to properties within this data object will trigger reactivity.\nWhen new data is assigned, it will be deeply merged with existing data.</p>\n","kind":"member","name":"data_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["data: {\n        user: {\n            firstName: 'John',\n            lastName : 'Doe'\n        },\n        settings: {\n            theme: 'dark'\n        }\n    }"],"longname":"data_","scope":"global","$longname":"data_","$kind":"property","id":4869,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * Defines computed properties based on other data properties within the StateProvider hierarchy.\n         * Each formula is a function that receives a `data` argument, which is a hierarchical proxy\n         * allowing access to data from the current provider and all its parent providers.\n         * Changes to dependencies (accessed via `data.propertyName`) will automatically re-run the formula.\n         * @member {Object|null} formulas_=null\n         * @example\n         *     data: {\n         *         a    : 1,\n         *         b    : 2,\n         *         total: 50\n         *     }\n         *     formulas: {\n         *         aPlusB : (data) => data.a + data.b,\n         *         aTimesB: (data) => data.a * data.b,\n         *         // Accessing parent data (assuming a parent provider has a 'taxRate' property)\n         *         totalWithTax: (data) => data.total * (1 + data.taxRate)\n         *     }\n         */","meta":{"filename":"Provider.mjs","lineno":83,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>Defines computed properties based on other data properties within the StateProvider hierarchy.\nEach formula is a function that receives a <code>data</code> argument, which is a hierarchical proxy\nallowing access to data from the current provider and all its parent providers.\nChanges to dependencies (accessed via <code>data.propertyName</code>) will automatically re-run the formula.</p>\n","kind":"member","name":"formulas_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["data: {\n        a    : 1,\n        b    : 2,\n        total: 50\n    }\n    formulas: {\n        aPlusB : (data) => data.a + data.b,\n        aTimesB: (data) => data.a * data.b,\n        // Accessing parent data (assuming a parent provider has a 'taxRate' property)\n        totalWithTax: (data) => data.total * (1 + data.taxRate)\n    }"],"longname":"formulas_","scope":"global","$longname":"formulas_","$kind":"property","id":4870,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         * @member {Neo.state.Provider|null} parent_=null\n         */","meta":{"filename":"Provider.mjs","lineno":87,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"parent_","type":{"names":["Neo.state.Provider","null"]},"defaultvalue":null,"longname":"parent_","scope":"global","$longname":"parent_","$kind":"property","id":4871,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n         /**\n         * A collection of Neo.data.Store instances managed by this StateProvider.\n         * Stores are defined as config objects with a `module` property pointing\n         * to the store class, which will then be instantiated by the framework.\n         * @member {Object|null} stores_=null\n         * @example\n         *     stores: {\n         *         myUsers: {\n         *             module: Neo.data.Store,\n         *             model : 'MyApp.model.User',\n         *             data  : [{id: 1, name: 'John'}, {id: 2, name: 'Doe'}]\n         *         },\n         *         myCustomStore1: MyCustomStoreClass,\n         *         myCustomStore2: {\n         *             module  : MyCustomStoreClass,\n         *             autoLoad: true\n         *         }\n         *     }\n         */","meta":{"filename":"Provider.mjs","lineno":108,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"description":"<p>/**\nA collection of Neo.data.Store instances managed by this StateProvider.\nStores are defined as config objects with a <code>module</code> property pointing\nto the store class, which will then be instantiated by the framework.</p>\n","kind":"member","name":"stores_","type":{"names":["Object","null"]},"defaultvalue":null,"examples":["stores: {\n        myUsers: {\n            module: Neo.data.Store,\n            model : 'MyApp.model.User',\n            data  : [{id: 1, name: 'John'}, {id: 2, name: 'Doe'}]\n        },\n        myCustomStore1: MyCustomStoreClass,\n        myCustomStore2: {\n            module  : MyCustomStoreClass,\n            autoLoad: true\n        }\n    }"],"longname":"stores_","scope":"global","$longname":"stores_","$kind":"property","id":4872,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Map} #bindingEffects=new Map()\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":115,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#bindingEffects","type":{"names":["Map"]},"defaultvalue":"new","description":"<p>Map()</p>\n","access":"private","longname":"#bindingEffects","scope":"global","$longname":"#bindingEffects","$kind":"property","id":4873,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Object} #dataConfigs={}\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":120,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#dataConfigs","type":{"names":["Object"]},"defaultvalue":"{}","access":"private","longname":"#dataConfigs","scope":"global","$longname":"#dataConfigs","$kind":"property","id":4874,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @member {Map} #formulaEffects=new Map()\n     * @private\n     */","meta":{"filename":"Provider.mjs","lineno":125,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{}},"kind":"member","name":"#formulaEffects","type":{"names":["Map"]},"defaultvalue":"new","description":"<p>Map()</p>\n","access":"private","longname":"#formulaEffects","scope":"global","$longname":"#formulaEffects","$kind":"property","id":4875,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[4463,4562],"filename":"Provider.mjs","lineno":130,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149728","name":"Provider#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Provider#construct","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#construct","$kind":"method","id":4876,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered after the data config got changed.\n     * This method initializes the internal #dataConfigs map, converting each\n     * plain data property into a reactive Neo.core.Config instance.\n     * @param {Object|null} value\n     * @param {Object|null} oldValue\n     * @protected\n     */","meta":{"range":[4872,4956],"filename":"Provider.mjs","lineno":143,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149745","name":"Provider#afterSetData","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the data config got changed.\nThis method initializes the internal #dataConfigs map, converting each\nplain data property into a reactive Neo.core.Config instance.</p>\n","params":[{"type":{"names":["Object","null"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetData","longname":"Provider#afterSetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#afterSetData","$kind":"method","id":4877,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered after the formulas config got changed.\n     * This method sets up reactive effects for each defined formula.\n     * Each formula function receives the hierarchical data proxy, allowing implicit dependency tracking.\n     * @param {Object|null} value The new formulas configuration.\n     * @param {Object|null} oldValue The old formulas configuration.\n     * @protected\n     */","meta":{"range":[5363,6668],"filename":"Provider.mjs","lineno":155,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149759","name":"Provider#afterSetFormulas","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the formulas config got changed.\nThis method sets up reactive effects for each defined formula.\nEach formula function receives the hierarchical data proxy, allowing implicit dependency tracking.</p>\n","params":[{"type":{"names":["Object","null"]},"description":"<p>The new formulas configuration.</p>\n","name":"value"},{"type":{"names":["Object","null"]},"description":"<p>The old formulas configuration.</p>\n","name":"oldValue"}],"access":"protected","name":"afterSetFormulas","longname":"Provider#afterSetFormulas","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#afterSetFormulas","$kind":"method","id":4878,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered when accessing the data config\n     * @param {Object} value\n     * @protected\n     */","meta":{"range":[6785,6852],"filename":"Provider.mjs","lineno":191,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149857","name":"Provider#beforeGetData","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Triggered when accessing the data config</p>\n","params":[{"type":{"names":["Object"]},"name":"value"}],"access":"protected","name":"beforeGetData","longname":"Provider#beforeGetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#beforeGetData","$kind":"method","id":4879,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Triggered before the stores config gets changed.\n     * @param {Object|null} value\n     * @param {Object|null} oldValue\n     * @returns {Object|null}\n     * @protected\n     */","meta":{"range":[7049,7620],"filename":"Provider.mjs","lineno":202,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149867","name":"Provider#beforeSetStores","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the stores config gets changed.</p>\n","params":[{"type":{"names":["Object","null"]},"name":"value"},{"type":{"names":["Object","null"]},"name":"oldValue"}],"returns":[{"type":{"names":["Object","null"]}}],"access":"protected","name":"beforeSetStores","longname":"Provider#beforeSetStores","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#beforeSetStores","$kind":"method","id":4880,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Creates a new binding for a component's config to a data property.\n     * This now uses the Effect-based reactivity system.\n     * @param {String} componentId\n     * @param {String} configKey The component config to bind (e.g., 'text').\n     * @param {String|Function} formatter The function that computes the value.\n     */","meta":{"range":[7966,9094],"filename":"Provider.mjs","lineno":226,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100149931","name":"Provider#createBinding","type":"MethodDefinition","paramnames":["componentId","configKey","key","isTwoWay"]},"vars":{"":null}},"description":"<p>Creates a new binding for a component&#39;s config to a data property.\nThis now uses the Effect-based reactivity system.</p>\n","params":[{"type":{"names":["String"]},"name":"componentId"},{"type":{"names":["String"]},"description":"<p>The component config to bind (e.g., &#39;text&#39;).</p>\n","name":"configKey"},{"type":{"names":["String","function"]},"description":"<p>The function that computes the value.</p>\n","name":"formatter"}],"name":"createBinding","longname":"Provider#createBinding","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#createBinding","$kind":"method","id":4881,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Processes a component's `bind` configuration to create reactive bindings.\n     * It differentiates between store bindings and data bindings, and sets up two-way binding if specified.\n     * @param {Neo.component.Base} component The component instance whose bindings are to be created.\n     */","meta":{"range":[9408,10592],"filename":"Provider.mjs","lineno":264,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150047","name":"Provider#createBindings","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Processes a component&#39;s <code>bind</code> configuration to create reactive bindings.\nIt differentiates between store bindings and data bindings, and sets up two-way binding if specified.</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"description":"<p>The component instance whose bindings are to be created.</p>\n","name":"component"}],"name":"createBindings","longname":"Provider#createBindings","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#createBindings","$kind":"method","id":4882,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Destroys the state provider and cleans up all associated effects.\n     */","meta":{"range":[10687,10956],"filename":"Provider.mjs","lineno":297,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150140","name":"Provider#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Destroys the state provider and cleans up all associated effects.</p>\n","name":"destroy","longname":"Provider#destroy","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#destroy","$kind":"method","id":4883,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Convenience shortcut\n     * @param {String} [ntype]\n     * @returns {Neo.controller.Component|null}\n     */","meta":{"range":[11085,11164],"filename":"Provider.mjs","lineno":314,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150197","name":"Provider#getController","type":"MethodDefinition","paramnames":["ntype"]},"vars":{"":null}},"description":"<p>Convenience shortcut</p>\n","params":[{"type":{"names":["String"]},"optional":true,"name":"ntype"}],"returns":[{"type":{"names":["Neo.controller.Component","null"]}}],"name":"getController","longname":"Provider#getController","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getController","$kind":"method","id":4884,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Access the closest data property inside the parent chain.\n     * @param {String} key\n     * @returns {*} value\n     */","meta":{"range":[11304,11511],"filename":"Provider.mjs","lineno":323,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150210","name":"Provider#getData","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Access the closest data property inside the parent chain.</p>\n","params":[{"type":{"names":["String"]},"name":"key"}],"returns":[{"type":{"names":["*"]},"description":"value"}],"name":"getData","longname":"Provider#getData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getData","$kind":"method","id":4885,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Retrieves the underlying core.Config instance for a given data property path.\n     * @param {String} path The full path of the data property (e.g., 'user.firstname').\n     * @returns {Neo.core.Config|null}\n     */","meta":{"range":[11746,11820],"filename":"Provider.mjs","lineno":336,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150239","name":"Provider#getDataConfig","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Retrieves the underlying core.Config instance for a given data property path.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The full path of the data property (e.g., &#39;user.firstname&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Neo.core.Config","null"]}}],"name":"getDataConfig","longname":"Provider#getDataConfig","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getDataConfig","$kind":"method","id":4886,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Returns the merged, hierarchical data object as a reactive Proxy.\n     * @returns {Proxy}\n     */","meta":{"range":[11939,12014],"filename":"Provider.mjs","lineno":344,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150253","name":"Provider#getHierarchyData","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the merged, hierarchical data object as a reactive Proxy.</p>\n","returns":[{"type":{"names":["Proxy"]}}],"name":"getHierarchyData","longname":"Provider#getHierarchyData","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#getHierarchyData","$kind":"method","id":4887,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Finds the state.Provider instance that owns a specific data property.\n     * @param {String} path The full path of the data property.\n     * @returns {{owner: Neo.state.Provider, propertyName: String}|null}\n     */","meta":{"range":[12250,12594],"filename":"Provider.mjs","lineno":353,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150261","name":"Provider#getOwnerOfDataProperty","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Finds the state.Provider instance that owns a specific data property.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The full path of the data property.</p>\n","name":"path"}],"returns":[{"type":{"names":["Object","null"]}}],"name":"getOwnerOfDataProperty","longname":"Provider#getOwnerOfDataProperty","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getOwnerOfDataProperty","$kind":"method","id":4888,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Get the closest stateProvider inside the components parent tree\n     * @returns {Neo.state.Provider|null}\n     */","meta":{"range":[12729,13317],"filename":"Provider.mjs","lineno":373,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150302","name":"Provider#getParent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Get the closest stateProvider inside the components parent tree</p>\n","returns":[{"type":{"names":["Neo.state.Provider","null"]}}],"name":"getParent","longname":"Provider#getParent","kind":"function","memberof":"Provider","scope":"instance","params":[],"$longname":"Provider#getParent","$kind":"method","id":4889,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Access the closest store inside the VM parent chain.\n     * @param {String} key\n     * @param {Neo.state.Provider} originStateProvider=this for internal usage only\n     * @returns {Neo.data.Store}\n     */","meta":{"range":[13543,14042],"filename":"Provider.mjs","lineno":398,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150330","name":"Provider#getStore","type":"MethodDefinition","paramnames":["key","originStateProvider"]},"vars":{"":null}},"description":"<p>Access the closest store inside the VM parent chain.</p>\n","params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["Neo.state.Provider"]},"defaultvalue":"this","description":"<p>for internal usage only</p>\n","name":"originStateProvider"}],"returns":[{"type":{"names":["Neo.data.Store"]}}],"name":"getStore","longname":"Provider#getStore","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getStore","$kind":"method","id":4890,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Checks if any data property in the hierarchy starts with the given path.\n     * This is used by the HierarchicalDataProxy to determine if it should return a nested proxy.\n     * @param {String} path The path to check (e.g., 'user').\n     * @returns {Boolean}\n     */","meta":{"range":[14330,14606],"filename":"Provider.mjs","lineno":422,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150384","name":"Provider#hasNestedDataStartingWith","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Checks if any data property in the hierarchy starts with the given path.\nThis is used by the HierarchicalDataProxy to determine if it should return a nested proxy.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The path to check (e.g., &#39;user&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasNestedDataStartingWith","longname":"Provider#hasNestedDataStartingWith","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#hasNestedDataStartingWith","$kind":"method","id":4891,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Returns the top-level data keys for a given path within this provider's data.\n     * @param {String} path The path to get keys for (e.g., 'user.address').\n     * @returns {String[]}\n     */","meta":{"range":[14817,15330],"filename":"Provider.mjs","lineno":437,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150422","name":"Provider#getTopLevelDataKeys","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"<p>Returns the top-level data keys for a given path within this provider&#39;s data.</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The path to get keys for (e.g., &#39;user.address&#39;).</p>\n","name":"path"}],"returns":[{"type":{"names":["Array.<String>"]}}],"name":"getTopLevelDataKeys","longname":"Provider#getTopLevelDataKeys","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#getTopLevelDataKeys","$kind":"method","id":4892,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Internal method to avoid code redundancy.\n     * Use setData() or setDataAtSameLevel() instead.\n     *\n     * This method handles setting data properties, including nested paths and Neo.data.Record instances.\n     * It determines the owning StateProvider in the hierarchy and delegates to #setConfigValue.\n     *\n     * Passing an originStateProvider param will try to set each key on the closest property match\n     * inside the parent stateProvider chain => setData()\n     * Not passing it will set all values on the stateProvider where the method gets called => setDataAtSameLevel()\n     * @param {Object|String} key\n     * @param {*} value\n     * @param {Neo.state.Provider} [originStateProvider]\n     * @protected\n     */","meta":{"range":[16078,18553],"filename":"Provider.mjs","lineno":468,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150493","name":"Provider#internalSetData","type":"MethodDefinition","paramnames":["key","value","originStateProvider"]},"vars":{"":null}},"description":"<p>Internal method to avoid code redundancy.\nUse setData() or setDataAtSameLevel() instead.</p>\n<p>This method handles setting data properties, including nested paths and Neo.data.Record instances.\nIt determines the owning StateProvider in the hierarchy and delegates to #setConfigValue.</p>\n<p>Passing an originStateProvider param will try to set each key on the closest property match\ninside the parent stateProvider chain =&gt; setData()\nNot passing it will set all values on the stateProvider where the method gets called =&gt; setDataAtSameLevel()</p>\n","params":[{"type":{"names":["Object","String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["Neo.state.Provider"]},"optional":true,"name":"originStateProvider"}],"access":"protected","name":"internalSetData","longname":"Provider#internalSetData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#internalSetData","$kind":"method","id":4893,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Internal convenience method to check if a binding value is supposed to match a store\n     * @param {String} value\n     * @returns {Boolean}\n     */","meta":{"range":[18722,18815],"filename":"Provider.mjs","lineno":527,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150702","name":"Provider#isStoreValue","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Internal convenience method to check if a binding value is supposed to match a store</p>\n","params":[{"type":{"names":["String"]},"name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isStoreValue","longname":"Provider#isStoreValue","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#isStoreValue","$kind":"method","id":4894,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {String} key\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[18915,19008],"filename":"Provider.mjs","lineno":536,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150719","name":"Provider#onDataPropertyChange","type":"MethodDefinition","paramnames":["key","value","oldValue"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"onDataPropertyChange","longname":"Provider#onDataPropertyChange","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#onDataPropertyChange","$kind":"method","id":4895,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Recursively processes a data object, creating or updating Neo.core.Config instances\n     * for each property and storing them in the #dataConfigs map.\n     * @param {Object} obj The data object to process.\n     * @param {String} [path=''] The current path prefix for nested objects.\n     * @protected\n     */","meta":{"range":[19338,20003],"filename":"Provider.mjs","lineno":547,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150726","name":"Provider#processDataObject","type":"MethodDefinition","paramnames":["obj","path"]},"vars":{"":null}},"description":"<p>Recursively processes a data object, creating or updating Neo.core.Config instances\nfor each property and storing them in the #dataConfigs map.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The data object to process.</p>\n","name":"obj"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"''","description":"<p>The current path prefix for nested objects.</p>\n","name":"path"}],"access":"protected","name":"processDataObject","longname":"Provider#processDataObject","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#processDataObject","$kind":"method","id":4896,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * @param {Neo.component.Base} component\n     * @param {String} configName\n     * @param {String} storeName\n     */","meta":{"range":[20137,20337],"filename":"Provider.mjs","lineno":572,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150809","name":"Provider#resolveStore","type":"MethodDefinition","paramnames":["component","configName","storeName"]},"vars":{"":null}},"params":[{"type":{"names":["Neo.component.Base"]},"name":"component"},{"type":{"names":["String"]},"name":"configName"},{"type":{"names":["String"]},"name":"storeName"}],"name":"resolveStore","longname":"Provider#resolveStore","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#resolveStore","$kind":"method","id":4897,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * The method will assign all values to the closest stateProvider where it finds an existing key.\n     * In case no match is found inside the parent chain, a new data property will get generated.\n     * @param {Object|String} key\n     * @param {*} value\n     */","meta":{"range":[21887,21961],"filename":"Provider.mjs","lineno":614,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150911","name":"Provider#setData","type":"MethodDefinition","paramnames":["key","value"]},"vars":{"":null}},"description":"<p>The method will assign all values to the closest stateProvider where it finds an existing key.\nIn case no match is found inside the parent chain, a new data property will get generated.</p>\n","params":[{"type":{"names":["Object","String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"}],"name":"setData","longname":"Provider#setData","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#setData","$kind":"method","id":4898,"neoClassName":"Neo.state.Provider"},{"comment":"/**\n     * Use this method instead of setData() in case you want to enforce\n     * setting all keys on this instance instead of looking for matches inside parent stateProviders.\n     * @param {Object|String} key\n     * @param {*} value\n     */","meta":{"range":[22215,22294],"filename":"Provider.mjs","lineno":624,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/state","code":{"id":"astnode100150925","name":"Provider#setDataAtSameLevel","type":"MethodDefinition","paramnames":["key","value"]},"vars":{"":null}},"description":"<p>Use this method instead of setData() in case you want to enforce\nsetting all keys on this instance instead of looking for matches inside parent stateProviders.</p>\n","params":[{"type":{"names":["Object","String"]},"name":"key"},{"type":{"names":["*"]},"name":"value"}],"name":"setDataAtSameLevel","longname":"Provider#setDataAtSameLevel","kind":"function","memberof":"Provider","scope":"instance","$longname":"Provider#setDataAtSameLevel","$kind":"method","id":4899,"neoClassName":"Neo.state.Provider"}]}