{"classData":[{"comment":"/**\n * Append args instead of prepending them\n * @param {Function} fn\n * @param {Object} scope\n * @returns {Function}\n */","meta":{"range":[231,425],"filename":"Function.mjs","lineno":10,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166540","name":"exports.bindAppend","type":"FunctionDeclaration","paramnames":["fn","scope"]}},"description":"<p>Append args instead of prepending them</p>\n","params":[{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["Object"]},"name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"bindAppend","longname":"bindAppend","kind":"function","scope":"global","$longname":"bindAppend","$kind":"method","id":5416,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * @param {Function} callback\n * @param {Neo.core.Base} scope\n * @param {Number} delay=300\n * @returns {Function}\n */","meta":{"range":[549,1150],"filename":"Function.mjs","lineno":24,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166580","name":"exports.buffer","type":"FunctionDeclaration","paramnames":["callback","scope","delay"]}},"params":[{"type":{"names":["function"]},"name":"callback"},{"type":{"names":["Neo.core.Base"]},"name":"scope"},{"type":{"names":["Number"]},"defaultvalue":300,"name":"delay"}],"returns":[{"type":{"names":["function"]}}],"name":"buffer","longname":"buffer","kind":"function","scope":"global","$longname":"buffer","$kind":"method","id":5417,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * Intended for functions with 1 param where the interceptor can change the value\n * @param {Object} target\n * @param {String} targetMethodName\n * @param {Function} interceptFunction\n * @param {Object} scope=target\n * @returns {Function}\n */","meta":{"range":[1398,1690],"filename":"Function.mjs","lineno":57,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166653","name":"exports.createInterceptor","type":"FunctionDeclaration","paramnames":["target","targetMethodName","interceptFunction","scope"]}},"description":"<p>Intended for functions with 1 param where the interceptor can change the value</p>\n","params":[{"type":{"names":["Object"]},"name":"target"},{"type":{"names":["String"]},"name":"targetMethodName"},{"type":{"names":["function"]},"name":"interceptFunction"},{"type":{"names":["Object"]},"defaultvalue":"target","name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"createInterceptor","longname":"createInterceptor","kind":"function","scope":"global","$longname":"createInterceptor","$kind":"method","id":5418,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * @param {Neo.core.Base} target\n * @param {String} methodName\n * @param {Function} fn\n * @param {Object} scope\n * @returns {Function}\n */","meta":{"range":[1835,2773],"filename":"Function.mjs","lineno":72,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166689","name":"exports.createSequence","type":"FunctionDeclaration","paramnames":["target","methodName","fn","scope"]}},"params":[{"type":{"names":["Neo.core.Base"]},"name":"target"},{"type":{"names":["String"]},"name":"methodName"},{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["Object"]},"name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"createSequence","longname":"createSequence","kind":"function","scope":"global","$longname":"createSequence","$kind":"method","id":5419,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * @param {Function} callback\n * @param {Neo.core.Base} scope\n * @param {Number} delay=300\n * @returns {Function}\n */","meta":{"range":[2897,3768],"filename":"Function.mjs","lineno":105,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166795","name":"exports.debounce","type":"FunctionDeclaration","paramnames":["callback","scope","delay"]}},"params":[{"type":{"names":["function"]},"name":"callback"},{"type":{"names":["Neo.core.Base"]},"name":"scope"},{"type":{"names":["Number"]},"defaultvalue":300,"name":"delay"}],"returns":[{"type":{"names":["function"]}}],"name":"debounce","longname":"debounce","kind":"function","scope":"global","$longname":"debounce","$kind":"method","id":5420,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * The interceptor can prevent the targetMethod from getting executed in case it returns false.\n * @param {Object} target\n * @param {String} targetMethodName\n * @param {Function} interceptFunction\n * @param {Object} scope=target\n * @param {*} preventedReturnValue=null The value to return in case the interceptFunction returns false\n * @returns {Function}\n */","meta":{"range":[4134,4517],"filename":"Function.mjs","lineno":137,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166875","name":"exports.intercept","type":"FunctionDeclaration","paramnames":["target","targetMethodName","interceptFunction","scope","preventedReturnValue"]}},"description":"<p>The interceptor can prevent the targetMethod from getting executed in case it returns false.</p>\n","params":[{"type":{"names":["Object"]},"name":"target"},{"type":{"names":["String"]},"name":"targetMethodName"},{"type":{"names":["function"]},"name":"interceptFunction"},{"type":{"names":["Object"]},"defaultvalue":"target","name":"scope"},{"type":{"names":["*"]},"defaultvalue":null,"description":"<p>The value to return in case the interceptFunction returns false</p>\n","name":"preventedReturnValue"}],"returns":[{"type":{"names":["function"]}}],"name":"intercept","longname":"intercept","kind":"function","scope":"global","$longname":"intercept","$kind":"method","id":5421,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * Locate a callable function by name in the passed scope.\n *\n * If the name starts with 'up.', the parent Component chain is searched.\n *\n * This is used by manager.DomEvents & core.Observable.fire and by 'handler' function calls to resolve\n * string function names in the Component's own hierarchy.\n * @param {Function|String} fn A function, or the name of a function to find in the passed scope object/\n * @param {Object} scope=this The scope to find the function in if it is specified as a string.\n * @returns {Object}\n */","meta":{"range":[5050,5428],"filename":"Function.mjs","lineno":158,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166918","name":"exports.resolveCallback","type":"FunctionDeclaration","paramnames":["fn","scope"]}},"description":"<p>Locate a callable function by name in the passed scope.</p>\n<p>If the name starts with &#39;up.&#39;, the parent Component chain is searched.</p>\n<p>This is used by manager.DomEvents &amp; core.Observable.fire and by &#39;handler&#39; function calls to resolve\nstring function names in the Component&#39;s own hierarchy.</p>\n","params":[{"type":{"names":["function","String"]},"description":"<p>A function, or the name of a function to find in the passed scope object/</p>\n","name":"fn"},{"type":{"names":["Object"]},"defaultvalue":"this","description":"<p>The scope to find the function in if it is specified as a string.</p>\n","name":"scope"}],"returns":[{"type":{"names":["Object"]}}],"name":"resolveCallback","longname":"resolveCallback","kind":"function","scope":"global","$longname":"resolveCallback","$kind":"method","id":5422,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * @param {Function} callback\n * @param {Neo.core.Base} scope\n * @param {Number} delay=300\n * @returns {Function}\n */","meta":{"range":[5552,6318],"filename":"Function.mjs","lineno":179,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100166984","name":"exports.throttle","type":"FunctionDeclaration","paramnames":["callback","scope","delay"]}},"params":[{"type":{"names":["function"]},"name":"callback"},{"type":{"names":["Neo.core.Base"]},"name":"scope"},{"type":{"names":["Number"]},"defaultvalue":300,"name":"delay"}],"returns":[{"type":{"names":["function"]}}],"name":"throttle","longname":"throttle","kind":"function","scope":"global","$longname":"throttle","$kind":"method","id":5423,"neoClassName":"Neo.util.Function"},{"comment":"/**\n * @param {Neo.core.Base} target\n * @param {String} methodName\n * @param {Function} fn\n * @param {Object} scope\n */","meta":{"range":[6440,7095],"filename":"Function.mjs","lineno":209,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/util","code":{"id":"astnode100167069","name":"exports.unSequence","type":"FunctionDeclaration","paramnames":["target","methodName","fn","scope"]}},"params":[{"type":{"names":["Neo.core.Base"]},"name":"target"},{"type":{"names":["String"]},"name":"methodName"},{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["Object"]},"name":"scope"}],"name":"unSequence","longname":"unSequence","kind":"function","scope":"global","$longname":"unSequence","$kind":"method","id":5424,"neoClassName":"Neo.util.Function"}]}