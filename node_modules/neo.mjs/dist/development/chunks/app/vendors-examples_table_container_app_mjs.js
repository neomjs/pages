"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_table_container_app_mjs"],{

/***/ "./examples/table/container/MainContainer.mjs":
/*!****************************************************!*\
  !*** ./examples/table/container/MainContainer.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_selection_table_CellColumnModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/selection/table/CellColumnModel.mjs */ "./src/selection/table/CellColumnModel.mjs");
/* harmony import */ var _src_selection_table_CellColumnRowModel_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/selection/table/CellColumnRowModel.mjs */ "./src/selection/table/CellColumnRowModel.mjs");
/* harmony import */ var _src_selection_table_CellModel_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/selection/table/CellModel.mjs */ "./src/selection/table/CellModel.mjs");
/* harmony import */ var _src_selection_table_CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/selection/table/CellRowModel.mjs */ "./src/selection/table/CellRowModel.mjs");
/* harmony import */ var _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/form/field/CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_selection_table_ColumnModel_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../src/selection/table/ColumnModel.mjs */ "./src/selection/table/ColumnModel.mjs");
/* harmony import */ var _MainStore_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MainStore.mjs */ "./examples/table/container/MainStore.mjs");
/* harmony import */ var _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../src/form/field/Number.mjs */ "./src/form/field/Number.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_selection_table_RowModel_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../src/selection/table/RowModel.mjs */ "./src/selection/table/RowModel.mjs");
/* harmony import */ var _src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../src/table/Container.mjs */ "./src/table/Container.mjs");














/**
 * @class Neo.examples.table.container.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_6__["default"] {
    static config = {
        className           : 'Neo.examples.table.container.MainContainer',
        autoMount           : true,
        configItemLabelWidth: 130,
        configPanelFlex     : 1.5,
        exampleComponentFlex: 3,
        layout              : {ntype: 'hbox', align: 'stretch'}
    }

    createConfigurationComponents() {
        let me               = this,
            {selectionModel} = me.exampleComponent.view;

        const selectionModelRadioDefaults = {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
            hideValueLabel: false,
            labelText     : '',
            name          : 'selectionModel',
            width         : 350
        };

        return [{
            module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
            labelText: 'height',
            listeners: {change: me.onConfigChange.bind(me, 'height')},
            maxValue : 800,
            minValue : 225,
            stepSize : 5,
            value    : me.exampleComponent.height
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-cellmodel',
            labelText     : 'selectionModel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_CellModel_mjs__WEBPACK_IMPORTED_MODULE_3__["default"])},
            style         : {marginTop: '10px'},
            valueLabelText: 'Cell'
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-columnmodel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_ColumnModel_mjs__WEBPACK_IMPORTED_MODULE_7__["default"])},
            valueLabelText: 'Column'
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-rowmodel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_RowModel_mjs__WEBPACK_IMPORTED_MODULE_11__["default"])},
            valueLabelText: 'Row'
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-cellcolumnmodel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_CellColumnModel_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])},
            valueLabelText: 'Cell & Column'
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-cellrowmodel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_4__["default"])},
            valueLabelText: 'Cell & Row'
        }, {
            ...selectionModelRadioDefaults,
            checked       : selectionModel.ntype === 'selection-table-cellcolumnrowmodel',
            listeners     : {change: me.onRadioViewChange.bind(me, 'selectionModel', _src_selection_table_CellColumnRowModel_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])},
            valueLabelText: 'Cell & Column & Row'
        }, {
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            checked  : me.exampleComponent.sortable,
            labelText: 'sortable',
            listeners: {change: me.onConfigChange.bind(me, 'sortable')},
            style    : {marginTop: '10px'}
        }, {
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            checked  : false,
            labelText: 'Fit width',
            listeners: {
                change({value}) {
                    const {style} = me.exampleComponent;

                    if (value) {
                        style.width = '100%';
                        style.tableLayout = 'fixed';
                    } else {
                        style.width = '';
                        style.tableLayout = '';
                    }

                    me.exampleComponent.style = style
                }
            },
            style: {marginTop: '10px'}
        }]
    }

    /**
     * @returns {Neo.table.Container}
     */
    createExampleComponent() {
        return Neo.create(_src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_12__["default"], {
            id   : 'myTableStoreContainer',
            store: _MainStore_mjs__WEBPACK_IMPORTED_MODULE_8__["default"],

            viewConfig: {
                selectionModel: _src_selection_table_CellModel_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]
            },

            columns: [
                {dataField: 'firstname', text: 'Firstname'},
                {dataField: 'lastname',  text: 'Lastname'},
                {dataField: 'githubId',  text: 'Github Id'},
                {dataField: 'country',   text: 'Country'},
                {
                    dataField: 'edit',
                    text     : 'Edit Action',
                    renderer({column, index}) {
                        const
                            me       = this,
                            widgetId = `${column.id}-widget-${index}`,
                            button   = (column.widgetMap || (column.widgetMap = {}))[widgetId] || (column.widgetMap[widgetId] = Neo.create({
                                module  : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                                appName : me.appName,
                                handler : 'up.editButtonHandler',
                                parentId: 'myTableStoreContainer',
                                text    : 'Edit'
                            }));

                        me.view.updateDepth = -1;

                        return button.createVdomReference()
                    }
                }, {
                    dataField: 'menu',
                    text     : 'Menu',
                    renderer({column, record, index}) {
                        const
                            me       = this,
                            widgetId = `${column.id}-widget-${index}`,
                            button   = (column.widgetMap || (column.widgetMap = {}))[widgetId] || (column.widgetMap[widgetId] = Neo.create('Neo.button.Base', {
                                ntype   : 'button',
                                appName : me.appName,
                                text    : '\u22ee',
                                windowId: me.windowId,
                                menu    : {
                                    items : [{
                                        text : 'Menu option 1'
                                    }, {
                                        text : 'Menu option 2'
                                    }, {
                                        text : 'Menu option 3'
                                    }, {
                                        text : 'Menu option 4'
                                    }]
                                }
                            }));

                        me.view.updateDepth = -1;

                        return button.createVdomReference()
                    }
                }
            ]
        })
    }

    /**
     * @param {Object} data
     */
    editButtonHandler(data) {
        console.log(data)
    }

    /**
     * @param {String} config
     * @param {String} value
     * @param {Object} opts
     */
    onRadioViewChange(config, value, opts) {
        if (opts.value === true) { // we only want to listen to check events, not uncheck
            this.exampleComponent.view[config] = value
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/table/container/MainModel.mjs":
/*!************************************************!*\
  !*** ./examples/table/container/MainModel.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Neo.examples.table.container.MainModel
 * @extends Neo.data.Model
 */
class MainModel extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className: 'Neo.examples.table.container.MainModel',

        fields: [{
            name: 'colspan',
            type: 'Object'
        }, {
            name: 'country',
            type: 'String'
        }, {
            name: 'firstname',
            type: 'String'
        }, {
            name: 'githubId',
            type: 'String'
        }, {
            name: 'lastname',
            type: 'String'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainModel));


/***/ }),

/***/ "./examples/table/container/MainStore.mjs":
/*!************************************************!*\
  !*** ./examples/table/container/MainStore.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MainModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainModel.mjs */ "./examples/table/container/MainModel.mjs");
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/data/Store.mjs */ "./src/data/Store.mjs");



/**
 * @class Neo.examples.table.container.MainStore
 * @extends Neo.data.Store
 */
class MainStore extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        className  : 'Neo.examples.table.container.MainStore',
        keyProperty: 'githubId',
        model      : _MainModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],

        data: [{
            country  : 'Germany',
            firstname: 'Tobias',
            githubId : 'tobiu',
            lastname : 'Uhlig'
        }, {
            country  : 'USA',
            firstname: 'Rich',
            githubId : 'rwaters',
            lastname : 'Waters'
        }, {
            country  : 'Germany',
            firstname: 'Nils',
            githubId : 'mrsunshine',
            lastname : 'Dehl'
        }, {
            country  : 'USA',
            firstname: 'Gerard',
            githubId : 'camtnbikerrwc',
            lastname : 'Horan'
        }, {
            country  : 'Slovakia',
            firstname: 'Jozef',
            githubId : 'jsakalos',
            lastname : 'Sakalos'
        }, {
            country  : 'Germany',
            firstname: 'Bastian',
            githubId : 'bhaustein',
            lastname : 'Haustein'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainStore));


/***/ }),

/***/ "./examples/table/container/app.mjs":
/*!******************************************!*\
  !*** ./examples/table/container/app.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/table/container/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.table.container'
});


/***/ }),

/***/ "./src/selection/table/CellColumnModel.mjs":
/*!*************************************************!*\
  !*** ./src/selection/table/CellColumnModel.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CellModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CellModel.mjs */ "./src/selection/table/CellModel.mjs");
/* harmony import */ var _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/VDom.mjs */ "./src/util/VDom.mjs");



/**
 * @class Neo.selection.table.CellColumnModel
 * @extends Neo.selection.table.CellModel
 */
class CellColumnModel extends _CellModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.selection.table.CellColumnModel'
         * @protected
         */
        className: 'Neo.selection.table.CellColumnModel',
        /**
         * @member {String} ntype='selection-table-cellcolumnmodel'
         * @protected
         */
        ntype: 'selection-table-cellcolumnmodel',
        /**
         * @member {String} cls='neo-selection-cellcolumnmodel'
         * @protected
         */
        cls: 'neo-selection-cellcolumnmodel',
        /**
         * @member {String} selectedColumnCellCls='selected-column-cell'
         * @protected
         */
        selectedColumnCellCls: 'selected-column-cell',
        /**
         * @member {String[]} selectedColumnCellIds=[]
         * @protected
         */
        selectedColumnCellIds: []
    }

    /**
     * @param {Boolean} [silent] true to prevent a vdom update
     */
    deselectAllCells(silent) {
        let me      = this,
            cellIds = [...me.selectedColumnCellIds],
            {view}  = me

        cellIds.forEach(cellId => {
            me.deselect(cellId, true, me.selectedColumnCellIds, me.selectedColumnCellCls)
        });

        !silent && view.update()
    }

    /**
     * @param {Object} data
     */
    onCellClick(data) {
        let me     = this,
            {view} = me,
            cellId = data.data.currentTarget,
            columnNodeIds, dataField, index;

        if (cellId) {
            dataField     = view.getDataField(cellId);
            index         = view.getColumn(dataField, true);
            columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

            me.deselectAllCells(true);
            me.select(columnNodeIds, me.selectedColumnCellIds, me.selectedColumnCellCls)
        }

        super.onCellClick(data)
    }

    /**
     * @param {Number} step
     */
    onNavKeyColumn(step) {
        let me                 = this,
            {dataFields, view} = me,
            columnNodeIds, currentColumn, index;

        if (me.hasSelection()) {
            currentColumn = view.getDataField(me.items[0])
        } else {
            currentColumn = dataFields[0]
        }

        index = (dataFields.indexOf(currentColumn) + step) % dataFields.length;

        while (index < 0) {
            index += dataFields.length
        }

        columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

        me.deselectAllCells(true);
        me.select(columnNodeIds, me.selectedColumnCellIds, me.selectedColumnCellCls);

        super.onNavKeyColumn(step)
    }

    /**
     *
     */
    unregister() {
        this.deselectAllCells();
        super.unregister()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(CellColumnModel));


/***/ }),

/***/ "./src/selection/table/CellColumnRowModel.mjs":
/*!****************************************************!*\
  !*** ./src/selection/table/CellColumnRowModel.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CellRowModel.mjs */ "./src/selection/table/CellRowModel.mjs");
/* harmony import */ var _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/VDom.mjs */ "./src/util/VDom.mjs");



/**
 * @class Neo.selection.table.CellColumnRowModel
 * @extends Neo.selection.table.CellRowModel
 */
class CellColumnRowModel extends _CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.selection.table.CellColumnRowModel'
         * @protected
         */
        className: 'Neo.selection.table.CellColumnRowModel',
        /**
         * @member {String} ntype='selection-table-cellcolumnrowmodel'
         * @protected
         */
        ntype: 'selection-table-cellcolumnrowmodel',
        /**
         * @member {String} cls='neo-selection-cellcolumnrowmodel'
         * @protected
         */
        cls: 'neo-selection-cellcolumnrowmodel',
        /**
         * @member {String} selectedColumnCellCls='selected-column-cell'
         * @protected
         */
        selectedColumnCellCls: 'selected-column-cell',
        /**
         * @member {String[]} selectedColumnCellIds=[]
         * @protected
         */
        selectedColumnCellIds: []
    }

    /**
     * @param {Boolean} [silent] true to prevent a vdom update
     */
    deselectAllCells(silent) {
        let me      = this,
            cellIds = [...me.selectedColumnCellIds],
            {view}  = me;

        cellIds.forEach(cellId => {
            me.deselect(cellId, true, me.selectedColumnCellIds, me.selectedColumnCellCls)
        });

        !silent && view.update()
    }

    /**
     * @param {Object} data
     */
    onCellClick(data) {
        let me     = this,
            {view} = me,
            cellId = data.data.currentTarget,
            columnNodeIds, dataField, index;

        if (cellId) {
            dataField     = view.getDataField(cellId);
            index         = view.getColumn(dataField, true);
            columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

            me.deselectAllCells(true);
            me.select(columnNodeIds, me.selectedColumnCellIds, me.selectedColumnCellCls)
        }

        super.onCellClick(data)
    }

    /**
     * @param {Number} step
     */
    onNavKeyColumn(step) {
        let me                 = this,
            {dataFields, view} = me,
            columnNodeIds, currentColumn, index;

        if (me.hasSelection()) {
            currentColumn = view.getDataField(me.items[0])
        } else {
            currentColumn = dataFields[0]
        }

        index = (dataFields.indexOf(currentColumn) + step) % dataFields.length;

        while (index < 0) {
            index += dataFields.length
        }

        columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

        me.deselectAllCells(true);
        me.select(columnNodeIds, me.selectedColumnCellIds, me.selectedColumnCellCls);

        super.onNavKeyColumn(step)
    }

    /**
     *
     */
    unregister() {
        this.deselectAllCells();
        super.unregister()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(CellColumnRowModel));


/***/ }),

/***/ "./src/selection/table/CellRowModel.mjs":
/*!**********************************************!*\
  !*** ./src/selection/table/CellRowModel.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CellModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CellModel.mjs */ "./src/selection/table/CellModel.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/Array.mjs */ "./src/util/Array.mjs");



/**
 * @class Neo.selection.table.CellRowModel
 * @extends Neo.selection.table.CellModel
 */
class CellRowModel extends _CellModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.selection.table.CellRowModel'
         * @protected
         */
        className: 'Neo.selection.table.CellRowModel',
        /**
         * @member {String} ntype='selection-table-cellrowmodel'
         * @protected
         */
        ntype: 'selection-table-cellrowmodel',
        /**
         * @member {String} cls='neo-selection-cellrowmodel'
         * @protected
         */
        cls: 'neo-selection-cellrowmodel',
        /**
         * @member {String[]} selectedRowIds=[]
         * @protected
         */
        selectedRowIds: []
    }

    /**
     * @param {Boolean} [silent] true to prevent a vdom update
     */
    deselectAllRows(silent) {
        let me     = this,
            rowIds = [...me.selectedRowIds],
            {view} = me;

        rowIds.forEach(rowId => {
            me.deselectRow(rowId, true)
        });

        !silent && view.update()
    }

    /**
     * @param {String} rowId
     * @param {Boolean} [silent] true to prevent a vdom update
     */
    deselectRow(rowId, silent) {
        let me     = this,
            {view} = me,
            node   = view.getVdomChild(rowId),
            cls;

        if (node) {
            cls = node.cls || [];
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(cls, me.selectedCls);
            node.cls = cls
        }

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(me.selectedRowIds, rowId);

        !silent && view.update()
    }

    /**
     * @param {Object} data
     */
    onCellClick(data) {
        let me     = this,
            record = me.view.getRecord(data.data.currentTarget),
            rowId  = me.view.getRowId(record);

        if (rowId) {
            me.deselectAllRows(true);
            me.selectRow(rowId)
        }

        super.onCellClick(data)
    }

    /**
     * @param {Number} step
     */
    onNavKeyRow(step) {
        super.onNavKeyRow(step);

        let me           = this,
            {view}       = me,
            {store}      = view,
            countRecords = store.getCount(),
            rowId        = me.selectedRowIds[0] || view.getRowId(store.getAt(0)),
            record       = view.getRecord(rowId),
            index        = store.indexOf(record),
            newIndex     = (index + step) % countRecords,
            id;

        while (newIndex < 0) {
            newIndex += countRecords
        }

        id = view.getRowId(store.getAt(newIndex));

        if (id) {
            me.deselectAllRows(true);
            me.selectRow(id)
        }
    }

    /**
     * @param {String} id
     * @param {Boolean} [silent]
     */
    selectRow(id, silent) {
        let me       = this,
            {view}   = me,
            vdomNode = id && view.getVdomChild(id),
            cls;

        if (vdomNode) {
            cls = vdomNode.cls || [];
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].add(cls, me.selectedCls);
            vdomNode.cls = cls;

            me.selectedRowIds.push(id)
        }

        !silent && view.update()
    }

    /**
     *
     */
    unregister() {
        this.deselectAllRows();
        super.unregister()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(CellRowModel));


/***/ }),

/***/ "./src/selection/table/ColumnModel.mjs":
/*!*********************************************!*\
  !*** ./src/selection/table/ColumnModel.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _BaseModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseModel.mjs */ "./src/selection/table/BaseModel.mjs");
/* harmony import */ var _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/VDom.mjs */ "./src/util/VDom.mjs");



/**
 * @class Neo.selection.table.ColumnModel
 * @extends Neo.selection.table.BaseModel
 */
class ColumnModel extends _BaseModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.selection.table.ColumnModel'
         * @protected
         */
        className: 'Neo.selection.table.ColumnModel',
        /**
         * @member {String} ntype='selection-table-columnmodel'
         * @protected
         */
        ntype: 'selection-table-columnmodel',
        /**
         * @member {String} cls='neo-selection-columnmodel'
         * @protected
         */
        cls: 'neo-selection-columnmodel'
    }

    /**
     *
     */
    addDomListener() {
        let me = this;

        me.view.parent.on('cellClick', me.onCellClick, me)
    }

    /**
     * @param args
     */
    destroy(...args) {
        let me = this;

        me.view.parent.un('cellClick', me.onCellClick, me);

        super.destroy(...args)
    }

    /**
     * @param {Object} data
     */
    onCellClick(data) {
        let me     = this,
            {view} = me,
            cellId = data.data.currentTarget,
            columnNodeIds, dataField, index;

        if (cellId) {
            dataField     = view.getDataField(cellId);
            index         = view.getColumn(dataField, true);
            columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

            me.select(columnNodeIds)
        }
    }

    /**
     * @param {Object} data
     */
    onKeyDownLeft(data) {
        this.onNavKeyColumn(-1)
    }

    /**
     * @param {Object} data
     */
    onKeyDownRight(data) {
        this.onNavKeyColumn(1)
    }

    /**
     * @param {Number} step
     */
    onNavKeyColumn(step) {
        let me                 = this,
            {dataFields, view} = me,
            columnNodeIds, currentColumn, index;

        if (me.hasSelection()) {
            currentColumn = view.getDataField(me.items[0])
        } else {
            currentColumn = dataFields[0]
        }

        index = (dataFields.indexOf(currentColumn) + step) % dataFields.length;

        while (index < 0) {
            index += dataFields.length
        }

        columnNodeIds = _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getColumnNodesIds(view.vdom, index);

        me.select(columnNodeIds)
    }

    /**
     * @param {Neo.component.Base} component
     */
    register(component) {
        super.register(component);

        let {id, view} = this;

        view.keys?._keys.push(
            {fn: 'onKeyDownLeft',  key: 'Left',  scope: id},
            {fn: 'onKeyDownRight', key: 'Right', scope: id}
        )
    }

    /**
     *
     */
    unregister() {
        let {id, view} = this;

        view.keys?.removeKeys([
            {fn: 'onKeyDownLeft',  key: 'Left',  scope: id},
            {fn: 'onKeyDownRight', key: 'Right', scope: id}
        ]);

        super.unregister()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(ColumnModel));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,