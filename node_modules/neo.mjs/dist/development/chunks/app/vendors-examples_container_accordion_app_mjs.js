"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_container_accordion_app_mjs"],{

/***/ "./examples/container/accordion/MainContainer.mjs":
/*!********************************************************!*\
  !*** ./examples/container/accordion/MainContainer.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_container_Accordion_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/container/Accordion.mjs */ "./src/container/Accordion.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");




/**
 * @class Neo.examples.button.base.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        className           : 'Neo.examples.button.base.MainContainer',
        configItemLabelWidth: 160,
        configItemWidth     : 280,
        layout              : {ntype: 'hbox', align: 'stretch'}
    }

    createConfigurationComponents() {
        return [{
            ntype: 'component',
            html : '<u><b>TOP ACCORDION</b></u>',
            style: {marginTop: '10px'},
        }, {
            ntype: 'component',
            html : '<b>maxExpandedItems:</b> 2',
            style: {marginTop: '10px'},
        }, {
            ntype: 'component',
            html : '<b>initialOpen:</b> [0, 1]',
            style: {marginTop: '10px'},
        }, {
            ntype: 'component',
            html : '<u><b>BOTTOM ACCORDION</b></u>',
            style: {marginTop: '10px'},
        }, {
            ntype: 'component',
            html : '<b>maxExpandedItems:</b> 1',
            style: {marginTop: '10px'},
        }, {
            ntype: 'component',
            html : '<b>initialOpen:</b> [0]',
            style: {marginTop: '10px'},
        }]
    }

    createExampleComponent() {
        return Neo.create({
            module: _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
            items : [{
                module: _src_container_Accordion_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],

                title           : 'TOP',
                maxExpandedItems: 2,
                initialOpen     : [0, 1],

                height: 550,
                style : {
                    backgroundColor: 'grey',
                    padding        : '15px'
                },

                items: [{
                    iconCls: 'fa fa-dice-one',
                    title  : 'First Headerbar',
                    items  : [{
                        ntype: 'component',
                        html : 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.'
                    }]
                }, {
                    iconCls: 'fa-dice-two',
                    title  : 'Second Headerbar',
                    items  : [{
                        html: 'Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.'
                    }]
                }, {
                    iconCls: 'fa-dice-three',
                    title  : 'Third Headerbar',
                    items  : [{
                        html: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.'
                    }]
                }]
            }, {
                module: _src_container_Accordion_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],

                title           : 'bottom',
                maxExpandedItems: 1,
                initialOpen     : [0],

                height: 550,
                style : {
                    backgroundColor: 'darkgrey',
                    padding        : '15px'
                },

                items: [{
                    iconCls: 'fa fa-1',
                    title  : 'Define Content',
                    items  : [{
                        ntype: 'component',
                        html : 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.'
                    }]
                }, {
                    iconCls: 'fa-2',
                    title  : 'Mark Best Fit',
                    items  : [{
                        html: 'Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.'
                    }]
                }, {
                    iconCls: 'fa-3',
                    title  : 'Create Invoice',
                    items  : [{
                        html: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.'
                    }]
                }]
            }]
        })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/container/accordion/app.mjs":
/*!**********************************************!*\
  !*** ./examples/container/accordion/app.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/container/accordion/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.container.accordion'
});

/***/ }),

/***/ "./src/container/Accordion.mjs":
/*!*************************************!*\
  !*** ./src/container/Accordion.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _AccordionItem_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccordionItem.mjs */ "./src/container/AccordionItem.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");
/* harmony import */ var _Panel_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Panel.mjs */ "./src/container/Panel.mjs");




/**
 * @class Neo.container.Accordion
 * @extends Neo.container.Panel
 */
class Accordion extends _Panel_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Accordion'
         * @protected
         */
        className: 'Neo.container.Accordion',
        /**
         * @member {String} ntype='accordion'
         * @protected
         */
        ntype: 'accordion',
        /**
         * @member {String[]} baseCls=['neo-accordion']
         */
        baseCls: ['neo-accordion'],
        /**
         * Add zero based numbers, which accordion items you want initially expanded
         * @member {Number[]} initialOpen=[]
         */
        initialOpen_: [],
        /**
         * @member {Object} itemDefaults={ntype:'accordionitem'}
         * @reactive
         */
        itemDefaults: {ntype: 'accordionitem'},
        /**
         * @member {Object[]} items=[]
         * @reactive
         */
        items: [],
        /**
         * Max number of accordion items, which can be expanded at the same time
         * @member {Number} maxExpandedItems=1
         */
        maxExpandedItems: 1,
        /**
         * Keep track of currently open items
         * @member {String[]} expandedItems=[]
         * @private
         */
        expandedItems_: [],
        /**
         * Creates a top header
         * @member {String|null} title=null
         */
        title_: null
    }

    /**
     * @param {Number[]} value
     * @param {Number[]} oldValue
     */
    afterSetInitialOpen(value, oldValue) {
        let me                     = this,
            {expandedItems, items} = me,
            id, item;

        value.forEach((itemNo) => {
            id   = Neo.getId(me.itemDefaults.ntype),
            item = items[itemNo];

            item.expanded = true;
            item.id       = id;
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].add(expandedItems, id)
        });

        me.expandedItems = expandedItems
    }

    /**
     * After changes to title config, we add a header
     * @param {String|null} value
     * @param {String|null} oldValue
     */
    afterSetTitle(value, oldValue) {
        let me      = this,
            titleEl = me.down({flag: 'titleEl'});

        if (value && !titleEl) {
            me.headers = [{
                baseCls: 'neo-accordion-title',
                cls    : ['neo-accordion-title'],
                dock   : 'top',
                text   : value
            }]
        }
    }

    /**
     * Called by accordion items.
     * Checks for maxExpandedItems
     * @param {Object}                      data
     * @param {Boolean}                     data.expanded newState
     * @param {Neo.container.AccordionItem} data.target   accordion item
     * @protected
     */
    childExpandChange(data) {
        let me                                = this,
            {expandedItems, maxExpandedItems} = me,
            {expanded, target}                = data,
            curNoOpenItems                    = expandedItems.length,
            targetId                          = target.id;

        if (expanded
            && maxExpandedItems !== 0
            && curNoOpenItems === maxExpandedItems
        ) {
            Neo.get(expandedItems[0]).expanded = false;
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(expandedItems, expandedItems[0])
        }

        target.expanded = expanded;
        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].toggle(expandedItems, targetId);

        me.expandedItems = expandedItems
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Accordion));


/***/ }),

/***/ "./src/container/AccordionItem.mjs":
/*!*****************************************!*\
  !*** ./src/container/AccordionItem.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _toolbar_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toolbar/Base.mjs */ "./src/toolbar/Base.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");




/**
 * @class Neo.container.AccordionItem
 * @extends Neo.container.Base
 */
class AccordionContainer extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.AccordionItem'
         * @protected
         */
        className: 'Neo.container.AccordionItem',
        /**
         * @member {String} ntype='accordionitem'
         * @protected
         */
        ntype: 'accordionitem',
        /**
         * @member {String[]} baseCls=['neo-accordion-component']
         */
        baseCls: ['neo-accordion-item'],

        /**
         * Additional cls for the arrow, in case you need to customize it
         * @member {String[]|String|null} arrowCls=null
         */
        arrowCls: null,
        /**
         * Expand or collapse (true/false) this value
         * @member {Boolean} expanded=false
         */
        expanded_: false,
        /**
         * cls for the icon in front of the title
         * May be empty. 'fa' is preset,
         * so if you use fontawesome you do not have to add it.
         *
         * @member {String[]|String|null} iconCls=null
         */
        iconCls_: null,
        /**
         * Title for Headerbar
         * @member {String|null} title=null
         */
        title_: null
    }

    /**
     * Runs after afterSetTitle, so that the title component does not exist prior.
     * @protected
     */
    createItems() {
        let me       = this,
            arrowCls = me.arrowCls || 'fa-caret-down',
            iconCls  = me.iconCls  || ['no-icon'],
            {items, title} = me,
            header, content;

        if (!Neo.isArray(iconCls)) {
            iconCls = iconCls.split(' ')
        }

        if (!Neo.isArray(arrowCls)) {
            arrowCls = arrowCls.split(' ')
        }

        header = Neo.create({
            module: _toolbar_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            items : [{
                flag   : 'iconEl',
                ntype  : 'component',
                baseCls: ['neo-accordion-header-icon'],
                cls    : ['fa', ...iconCls],
            }, {
                flag   : 'titleEl',
                ntype  : 'component',
                baseCls: ['neo-accordion-header-title'],
                text   : title
            }, {
                ntype  : 'component',
                baseCls: ['neo-accordion-header-arrow'],
                cls    : ['fa', ...arrowCls]
            }]
        });

        content = {
            ntype  : 'container',
            flag   : 'content',
            baseCls: ['neo-accordion-content', 'neo-container'],
            items  : items
        };

        me.items = [header, content];

        super.createItems();

        me.addDomListeners([
            {click: me.onExpandClick, delegate: 'neo-accordion-header-arrow'}
        ])
    }

    /**
     * After changing expanded, we expand/collapse via CSS
     * @param {Boolean} isExpanded
     */
    afterSetExpanded(isExpanded) {
        let me    = this,
            {cls} = me,
            fn    = isExpanded ? 'add' : 'remove';

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][fn](cls, 'neo-expanded');
        me.cls = cls;

        // Ensure scrollbars are not flipping in and out
        me.timeout(450).then(() => {
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][fn](cls, 'neo-scrollable');
            me.cls = cls
        })
    }

    /**
     * The initial title is set before the component is created,
     * so we have to check if it exists.
     *
     * @param {String[]|String} newValue
     * @param {String[]} oldValue
     */
    afterSetIconCls(newValue, oldValue) {
        let iconEl = this.down({flag: 'iconEl'});

        if (iconEl) {
            let cls = iconEl.cls;

            if (!Neo.isArray(newValue)) {
                newValue = newValue.split(' ')
            }

            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].remove(cls, oldValue);
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].add(cls, newValue);
            iconEl.cls = cls
        }
    }

    /**
     * The initial title is set before the component is created,
     * so we have to check if it exists.
     *
     * @param {String} newValue
     */
    afterSetTitle(newValue) {
        let titleEl = this.down({flag: 'titleEl'});

        if (titleEl) {
            titleEl.text = newValue
        }
    }

    /**
     * If the parent is an AccordionContainer, we run the parent function.
     * Otherwise we set this.expanded to the new value.
     */
    onExpandClick() {
        let me           = this,
            currentState = me.expanded,
            parent       = me.up('accordion');

        if (parent.ntype === 'accordion') {
            parent.childExpandChange({
                expanded: !currentState,
                target  : me
            })
        } else {
            me.expanded = !currentState
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(AccordionContainer));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,