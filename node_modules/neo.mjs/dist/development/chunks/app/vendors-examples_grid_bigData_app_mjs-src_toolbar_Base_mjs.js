"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_grid_bigData_app_mjs-src_toolbar_Base_mjs"],{

/***/ "./examples/grid/bigData/ControlsContainer.mjs":
/*!*****************************************************!*\
  !*** ./examples/grid/bigData/ControlsContainer.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/selection/grid/_export.mjs */ "./src/selection/grid/_export.mjs");
/* harmony import */ var _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/form/field/ComboBox.mjs */ "./src/form/field/ComboBox.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_tab_Container_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/tab/Container.mjs */ "./src/tab/Container.mjs");






/**
 * @class Neo.examples.grid.bigData.ControlsContainer
 * @extends Neo.container.Base
 */
class ControlsContainer extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.grid.bigData.ControlsContainer'
         * @protected
         */
        className: 'Neo.examples.grid.bigData.ControlsContainer',
        /**
         * @member {String[]} cls=['neo-examples-bigdata-controls-container']
         * @reactive
         */
        cls: ['neo-examples-bigdata-controls-container'],
        /**
         * @member {Object[]} items
         */
        items: [{
            ntype  : 'button',
            cls    : ['controls-container-button'],
            handler: 'up.onControlsToggleButtonClick',
            iconCls: 'fas fa-bars'
        }, {
            module  : _src_tab_Container_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
            cls     : ['neo-examples-bigdata-controls-container-content'],
            sortable: true,

            headerToolbar: {
                sortZoneConfig: {
                    adjustItemRectsToParent: true
                }
            },

            items: [{
                module: _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                header: {text: 'Settings'},
                layout: 'vbox',

                itemDefaults: {
                    module      : _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                    clearable   : false,
                    displayField: 'id',
                    editable    : false
                },

                items: [{
                    labelText : 'Amount Rows',
                    labelWidth: 120,
                    listeners : {change: 'up.onAmountRowsChange'},
                    store     : ['1000', '5000', '10000', '20000', '50000'],
                    value     : '1000',
                    width     : 200
                }, {
                    labelText : 'Amount Columns',
                    labelWidth: 145,
                    listeners : {change: 'up.onAmountColumnsChange'},
                    store     : ['10', '25', '50', '75', '100'],
                    value     : '50',
                    width     : 200
                }, {
                    labelText : 'Buffer Rows',
                    labelWidth: 145,
                    listeners : {change: 'up.onBufferRowRangeChange'},
                    store     : ['0', '3', '5', '10', '25', '50'],
                    value     : '5',
                    width     : 200
                }, {
                    labelText : 'Buffer Columns',
                    labelWidth: 145,
                    listeners : {change: 'up.onBufferColumnRangeChange'},
                    store     : ['0', '3', '5', '10', '20'],
                    value     : '3',
                    width     : 200
                }, {
                    module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                    checked       : true,
                    labelText     : 'Theme',
                    labelWidth    : 70,
                    listeners     : {change: 'up.onThemeRadioChange'},
                    name          : 'theme',
                    style         : {marginTop: '2em'},
                    value         : 'neo-theme-dark',
                    valueLabelText: 'Dark'
                }, {
                    module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                    labelText     : '',
                    labelWidth    : 70,
                    listeners     : {change: 'up.onThemeRadioChange'},
                    name          : 'theme',
                    style         : {marginTop: '.3em'},
                    value         : 'neo-theme-light',
                    valueLabelText: 'Light'
                }, {
                    ntype: 'label',
                    style: {marginTop: '2em'},
                    text : 'Filters'
                }, {
                    ntype     : 'textfield',
                    clearable : true,
                    editable  : true,
                    labelText : 'Firstname',
                    labelWidth: 90,
                    listeners : {change: 'up.onFilterFieldChange'},
                    name      : 'firstname',
                    style     : {marginTop: '.3em'},
                    width     : 200
                }, {
                    ntype     : 'textfield',
                    clearable : true,
                    editable  : true,
                    labelText : 'Lastname',
                    labelWidth: 90,
                    listeners : {change: 'up.onFilterFieldChange'},
                    name      : 'lastname',
                    width     : 200
                }, {
                    ntype    : 'label',
                    reference: 'count-rows-label',
                    style    : {marginTop: '1em'}
                }]
            }, {
                module: _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                header: {text: 'Selection'},
                layout: 'vbox',

                itemDefaults: {
                    module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                    hideLabel     : true,
                    hideValueLabel: false,
                    labelText     : '',
                    listeners     : {change: 'up.onSelectionModelChange'},
                    name          : 'selectionModel',
                    style         : {marginTop: '.3em'},
                    width         : 200
                },

                items: [{
                    ntype: 'label',
                    style: {marginTop: 0},
                    text : 'Pick the Selection Model'
                }, {
                    style         : {marginTop: '1em'},
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.CellModel,
                    valueLabelText: 'Cell'
                }, {
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.ColumnModel,
                    valueLabelText: 'Column'
                }, {
                    checked       : true,
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.RowModel,
                    valueLabelText: 'Row'
                }, {
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.CellColumnModel,
                    valueLabelText: 'Cell & Column'
                }, {
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.CellRowModel,
                    valueLabelText: 'Cell & Row'
                }, {
                    selectionModel: _src_selection_grid_export_mjs__WEBPACK_IMPORTED_MODULE_0__.CellColumnRowModel,
                    valueLabelText: 'Cell & Column & Row'
                }]
            }]
        }],
        /**
         * @member {Object} layout={ntype:'vbox'}
         * @reactive
         */
        layout: {ntype: 'fit'},
        /**
         * @member {String} tag='aside'
         * @reactive
         */
        tag: 'aside'
    }

    get grid() {
        return this.parent.getItem('grid')
    }

    /**
     * @param {Object} data
     */
    onAmountColumnsChange(data) {
        if (data.oldValue) {
            this.grid.isLoading = 'Is Loading';
            this.grid.amountColumns = parseInt(data.value.id)
        }
    }

    /**
     * @param {Object} data
     */
    onAmountRowsChange(data) {
        if (data.oldValue) {
            this.grid.isLoading = 'Is Loading';
            this.grid.store.amountRows = parseInt(data.value.id)
        }
    }

    /**
     * @param {Object} data
     */
    onBufferColumnRangeChange(data) {
        if (data.oldValue) {
            this.grid.body.bufferColumnRange = parseInt(data.value.id)
        }
    }

    /**
     * @param {Object} data
     */
    onBufferRowRangeChange(data) {
        if (data.oldValue) {
            this.grid.body.bufferRowRange = parseInt(data.value.id)
        }
    }

    /**
     * @param {Object} data
     */
    async onControlsToggleButtonClick(data) {
        let me     = this,
            button = data.component;

        // Custom flag to track the state
        button.expanded = !button.expanded;

        me.toggleCls('neo-expanded');

        await me.timeout(button.expanded ? 250 : 0);

        me.grid.toggleCls('neo-extend-margin-right');
    }

    onConstructed() {
        super.onConstructed();

        let me      = this,
            {store} = me.grid;

        store.on({
            filter: me.updateRowsLabel,
            load  : me.updateRowsLabel,
            scope : me
        });

        store.getCount() > 0 && me.updateRowsLabel()
    }

    /**
     * @param {Object} data
     */
    onFilterFieldChange(data) {
        this.grid.store.getFilter(data.component.name).value = data.value
    }

    /**
     * @param {Object} data
     */
    onSelectionModelChange(data) {
        this.grid.body.selectionModel = data.component.selectionModel
    }

    /**
     *
     */
    updateRowsLabel() {
        let {store} = this.grid;

        if (!store.isLoading) {
            this.getItem('count-rows-label').text = 'Filtered rows: ' + store.getCount()
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(ControlsContainer));


/***/ }),

/***/ "./examples/grid/bigData/GridContainer.mjs":
/*!*************************************************!*\
  !*** ./examples/grid/bigData/GridContainer.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_grid_Container_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/grid/Container.mjs */ "./src/grid/Container.mjs");
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _MainStore_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MainStore.mjs */ "./examples/grid/bigData/MainStore.mjs");




/**
 * @class Neo.examples.grid.bigData.GridContainer
 * @extends Neo.grid.Container
 */
class GridContainer extends _src_grid_Container_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.grid.bigData.GridContainer'
         * @protected
         */
        className: 'Neo.examples.grid.bigData.GridContainer',
        /**
         * @member {Number} amountColumns_=50
         * @reactive
         */
        amountColumns_: 50,
        /**
         * @member {Object} body
         */
        body: {
            bufferColumnRange: 3,
            bufferRowRange   : 5
        },
        /**
         * Default configs for each column
         * @member {Object} columnDefaults
         */
        columnDefaults: {
            cellAlign           : 'right',
            defaultSortDirection: 'DESC',
            width               : 100
        },
        /**
         * @member {Object[]} store=MainStore
         * @reactive
         */
        store: _MainStore_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]
    }

    /**
     * Triggered after the amountColumns config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetAmountColumns(value, oldValue) {
        let i       = 7,
            columns = [
                {type: 'index', dataField: 'id', text: '#', width: 60},
                {cellAlign: 'left', dataField: 'firstname', defaultSortDirection: 'ASC', text: 'Firstname', width: 150},
                {cellAlign: 'left', dataField: 'lastname',  defaultSortDirection: 'ASC', text: 'Lastname',  width: 150},
                {cellAlign: 'left', dataField: 'countAction', text: 'Increase Counter', width: 150,  component: ({record}) => ({
                    module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                    handler() {record.counter++},
                    text  : record.firstname + ' ++',
                    width : 130
                })},
                {type: 'animatedChange', dataField: 'counter', text: 'Counter'},
                {type: 'progress',       dataField: 'progress', text: 'Progress', width: 150}
            ];

        for (; i <= value; i++) {
            columns.push({dataField: 'number' + i, text: 'Number ' + i})
        }

        this.store.amountColumns = value;

        this.columns = columns
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(GridContainer));


/***/ }),

/***/ "./examples/grid/bigData/MainContainer.mjs":
/*!*************************************************!*\
  !*** ./examples/grid/bigData/MainContainer.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ControlsContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ControlsContainer.mjs */ "./examples/grid/bigData/ControlsContainer.mjs");
/* harmony import */ var _GridContainer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GridContainer.mjs */ "./examples/grid/bigData/GridContainer.mjs");
/* harmony import */ var _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/container/Viewport.mjs */ "./src/container/Viewport.mjs");




/**
 * @class Neo.examples.grid.bigData.MainContainer
 * @extends Neo.container.Viewport
 */
class MainContainer extends _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.grid.bigData.MainContainer'
         * @protected
         */
        className: 'Neo.examples.grid.bigData.MainContainer',
        /**
         * @member {String[]} cls=['neo-examples-bigdata-maincontainer']
         * @reactive
         */
        cls: ['neo-examples-bigdata-maincontainer'],
        /**
         * @member {Object} layout={ntype:'hbox',align:'stretch'}
         * @reactive
         */
        layout: {ntype: 'hbox', align: 'stretch'},
        /**
         * @member {Object[]} items
         */
        items: [{
            module   : _GridContainer_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            reference: 'grid'
        }, {
            module: _ControlsContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]
        }]
    }

    /**
     * @param {Object} opts
     */
    onThemeRadioChange({value}) {
        this.theme = value
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/grid/bigData/MainModel.mjs":
/*!*********************************************!*\
  !*** ./examples/grid/bigData/MainModel.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Neo.examples.grid.bigData.MainModel
 * @extends Neo.data.Model
 */
class MainModel extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.grid.bigData.MainModel'
         * @protected
         */
        className: 'Neo.examples.grid.bigData.MainModel',
        /**
         * @member {Number} amountColumns_=50
         * @reactive
         */
        amountColumns_: 50
    }

    /**
     * Triggered after the amountColumns config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetAmountColumns(value, oldValue) {
        let i      = 7,
            fields = [
                {name: 'id',        type: 'Int'},
                {name: 'countAction'},
                {name: 'counter',   type: 'Int'},
                {name: 'firstname', type: 'String'},
                {name: 'lastname',  type: 'String'},
                {name: 'progress',  type: 'Int'}
            ];

        for (; i <= value; i++) {
            fields.push({name: 'number' + i, type: 'Int'})
        }

        this.fields = fields
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainModel));


/***/ }),

/***/ "./examples/grid/bigData/MainStore.mjs":
/*!*********************************************!*\
  !*** ./examples/grid/bigData/MainStore.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MainModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainModel.mjs */ "./examples/grid/bigData/MainModel.mjs");
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/data/Store.mjs */ "./src/data/Store.mjs");



/**
 * @class Neo.examples.grid.bigData.MainStore
 * @extends Neo.data.Store
 */
class MainStore extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.grid.bigData.MainStore'
         * @protected
         */
        className: 'Neo.examples.grid.bigData.MainStore',
        /**
         * @member {Number} amountColumns_=50
         * @reactive
         */
        amountColumns_: 50,
        /**
         * @member {Number} amountRows_=1000
         * @reactive
         */
        amountRows_: 1000,
        /**
         * @member {Object[]} filters
         */
        filters: [{
            property: 'firstname',
            operator: 'like',
            value   : null
        }, {
            property: 'lastname',
            operator: 'like',
            value   : null
        }],
        /**
         * @member {Neo.data.Model} model=Model
         * @reactive
         */
        model: _MainModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]
    }

    firstnames = [
        'Amanda', 'Andrew', 'Anthony', 'Ashley', 'Barbara', 'Betty', 'Brian', 'Carol', 'Charles', 'Christopher',
        'Daniel', 'David', 'Deborah', 'Donna', 'Elizabeth', 'Emily', 'George', 'Jack', 'James', 'Jennifer',
        'Jessica', 'Joe', 'John', 'Joseph', 'Joshua', 'Karen', 'Kenneth', 'Kelly', 'Kevin', 'Kimberly',
        'Linda', 'Lisa', 'Margaret', 'Mark', 'Mary', 'Matthew', 'Max', 'Melissa', 'Michael', 'Michelle',
        'Nancy', 'Patricia', 'Paul', 'Richard', 'Robert', 'Ronald', 'Sam', 'Sandra', 'Sarah', 'Stephanie',
        'Steven', 'Susan', 'Thomas', 'Timothy', 'Tobias', 'William'
    ]

    lastnames = [
        'Adams', 'Allen', 'Anderson', 'Baker', 'Brown', 'Campbell', 'Carter', 'Clark', 'Davis', 'Flores',
        'Garcia', 'Gonzales', 'Green', 'Hall', 'Harris', 'Hernandez', 'Hill', 'Jackson', 'Johnson', 'Jones',
        'King', 'Lee', 'Lewis', 'Lopez', 'Martin', 'Martinez', 'Miller', 'Mitchell', 'Moore', 'Nelson',
        'Nguyen', 'Perez', 'Rahder', 'Ramirez', 'Roberts', 'Rivera', 'Robinson', 'Rodriguez', 'Sanchez', 'Scott',
        'Smith', 'Taylor', 'Thomas', 'Thompson', 'Torres', 'Uhlig', 'Walker', 'Waters', 'White', 'Williams',
        'Wilson', 'Wright', 'Young'
    ]

    /**
     * Triggered after the amountColumns config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetAmountColumns(value, oldValue) {
        if (oldValue !== undefined) {
            let me    = this,
                data  = me.generateData(me.amountRows, value),
                start = performance.now();

            me.model.amountColumns = value;

            console.log('Start creating records');

            me.data = data;

            console.log(`Record creation total time: ${Math.round(performance.now() - start)}ms`)
        }
    }

    /**
     * Triggered after the amountRows config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetAmountRows(value, oldValue) {
        let me    = this,
            data  = me.generateData(value, me.amountColumns),
            start = performance.now();

        console.log('Start creating records');

        me.data = data;

        console.log(`Record creation total time: ${Math.round(performance.now() - start)}ms`)
    }

    /**
     * @param {Number} amountRows
     * @param {Number} amountColumns
     * @returns {Object[]}
     */
    generateData(amountRows, amountColumns) {
        console.log('Start creating data', {amountRows, amountColumns});

        let me               = this,
            start            = performance.now(),
            amountFirstnames = me.firstnames.length,
            amountLastnames  = me.lastnames.length,
            records          = [],
            row              = 0,
            column, record;

        for (; row < amountRows; row++) {
            column = 7;
            record = {
                id       : row + 1,
                counter  : Math.round(Math.random() * 100),
                firstname: me.firstnames[Math.floor(Math.random() * amountFirstnames)],
                lastname : me.lastnames[ Math.floor(Math.random() * amountLastnames)],
                progress : Math.round(Math.random() * 100)
            };

            for (; column <= amountColumns; column++) {
                record['number' + column] = Math.round(Math.random() * 10000)
            }

            records.push(record)
        }

        console.log(`Data creation total time: ${Math.round(performance.now() - start)}ms`);

        return records
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainStore));


/***/ }),

/***/ "./examples/grid/bigData/app.mjs":
/*!***************************************!*\
  !*** ./examples/grid/bigData/app.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/grid/bigData/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.grid.bigData'
});


/***/ }),

/***/ "./src/component/Label.mjs":
/*!*********************************!*\
  !*** ./src/component/Label.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a label with a text
 * @class Neo.component.Label
 * @extends Neo.component.Base
 */
class Label extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Label'
         * @protected
         */
        className: 'Neo.component.Label',
        /**
         * @member {String} ntype='label'
         * @protected
         */
        ntype: 'label',
        /**
         * @member {String[]} baseCls=['neo-label']
         */
        baseCls: ['neo-label'],
        /**
         * @member {String} tag='label'
         * @protected
         * @reactive
         */
        tag: 'label'
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Label));


/***/ }),

/***/ "./src/container/Viewport.mjs":
/*!************************************!*\
  !*** ./src/container/Viewport.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Neo.container.Viewport
 * @extends Neo.container.Base
 */
class Viewport extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Viewport'
         * @protected
         */
        className: 'Neo.container.Viewport',
        /**
         * @member {String} ntype='viewport'
         * @protected
         */
        ntype: 'viewport',
        /**
         * true applies 'neo-body-viewport' to the document.body
         * @member {Boolean} applyBodyCls=true
         */
        applyBodyCls: true,
        /**
         * Assuming that a Viewport is the top level view of your app, and you want to mount it right away.
         * Could be without any items. Use false otherwise.
         * @member {Boolean} autoMount=true
         */
        autoMount: true,
        /**
         * @member {String[]} baseCls=['neo-viewport']
         */
        baseCls: ['neo-viewport'],
        /**
         * true applies a main.addon.ResizeObserver and fires a custom resize event
         * which other instances can subscribe to.
         * @member {Boolean} monitorSize_=false
         * @reactive
         */
        monitorSize_: false
    }

    /**
     * Triggered after the mounted config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMounted(value, oldValue) {
        super.afterSetMounted(value, oldValue);

        let me = this;

        if (value && me.monitorSize) {
            me.addDomListeners([{resize: me.onDomResize, scope: me}])
        }
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        let {appName, windowId} = this;

        this.applyBodyCls && Neo.main.DomAccess.applyBodyCls({
            appName,
            cls: ['neo-body-viewport'],
            windowId
        })
    }

    /**
     * @param {Object} data
     */
    onDomResize(data) {
        this.fire('resize', data)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/selection/grid/ColumnModel.mjs":
/*!********************************************!*\
  !*** ./src/selection/grid/ColumnModel.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _BaseModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseModel.mjs */ "./src/selection/grid/BaseModel.mjs");


/**
 * @class Neo.selection.grid.ColumnModel
 * @extends Neo.selection.grid.BaseModel
 */
class ColumnModel extends _BaseModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.selection.grid.ColumnModel'
         * @protected
         */
        className: 'Neo.selection.grid.ColumnModel',
        /**
         * @member {String} ntype='selection-grid-columnmodel'
         * @protected
         */
        ntype: 'selection-grid-columnmodel',
        /**
         * @member {String} cls='neo-selection-columnmodel'
         * @protected
         */
        cls: 'neo-selection-columnmodel'
    }

    /**
     *
     */
    addDomListener() {
        let me = this;

        me.view.parent.on('cellClick', me.onCellClick, me)
    }

    /**
     * @param args
     */
    destroy(...args) {
        let me = this;

        me.view.parent.un('cellClick', me.onCellClick, me);

        super.destroy(...args)
    }

    /**
     * @returns {Boolean}
     */
    hasSelection() {
        return this.selectedColumns.length > 0
    }

    /**
     * @param {Object} data
     */
    onCellClick(data) {
        let me        = this,
            {view}    = me,
            cellId    = data.data.currentTarget,
            dataField = cellId && view.getDataField(cellId);

        if (dataField) {
            me.selectedColumns = me.isSelectedColumn(dataField) ? [] : [dataField];
            view.createViewData()
        }
    }

    /**
     * @param {Object} data
     */
    onKeyDownLeft(data) {
        !this.hasEditorFocus(data) && this.onNavKeyColumn(-1)
    }

    /**
     * @param {Object} data
     */
    onKeyDownRight(data) {
        !this.hasEditorFocus(data) && this.onNavKeyColumn(1)
    }

    /**
     * @param {Number} step
     */
    onNavKeyColumn(step) {
        let me                 = this,
            {dataFields, view} = me,
            currentColumn, currentIndex, index;

        if (me.hasSelection()) {
            currentColumn = me.selectedColumns[0]
        } else {
            currentColumn = dataFields[0]
        }

        currentIndex = dataFields.indexOf(currentColumn);
        index        = (currentIndex + step) % dataFields.length;

        while (index < 0) {
            index += dataFields.length
        }

        me.selectedColumns = [dataFields[index]];

        view.createViewData();

        view.parent.scrollByColumns(currentIndex, step)
    }

    /**
     * @param {Neo.component.Base} component
     */
    register(component) {
        super.register(component);

        let {id, view} = this;

        view.keys?._keys.push(
            {fn: 'onKeyDownLeft',  key: 'Left',  scope: id},
            {fn: 'onKeyDownRight', key: 'Right', scope: id}
        )
    }

    /**
     *
     */
    unregister() {
        let me         = this,
            {id, view} = me;

        me.selectedColumns = [];
        me.view.createViewData();

        view.keys?.removeKeys([
            {fn: 'onKeyDownLeft',  key: 'Left',  scope: id},
            {fn: 'onKeyDownRight', key: 'Right', scope: id}
        ]);

        super.unregister()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(ColumnModel));


/***/ }),

/***/ "./src/selection/grid/_export.mjs":
/*!****************************************!*\
  !*** ./src/selection/grid/_export.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CellColumnModel: () => (/* reexport safe */ _CellColumnModel_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   CellColumnRowModel: () => (/* reexport safe */ _CellColumnRowModel_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   CellModel: () => (/* reexport safe */ _CellModel_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   CellRowModel: () => (/* reexport safe */ _CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   ColumnModel: () => (/* reexport safe */ _ColumnModel_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   RowModel: () => (/* reexport safe */ _RowModel_mjs__WEBPACK_IMPORTED_MODULE_5__["default"])
/* harmony export */ });
/* harmony import */ var _CellColumnModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CellColumnModel.mjs */ "./src/selection/grid/CellColumnModel.mjs");
/* harmony import */ var _CellColumnRowModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CellColumnRowModel.mjs */ "./src/selection/grid/CellColumnRowModel.mjs");
/* harmony import */ var _CellModel_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CellModel.mjs */ "./src/selection/grid/CellModel.mjs");
/* harmony import */ var _CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CellRowModel.mjs */ "./src/selection/grid/CellRowModel.mjs");
/* harmony import */ var _ColumnModel_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ColumnModel.mjs */ "./src/selection/grid/ColumnModel.mjs");
/* harmony import */ var _RowModel_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RowModel.mjs */ "./src/selection/grid/RowModel.mjs");










/***/ }),

/***/ "./src/toolbar/Base.mjs":
/*!******************************!*\
  !*** ./src/toolbar/Base.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _component_Label_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/Label.mjs */ "./src/component/Label.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");






/**
 * @class Neo.toolbar.Base
 * @extends Neo.container.Base
 */
class Toolbar extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    /**
     * Valid values for dock
     * @member {String[]} dockPositions=['top','right','bottom','left', null]
     * @static
     */
    static dockPositions = ['top', 'right', 'bottom', 'left', null]

    static config = {
        /**
         * @member {String} className='Neo.toolbar.Base'
         * @protected
         */
        className: 'Neo.toolbar.Base',
        /**
         * @member {String} ntype='toolbar'
         * @protected
         */
        ntype: 'toolbar',
        /**
         * @member {String[]} baseCls=['neo-toolbar']
         */
        baseCls: ['neo-toolbar'],
        /**
         * @member {String|null} dock_=null
         * @reactive
         */
        dock_: null,
        /**
         * @member {Object} itemDefaults={ntype:'button'}
         * @reactive
         */
        itemDefaults: {
            ntype: 'button'
        },
        /**
         * @member {Object} layout={ntype:'flexbox',align:'center',direction: 'row', pack:'start'}
         * @reactive
         */
        layout: {
            ntype    : 'flexbox',
            align    : 'center',
            direction: 'row',
            pack     : 'start'
        },
        /**
         * @member {Boolean} sortable_=false
         * @reactive
         */
        sortable_: false,
        /**
         * @member {Neo.draggable.toolbar.SortZone|null} sortZone=null
         */
        sortZone: null,
        /**
         * @member {Object} sortZoneConfig=null
         */
        sortZoneConfig: null
    }

    /**
     * Triggered after the appName config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetAppName(value, oldValue) {
        super.afterSetAppName(value, oldValue);

        if (this.sortZone) {
            this.sortZone.appName = value
        }
    }

    /**
     * Triggered after the dock config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetDock(value, oldValue) {
        if (!value && !oldValue) {
            return
        }

        let me            = this,
            {cls}         = me,
            dockPositions = me.getStaticConfig('dockPositions'),
            layoutConfig  = me.getLayoutConfig();

        dockPositions.forEach(key => {
            key !== null && _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__["default"].toggle(cls, 'neo-dock-' + key, key === value)
        });

        if (!me.layout) {
            layoutConfig.ntype = 'flexbox';
            me.set({cls, layout: layoutConfig})
        } else {
            me.layout.set(layoutConfig);
            me.cls = cls;
        }
    }

    /**
     * Triggered after the sortable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetSortable(value, oldValue) {
        let me = this;

        if (value && !me.sortZone) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_draggable_DragZone_mjs"), __webpack_require__.e("vendors-src_draggable_toolbar_SortZone_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ../draggable/toolbar/SortZone.mjs */ "./src/draggable/toolbar/SortZone.mjs")).then(module => {
                me.sortZone = Neo.create({
                    module             : module.default,
                    appName            : me.appName,
                    boundaryContainerId: me.id,
                    owner              : me,
                    windowId           : me.windowId,
                    ...me.sortZoneConfig
                })
            })
        }
    }

    /**
     * Triggered after the windowId config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetWindowId(value, oldValue) {
        super.afterSetWindowId(value, oldValue);

        if (this.sortZone) {
            this.sortZone.windowId = value
        }
    }

    /**
     * Checks if the new dock position matches a value of the static dockPositions config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetDock(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'dock', 'dockPositions')
    }

    /**
     *
     */
    createItems() {
        let items = this._items;

        if (Array.isArray(items)) {
            this._items = items.map(item => this.replaceSpacer(item))
        }

        return super.createItems()
    }

    /**
     * Creates a layout config depending on this.dock
     * @returns {Object} layoutConfig
     */
    getLayoutConfig() {
        let me = this,
            layoutConfig;

        if (me.dock) {
            switch (me.dock) {
                case 'bottom':
                case 'top':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'row',
                        pack     : 'start'
                    };
                    break
                case 'left':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column-reverse',
                        pack     : 'start'
                    };
                    break
                case 'right':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column',
                        pack     : 'start'
                    };
                    break
            }
        }

        return layoutConfig || me.layout
    }

    /**
     * Inserts an item or array of items at a specific index
     * @param {Number} index
     * @param {Array|Object} item
     * @param {Boolean} [silent=false]
     * @returns {Neo.component.Base|Neo.component.Base[]}
     */
    insert(index, item, silent=false) {
        if (Array.isArray(item)) {
            item = item.map(item => this.replaceSpacer(item))
        } else {
            item = this.replaceSpacer(item)
        }

        return super.insert(index, item, silent)
    }

    /**
     * @param {Array|Object|String} item
     * @returns {Array|Object}
     */
    replaceSpacer(item) {
        return item === '->' ? {module: _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"], flex: 1} : item
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Toolbar));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,