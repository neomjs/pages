"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_layout_form_app_mjs"],{

/***/ "./examples/layout/form/MainContainer.mjs":
/*!************************************************!*\
  !*** ./examples/layout/form/MainContainer.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/form/Container.mjs */ "./src/form/Container.mjs");
/* harmony import */ var _src_form_Fieldset_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/form/Fieldset.mjs */ "./src/form/Fieldset.mjs");
/* harmony import */ var _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/form/field/Text.mjs */ "./src/form/field/Text.mjs");
/* harmony import */ var _src_layout_Form_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/layout/Form.mjs */ "./src/layout/Form.mjs");






/**
 * @class Neo.examples.layout.form.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className           : 'Neo.examples.layout.form.MainContainer',
        autoMount           : true,
        configItemLabelWidth: 160,
        layout              : {ntype: 'hbox', align: 'stretch'}
    }

    createConfigurationComponents() {
        let me = this;

        return [{
            ntype: 'component',
            html : 'On the left you see' +
                '<ul>Form > layout-form' +
                '<li>textfield' +
                '<li>textfield' +
                '<li>Fieldset inside the form with another > layout-form' +
                '<ul>' +
                '<li>textfield' +
                '<li>textfield' +
                '</ul></ul>'
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'gap (row column)',
            listeners: {
                change: {
                    fn: function (data) {
                        const comp = this.exampleComponent;

                        comp.layout.gap = data.value;
                        comp.down('fieldset').layout.gap = data.value;
                    },
                    scope: this
                }
            },
            value    : '0 .5rem'
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'Textfield 01 Label',
            listeners: {change: me.updateLabelFromTextField.bind(me, 1)},
            value    : 'This is a wide label inside Form'
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'Textfield 02 Label',
            listeners: {change: me.updateLabelFromTextField.bind(me, 2)},
            value    : 'Small label'
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'Textfield 03 Label',
            listeners: {change: me.updateLabelFromTextField.bind(me, 3)},
            value    : 'I am inside a fieldset'
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'Textfield 04 Label',
            listeners: {change: me.updateLabelFromTextField.bind(me, 4)},
            value    : 'Fieldset with layout-form'
        }]
    }

    createExampleComponent() {
        return Neo.create(_src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_1__["default"], {
            layout      : {
                ntype: 'layout-form',
                gap  : '0 .5rem'
            },
            itemDefaults: {
                ntype    : 'textfield',
                clearable: true,
                value    : 'Layout Demo'
            },
            items       : [{
                labelText: 'This is a wide Label inside Form',
                name     : 1
            }, {
                labelText: 'Small Label',
                name     : 2
            }, {
                module      : _src_form_Fieldset_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                title       : 'Fieldset with Layout',
                layout      : {
                    ntype: 'layout-form',
                    gap  : '0 .5rem'
                },
                itemDefaults: {
                    ntype    : 'textfield',
                    clearable: true,
                    value    : 'Layout Demo'
                },
                items       : [{
                    labelText: 'I am inside a fieldset',
                    name     : 3
                }, {
                    labelText: 'Fieldset with layout-form',
                    name     : 4
                }]
            }]
        })
    }

    /**
     * Update the textfield labelText, based on index
     * @param {Number} index
     * @param {Object} data
     */
    updateLabelFromTextField(index, data) {
        const comp      = this.exampleComponent,
              textfield = comp.down({ntype: 'textfield', name: index});

        textfield.labelText = data.value
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/layout/form/app.mjs":
/*!**************************************!*\
  !*** ./examples/layout/form/app.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/layout/form/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.layout.form'
});


/***/ }),

/***/ "./src/component/Legend.mjs":
/*!**********************************!*\
  !*** ./src/component/Legend.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a legend with a text.
 * Used inside form.Fieldset
 * @class Neo.component.Legend
 * @extends Neo.component.Base
 */
class Legend extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Legend'
         * @protected
         */
        className: 'Neo.component.Legend',
        /**
         * @member {String} ntype='legend'
         * @protected
         */
        ntype: 'legend',
        /**
         * @member {String[]} baseCls=['neo-legend']
         */
        baseCls: ['neo-legend'],
        /**
         * @member {String} iconCls_='far fa-check'
         */
        iconCls_: 'far fa-check',
        /**
         * @member {String} text=''
         */
        text: '',
        /**
         * @member {Boolean} useIcon_=true
         */
        useIcon_: true,
        /**
         * @member {Object} _vdom
         */
        _vdom:
        {tag: 'legend', cn:[
            {vtype: 'text'},
            {vtype: 'text'}
        ]}
    }

    /**
     * Triggered after the iconCls config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconCls(value, oldValue) {
        this.vdom.cn[0].html = `<i class="neo-legend-icon ${value}"></i>`;
        this.update()
    }

    /**
     * Triggered after the text config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetText(value, oldValue) {
        this.vdom.cn[1].text = value;
        this.update()
    }

    /**
     * Triggered after the useIcon config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetUseIcon(value, oldValue) {
        this.vdom.cn[0].removeDom = !value;
        this.update()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Legend));


/***/ }),

/***/ "./src/form/Fieldset.mjs":
/*!*******************************!*\
  !*** ./src/form/Fieldset.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../form/Container.mjs */ "./src/form/Container.mjs");
/* harmony import */ var _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Legend.mjs */ "./src/component/Legend.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");




/**
 * @class Neo.form.Fieldset
 * @extends Neo.form.Container
 */
class Fieldset extends _form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.Fieldset'
         * @protected
         */
        className: 'Neo.form.Fieldset',
        /**
         * @member {String} ntype='fieldset'
         * @protected
         */
        ntype: 'fieldset',
        /**
         * @member {String[]} baseCls=['neo-fieldset'],
         */
        baseCls: ['neo-fieldset'],
        /**
         * @member {Boolean} collapsed_=false,
         */
        collapsed_: false,
        /**
         * @member {Boolean} collapsible_=true,
         */
        collapsible_: true,
        /**
         * @member {Boolean} disableItemsOnCollapse_=true,
         */
        disableItemsOnCollapse_: true,
        /**
         * @member {Boolean} hasLabelClickListener=false,
         * @protected
         */
        hasLabelClickListener: false,
        /**
         * @member {String} iconClsChecked_='far fa-check'
         */
        iconClsChecked_: 'far fa-check',
        /**
         * @member {String} iconClsUnchecked_='far fa-square'
         */
        iconClsUnchecked_: 'far fa-square',
        /**
         * Internally stores the ids of disabled items when collapsing the fieldset
         * and re-applies keeps the disabled state when expanding.
         * @member {String[]|null} itemsDisabledMap=null
         * @protected
         */
        itemsDisabledMap: null,
        /**
         * @member {Neo.component.Legend|null} legend=null
         */
        legend: null,
        /**
         * @member {Object|null} legendConfig=null
         */
        legendConfig: null,
        /**
         * @member {String} title_=''
         */
        title_: '',
        /**
         * @member {Object} vdom={tag:'fieldset',cn:[]}
         */
        vdom:
        {tag: 'fieldset', cn: []}
    }

    /**
     * Triggered after the collapsed config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetCollapsed(value, oldValue) {
        let me = this;

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][value ? 'add' : 'remove'](me._cls, 'neo-collapsed');

        if (oldValue !== undefined) {
            me.items.forEach((item, index) => {
                if (index === 0 && item instanceof _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    item.iconCls = value ? me.iconClsUnchecked : me.iconClsChecked
                } else {
                    if (me.disableItemsOnCollapse) {
                        me.itemsDisabledMap = me.itemsDisabledMap || [];

                        if (value) {
                            if (item.disabled) {
                                me.itemsDisabledMap.push(item.id)
                            } else {
                                item._disabled = true // silent update
                            }
                        } else {
                            if (!me.itemsDisabledMap.includes(item.id)) {
                                item._disabled = false // silent update
                            }
                        }
                    }

                    item.vdom.removeDom = value
                }
            });

            if (!value) {
                // reset the disabled items map when expanding
                me.itemsDisabledMap = []
            }
        }

        me.update()
    }

    /**
     * Triggered after the collapsible config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetCollapsible(value, oldValue) {
        let me            = this,
            {cls, legend} = me;

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][value ? 'add' : 'remove'](cls, 'neo-collapsible');
        me.cls = cls;

        if (legend) {
            legend.useIcon = value;
        }

        if (value && !me.hasLabelClickListener) {
            me.hasLabelClickListener = true;

            me.addDomListeners({
                click   : me.onLegendClick,
                delegate: 'neo-legend'
            })
        }
    }

    /**
     * Triggered after the iconClsChecked config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconClsChecked(value, oldValue) {
        if (oldValue !== undefined) {
            this.updateLegend()
        }
    }

    /**
     * Triggered after the iconClsUnchecked config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconClsUnchecked(value, oldValue) {
        if (oldValue !== undefined) {
            this.updateLegend()
        }
    }

    /**
     * Triggered after the title config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetTitle(value, oldValue) {
        this.updateLegend()
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        this.collapsed && this.afterSetCollapsed(true, false)
    }

    /**
     * @param {Object} data
     */
    onLegendClick(data) {
        let me = this;

        if (me.collapsible) {
            me.collapsed = !me.collapsed
        }
    }

    /**
     *
     */
    updateLegend() {
        let me              = this,
            iconCls         = me.collapsed ? me.iconClsUnchecked : me.iconClsChecked,
            {legend, title} = me;

        if (iconCls === '' && title === '') {
            if (legend) {
                legend.vdom.reomveDom = true;
            }
        } else {
            if (legend) {
                me.updateDepth = 2;

                legend.setSilent({
                    iconCls,
                    text: title
                });

                delete legend.vdom.reomveDom
            } else {
                me.legend = me.insert(0, {
                    module: _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                    iconCls,
                    text  : title,
                    ...me.legendConfig
                })
            }
        }

        me.update()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Fieldset));


/***/ }),

/***/ "./src/layout/Form.mjs":
/*!*****************************!*\
  !*** ./src/layout/Form.mjs ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/layout/Base.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");



/**
 * @class Neo.layout.Form
 * @extends Neo.layout.Base
 */
class Form extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.layout.Form'
         * @protected
         */
        className: 'Neo.layout.Form',
        /**
         * @member {String} ntype='layout-form'
         * @protected
         */
        ntype: 'layout-form',
        /**
         * @member {String|null} containerCls='neo-layout-fit'
         * @protected
         */
        containerCls: 'neo-layout-form',
        /**
         * flex css allows gap. This adds it to the component style
         * @member {String} gap_=null
         */
        gap_: null
    }

    /**
     * Updates the Container style to add a gap to display:flex
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetGap(value, oldValue) {
        if (!value && !oldValue) return;

        let {container}    = this,
            {wrapperStyle} = container;

        wrapperStyle.gap = value;

        container.wrapperStyle = wrapperStyle
    }

    /**
     * Applies the flex value to an item of the container this layout is bound to
     * @param {Neo.component.Base} item
     * @param {Number} index
     */
    applyChildAttributes(item, index) {
        if (!item.ignoreLayout) {
            if (item.ntype === 'fieldset') {
                item.wrapperCls = _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].union(item.wrapperCls, 'neo-layout-form-subfieldset')
            } else if (child.ntype === 'legend') {
                item.wrapperCls = _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].union(item.wrapperCls, 'neo-layout-form-legend')
            } else {
                item.wrapperCls = _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].union(item.wrapperCls, 'neo-layout-form-item')
            }
        }
    }

    /**
     * Removes all CSS rules from an container item this layout is bound to.
     * Gets called when switching to a different layout.
     * @param {Neo.component.Base} item
     * @param {Number} index
     * @protected
     */
    removeChildAttributes(item, index) {
        let style = item.wrapperStyle || {};

        style.flex = item.flex || null;
        item.wrapperStyle = style
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Form));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,