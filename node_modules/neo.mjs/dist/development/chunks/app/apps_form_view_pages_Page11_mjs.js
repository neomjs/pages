"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["apps_form_view_pages_Page11_mjs"],{

/***/ "./apps/form/view/FormPageContainer.mjs":
/*!**********************************************!*\
  !*** ./apps/form/view/FormPageContainer.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/form/Container.mjs */ "./src/form/Container.mjs");


/**
 * @class Form.view.FormPageContainer
 * @extends Neo.form.Container
 */
class FormPageContainer extends _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Form.view.FormPageContainer'
         * @protected
         */
        className: 'Form.view.FormPageContainer',
        /**
         * @member {Object} itemDefaults
         */
        itemDefaults: {
            style: {maxWidth: '300px'}
        },
        /**
         * @member {Object} layout={ntype:'vbox'}
         */
        layout: {ntype: 'vbox'},
        /**
         * @member {Object} style={overflow:'auto'}
         */
        style: {overflow: 'auto'},
        /**
         * @member {String} tag='div'
         */
        tag: 'div' // using a div instead of a form tag
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(FormPageContainer));


/***/ }),

/***/ "./apps/form/view/pages/Page11.mjs":
/*!*****************************************!*\
  !*** ./apps/form/view/pages/Page11.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_form_field_Country_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/form/field/Country.mjs */ "./src/form/field/Country.mjs");
/* harmony import */ var _FormPageContainer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FormPageContainer.mjs */ "./apps/form/view/FormPageContainer.mjs");
/* harmony import */ var _src_form_field_ZipCode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/form/field/ZipCode.mjs */ "./src/form/field/ZipCode.mjs");




/**
 * @class Form.view.pages.Page11
 * @extends Form.view.FormPageContainer
 */
class Page11 extends _FormPageContainer_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Form.view.pages.Page11'
         * @protected
         */
        className: 'Form.view.pages.Page11',
        /**
         * @member {Object} itemDefaults
         */
        itemDefaults: {
            itemDefaults: {
                flex : 1,
                style: {maxWidth: '300px'}
            }
        },
        /**
         * @member {Object[]} items
         */
        items: [{
            ntype : 'container',
            layout: {ntype: 'hbox'},

            items : [{
                module        : _src_form_field_Country_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                editable      : false,
                forceSelection: true,
                labelText     : 'Country',
                name          : 'page11.countryfield1',
                reference     : 'country1',
                value         : 'DE',

                store: {
                    data: [
                        {id: 'DE',     name: 'Germany'},
                        {id: 'Others', name: 'Others'}
                    ]
                }
            }, {
                module      : _src_form_field_ZipCode_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                countryField: 'country1',
                labelText   : 'Munich',
                name        : 'page11.zipcodefield1',
                required    : true,
                style       : {marginLeft: '10px', maxWidth: '300px'},
                value       : '80796'
            }]
        }, {
            ntype : 'container',
            layout: {ntype: 'hbox', align: 'stretch'},

            items: [{
                module   : _src_form_field_ZipCode_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                labelText: 'Munich',
                name     : 'page11.zipcodefield2',
                reference: 'zipcodefield2',
                required : true,
                value    : '80796'
            }, {
                module        : _src_form_field_Country_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                editable      : false,
                forceSelection: true,
                labelText     : 'Country',
                name          : 'page11.countryfield2',
                reference     : 'country2',
                style         : {marginLeft: '10px', maxWidth: '300px'},
                value         : 'DE',
                zipCodeField  : 'zipcodefield2',

                store: {
                    data: [
                        {id: 'DE',     name: 'Germany'},
                        {id: 'Others', name: 'Others'}
                    ]
                }
            }]
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Page11));


/***/ }),

/***/ "./src/form/field/Country.mjs":
/*!************************************!*\
  !*** ./src/form/field/Country.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ComboBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ComboBox.mjs */ "./src/form/field/ComboBox.mjs");


/**
 * @class Neo.form.field.Country
 * @extends Neo.form.field.ComboBox
 */
class Country extends _ComboBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Country'
         * @protected
         */
        className: 'Neo.form.field.Country',
        /**
         * @member {String} ntype='countryfield'
         * @protected
         */
        ntype: 'countryfield',
        /**
         * You can either pass a field instance or a field reference
         * @member {Neo.form.field.Base|String|null} zipCodeField_=null
         */
        zipCodeField_: null
    }

    /**
     * Triggered after the zipCodeField config got changed
     * @param {Neo.form.field.Base|null} value
     * @param {Neo.form.field.Base|null} oldValue
     * @protected
     */
    afterSetZipCodeField(value, oldValue) {
        if (value && value instanceof Neo.form.field.Base) {
            value.countryField = this
        }
    }

    /**
     * Triggered before the zipCodeField config gets changed
     * @param {Neo.form.field.Base|String|null} value
     * @param {Neo.form.field.Base|String|null} oldValue
     * @returns {Neo.form.field.Base|null}
     * @protected
     */
    beforeSetZipCodeField(value, oldValue) {
        let me = this;

        if (Neo.isString(value)) {
            return me.up().getReference(value)
        }

        return value
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Country));


/***/ }),

/***/ "./src/form/field/ZipCode.mjs":
/*!************************************!*\
  !*** ./src/form/field/ZipCode.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * An extended form.field.Text which uses an input pattern to limit the amount of character which users can enter.
 * The first version will only support numbers. Feel free to open feature requests.
 * @class Neo.form.field.ZipCode
 * @extends Neo.form.field.Text
 */
class ZipCode extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * @member {Object} countryCodes
     * @protected
     * @static
     */
    static countryCodes = {
        AT: /^\d{4}$/,
        CH: /^\d{4}$/,
        DE: /^(?!01000|99999)(0[1-9]\d{3}|[1-9]\d{4})$/
    }

    static config = {
        /**
         * @member {String} className='Neo.form.field.ZipCode'
         * @protected
         */
        className: 'Neo.form.field.ZipCode',
        /**
         * @member {String} ntype='zipcodefield'
         * @protected
         */
        ntype: 'zipcodefield',
        /**
         * @member {String} countryCode_=null
         */
        countryCode_: null,
        /**
         * You can either pass a field instance or a field reference
         * @member {Neo.form.field.Base|String|null} countryField_=null
         */
        countryField_: null,
        /**
         * The data.Model field inside the related country field which provides the country code (e.g. 'DE')
         * @member {String} countryKeyProperty='id'
         */
        countryKeyProperty: "id",
        /**
         * data passes inputPattern, maxLength, minLength & valueLength properties
         * @member {Function} errorTextInputPattern=data=>'Not a valid zip code'
         */
        errorTextInputPattern: (data) => 'Not a valid zip code'
    }

    /**
     * Triggered after the countryCode config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetCountryCode(value, oldValue) {
        let me = this;

        me.inputPattern = ZipCode.countryCodes[value] || null;

        oldValue !== undefined && me.value && !me.clean && me.validate(false)
    }

    /**
     * Triggered after the countryField config got changed
     * @param {Neo.form.field.Base|null} value
     * @param {Neo.form.field.Base|null} oldValue
     * @protected
     */
    afterSetCountryField(value, oldValue) {
        if (value) {
            let me = this;

            value.on({
                change: me.onCountryFieldChange,
                scope : me
            });

            value.value && me.onCountryFieldChange({
                component: value,
                record   : value.record,
                value    : value.value
            })
        }
    }

    /**
     * Triggered before the countryField config gets changed
     * @param {Neo.form.field.Base|String|null} value
     * @param {Neo.form.field.Base|String|null} oldValue
     * @returns {Neo.form.field.Base|null}
     * @protected
     */
    beforeSetCountryField(value, oldValue) {
        let me = this;

        if (Neo.isString(value)) {
            return me.up().getReference(value)
        }

        return value
    }

    /**
     * @param {Object} data
     */
    onCountryFieldChange(data) {
        this.countryCode = data.record?.[this.countryKeyProperty] || null
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(ZipCode));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,