"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-apps_email_app_mjs-src_toolbar_Base_mjs"],{

/***/ "./apps/email/app.mjs":
/*!****************************!*\
  !*** ./apps/email/app.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _view_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view/Viewport.mjs */ "./apps/email/view/Viewport.mjs");


const onStart = () => Neo.app({
    mainView: _view_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Email'
});


/***/ }),

/***/ "./apps/email/model/Email.mjs":
/*!************************************!*\
  !*** ./apps/email/model/Email.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Email.model.Email
 * @extends Neo.data.Model
 */
class Email extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Email.model.Email'
         * @protected
         */
        className: 'Email.model.Email',
        /**
         * @member {Object[]} fields
         */
        fields: [{
            name: 'id',
            type: 'Int'
        }, {
            name: 'content',
            type: 'String'
        }, {
            name: 'dateSent',
            type: 'String'
        }, {
            name: 'recipients',
            type: 'Array'
        }, {
            name: 'sender',
            type: 'String'
        }, {
            name: 'title',
            type: 'String'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Email));


/***/ }),

/***/ "./apps/email/store/Emails.mjs":
/*!*************************************!*\
  !*** ./apps/email/store/Emails.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _model_Email_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/Email.mjs */ "./apps/email/model/Email.mjs");
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/data/Store.mjs */ "./src/data/Store.mjs");



/**
 * @class Email.store.Emails
 * @extends Neo.data.Store
 */
class Emails extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Email.store.Emails'
         * @protected
         */
        className: 'Email.store.Emails',
        /**
         * @member {Neo.data.Model} model=Email
         */
        model: _model_Email_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
        /**
         * @member {Object[]} data
         */
        data: [
            {id: 1, sender: 'John Doe', title: 'Hello World!', content: 'This is the first email.', dateSent: '2025-07-15T10:00:00Z'},
            {id: 2, sender: 'Jane Smith', title: 'Re: Project Update', content: 'Here is the project update you requested.', dateSent: '2025-07-15T11:30:00Z'},
            {id: 3, sender: 'Peter Jones', title: 'Lunch tomorrow?', content: 'Are we still on for lunch tomorrow at 12:30?', dateSent: '2025-07-15T12:15:00Z'},
            {id: 4, sender: 'Mary Williams', title: 'Your order has shipped', content: 'Your order #12345 has shipped and will arrive in 3-5 business days.', dateSent: '2025-07-14T15:45:00Z'},
            {id: 5, sender: 'David Brown', title: 'Quick question', content: 'I have a quick question about the new feature.', dateSent: '2025-07-14T09:20:00Z'}
        ]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Emails));


/***/ }),

/***/ "./apps/email/view/ComposeView.mjs":
/*!*****************************************!*\
  !*** ./apps/email/view/ComposeView.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/form/field/Text.mjs */ "./src/form/field/Text.mjs");
/* harmony import */ var _src_form_field_TextArea_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/form/field/TextArea.mjs */ "./src/form/field/TextArea.mjs");
/* harmony import */ var _src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/functional/_export.mjs */ "./src/functional/_export.mjs");





/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_3__.defineComponent)({
    config: {
        className: 'Email.view.ComposeView',
        cls      : ['email-compose-view']
    },
    createVdom({onClose}) {
        const fieldStyle = {
            marginBottom: '10px'
        };

        return {
            cn: [{
                module    : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                id        : 'compose-to',
                labelText : 'To:',
                labelWidth: 80,
                style     : fieldStyle
            }, {
                module    : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                id        : 'compose-subject',
                labelText : 'Subject:',
                labelWidth: 80,
                style     : fieldStyle
            }, {
                module   : _src_form_field_TextArea_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                id       : 'compose-body',
                labelText: 'Body:',
                height   : 200,
                style    : fieldStyle
            }, {
                module : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                handler: onClose,
                id     : 'compose-close-button',
                style  : {alignSelf: 'flex-end'},
                text   : 'Close'
            }]
        }
    }
}));


/***/ }),

/***/ "./apps/email/view/MainView.mjs":
/*!**************************************!*\
  !*** ./apps/email/view/MainView.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _ComposeView_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ComposeView.mjs */ "./apps/email/view/ComposeView.mjs");
/* harmony import */ var _store_Emails_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Emails.mjs */ "./apps/email/store/Emails.mjs");
/* harmony import */ var _src_grid_Container_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/grid/Container.mjs */ "./src/grid/Container.mjs");
/* harmony import */ var _src_selection_grid_RowModel_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/selection/grid/RowModel.mjs */ "./src/selection/grid/RowModel.mjs");
/* harmony import */ var _src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/functional/_export.mjs */ "./src/functional/_export.mjs");







/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_5__.defineComponent)({
    config: {
        className: 'Email.view.MainView',
        cls      : ['email-main-view']
    },
    createVdom() {
        const
            [isComposing,   setIsComposing]   = (0,_src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_5__.useConfig)(false),
            [selectedEmail, setSelectedEmail] = (0,_src_functional_export_mjs__WEBPACK_IMPORTED_MODULE_5__.useConfig)(null);

        const paneStyle = {
            border : '1px solid #c0c0c0',
            margin : '10px',
            padding: '10px'
        };

        const onComposeClick = () => {
            setIsComposing(true)
        };

        const onCloseCompose = () => {
            setIsComposing(false);
        };

        const onSelectionChange = ({records}) => {
            setSelectedEmail(records[0] || null)
        };

        return {
            cn: [{
                style: {...paneStyle, flex: '0 0 200px'},
                cn: [{
                    module : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                    handler: onComposeClick,
                    id     : 'compose-button',
                    text   : 'Compose',
                    style  : {marginBottom: '10px', width: '100%'}
                }, {
                    text : 'Folders'
                }]
            }, {
                style: {...paneStyle, flex: '1 1 600px', padding: '0'},
                cn: [{
                    module      : _src_grid_Container_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                    id          : 'email-grid',
                    store       : _store_Emails_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                    wrapperStyle: {height: '100%', width: '100%'},
                    body: {
                        selectionModel: {
                            module   : _src_selection_grid_RowModel_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
                            listeners: {selectionChange: onSelectionChange}
                        }
                    },
                    columns: [
                        {dataField: 'sender', text: 'Sender', width: 150},
                        {dataField: 'title',  text: 'Title',  flex: 1, minWidth: 200},
                        {
                            cellAlign: 'right',
                            dataField: 'dateSent',
                            renderer : (({value}) => new Date(value).toLocaleDateString()),
                            text     : 'Date',
                            width    : 100
                        }
                    ]
                }]
            }, {
                style: {...paneStyle, flex: '1 1 600px'},
                cn: selectedEmail ? [
                    {tag: 'h2',  text: selectedEmail.title},
                    {tag: 'p',   text: `From: ${selectedEmail.sender}`},
                    {tag: 'div', style: {marginTop: '10px'}, text: selectedEmail.content}
                ] : [{
                    text: 'Select an email to read'
                }]
            }, isComposing && {
                module : _ComposeView_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                id     : 'compose-view',
                onClose: onCloseCompose
            }]
        }
    }
}));


/***/ }),

/***/ "./apps/email/view/Viewport.mjs":
/*!**************************************!*\
  !*** ./apps/email/view/Viewport.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/container/Viewport.mjs */ "./src/container/Viewport.mjs");
/* harmony import */ var _MainView_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MainView.mjs */ "./apps/email/view/MainView.mjs");



/**
 * @class Email.view.Viewport
 * @extends Neo.container.Viewport
 */
class Viewport extends _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Email.view.Viewport'
         * @protected
         */
        className: 'Email.view.Viewport',
        /**
         * @member {Object} layout={ntype:'fit'}
         */
        layout: {ntype: 'fit'},
        /**
         * @member {Object[]} items
         */
        items: [{
            module: _MainView_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/component/Label.mjs":
/*!*********************************!*\
  !*** ./src/component/Label.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a label with a text
 * @class Neo.component.Label
 * @extends Neo.component.Base
 */
class Label extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Label'
         * @protected
         */
        className: 'Neo.component.Label',
        /**
         * @member {String} ntype='label'
         * @protected
         */
        ntype: 'label',
        /**
         * @member {String[]} baseCls=['neo-label']
         */
        baseCls: ['neo-label'],
        /**
         * @member {String} tag='label'
         * @protected
         * @reactive
         */
        tag: 'label'
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Label));


/***/ }),

/***/ "./src/container/Viewport.mjs":
/*!************************************!*\
  !*** ./src/container/Viewport.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Neo.container.Viewport
 * @extends Neo.container.Base
 */
class Viewport extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Viewport'
         * @protected
         */
        className: 'Neo.container.Viewport',
        /**
         * @member {String} ntype='viewport'
         * @protected
         */
        ntype: 'viewport',
        /**
         * true applies 'neo-body-viewport' to the document.body
         * @member {Boolean} applyBodyCls=true
         */
        applyBodyCls: true,
        /**
         * Assuming that a Viewport is the top level view of your app, and you want to mount it right away.
         * Could be without any items. Use false otherwise.
         * @member {Boolean} autoMount=true
         */
        autoMount: true,
        /**
         * @member {String[]} baseCls=['neo-viewport']
         */
        baseCls: ['neo-viewport'],
        /**
         * true applies a main.addon.ResizeObserver and fires a custom resize event
         * which other instances can subscribe to.
         * @member {Boolean} monitorSize_=false
         * @reactive
         */
        monitorSize_: false
    }

    /**
     * Triggered after the mounted config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMounted(value, oldValue) {
        super.afterSetMounted(value, oldValue);

        let me = this;

        if (value && me.monitorSize) {
            me.addDomListeners([{resize: me.onDomResize, scope: me}])
        }
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        let {appName, windowId} = this;

        this.applyBodyCls && Neo.main.DomAccess.applyBodyCls({
            appName,
            cls: ['neo-body-viewport'],
            windowId
        })
    }

    /**
     * @param {Object} data
     */
    onDomResize(data) {
        this.fire('resize', data)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/form/field/TextArea.mjs":
/*!*************************************!*\
  !*** ./src/form/field/TextArea.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 *
 * @class Neo.form.field.TextArea
 * @extends Neo.form.field.Text
 * @abstract
 */
class TextArea extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Valid values for wrap
     * @member {String[]} wrapValues=['hard', 'off', 'soft', null]
     * @protected
     * @static
     */
    static wrapValues = ['hard', 'off', 'soft', null]

    static config = {
        /**
         * @member {String} className='Neo.form.field.TextArea'
         * @protected
         */
        className: 'Neo.form.field.TextArea',
        /**
         * @member {String} ntype='textarea'
         * @protected
         */
        ntype: 'textarea',
        /**
         * Set this to `true` to have the text area grow and shrink to accommodate
         * any height of text. Bounds can be set using the `minHeight` and `maxHeight` settings.
         * @member {Boolean} autoGrow=false
         */
        autoGrow_: false,
        /**
         * @member {String[]} baseCls=['neo-textarea','neo-textfield']
         */
        baseCls: ['neo-textarea', 'neo-textfield'],
        /**
         * True shows a clear trigger in case the field has a non-empty value.
         * @member {Boolean} clearable=false
         * @reactive
         */
        clearable: false,
        /**
         * The visible width of the text control, in average character widths.
         * If it is specified, it must be a positive integer.
         * If it is not specified, the default value is 20.
         * @member {Number|null} cols_=null
         * @reactive
         */
        cols_: null,
        /**
         * @member {String} inputTag_='textarea'
         * @reactive
         */
        inputTag_: 'textarea',
        /**
         * Disabling to set a type for the textarea tag
         * See: inputTag_
         * @member {String|null} inputType=null
         * @protected
         * @reactive
         */
        inputType: null,
        /**
         * Use false to disable the browsers default resizing feature
         * @member {Boolean} resizable_=false
         * @reactive
         */
        resizable_: false,
        /**
         * An integer > 0 or null
         * @member {Number|null} rows_=3
         * @reactive
         */
        rows_: 3,
        /**
         * Indicates how the control wraps text. Possible values are: hard, soft, off
         * If this attribute is not specified, soft is its default value.
         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea
         * @member {String|null} wrap_=null
         * @reactive
         */
        wrap_: null
    }

    /**
     * Triggered after the autoGrow config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetAutoGrow(value, oldValue) {
        let me = this;

        value && me.syncAutoGrowMonitor();

        // Restore any configured height if autoGrow turned off
        if (!value) {
            me.afterSetHeight(me._height)
        }
    }

    /**
     * Triggered after the cols config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetCols(value, oldValue) {
        this.changeInputElKey('cols', value)
    }

    /**
     * Triggered after the inputTag config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetInputTag(value, oldValue) {
        this.changeInputElKey('tag', value)
    }

    /**
     * Triggered after the mounted config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMounted(value, oldValue) {
        super.afterSetMounted(value, oldValue);
        this.syncAutoGrowMonitor()
    }

    /**
     * Triggered after the resizable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetResizable(value, oldValue) {
        let me    = this,
            style = this.getInputEl().style;

        style.resize = value ? null : 'none';
        me.update()
    }

    /**
     * Triggered after the rows config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetRows(value, oldValue) {
        this.changeInputElKey('rows', value)
    }

    /**
     * Triggered after the value config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetValue(value, oldValue) {
        let me      = this,
            inputEl = me.getInputEl();

        if (inputEl) {
            inputEl.text = value
        }

        super.afterSetValue(value, oldValue);

        if (me.autoGrow && me.mounted && me.readOnly) {
            me.timeout(50).then(() => {
                Neo.main.DomAccess.monitorAutoGrowHandler({
                    appName : me.appName,
                    id      : inputEl.id,
                    windowId: me.windowId
                })
            })
        }
    }

    /**
     * Triggered after the wrap config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetWrap(value, oldValue) {
        this.changeInputElKey('wrap', value)
    }

    /**
     * Checks if the new wrap value matches a value of the static wrapValues config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetWrap(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'wrap', 'wrapValues')
    }

    /**
     *
     */
    async syncAutoGrowMonitor() {
        let me = this;

        if (me.mounted && me.autoGrow) {
            // Delegate monitoring of sizes to the main thread.
            Neo.main.DomAccess.monitorAutoGrow({
                appName  : me.appName,
                id       : me.getInputElId(),
                autoGrow : me.autoGrow
            })
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(TextArea));


/***/ }),

/***/ "./src/functional/_export.mjs":
/*!************************************!*\
  !*** ./src/functional/_export.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Component: () => (/* reexport safe */ _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   defineComponent: () => (/* reexport safe */ _defineComponent_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   useConfig: () => (/* reexport safe */ _useConfig_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   useEvent: () => (/* reexport safe */ _useEvent_mjs__WEBPACK_IMPORTED_MODULE_3__["default"])
/* harmony export */ });
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component/Base.mjs */ "./src/functional/component/Base.mjs");
/* harmony import */ var _defineComponent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defineComponent.mjs */ "./src/functional/defineComponent.mjs");
/* harmony import */ var _useConfig_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useConfig.mjs */ "./src/functional/useConfig.mjs");
/* harmony import */ var _useEvent_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useEvent.mjs */ "./src/functional/useEvent.mjs");








/***/ }),

/***/ "./src/functional/defineComponent.mjs":
/*!********************************************!*\
  !*** ./src/functional/defineComponent.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defineComponent: () => (/* binding */ defineComponent)
/* harmony export */ });
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component/Base.mjs */ "./src/functional/component/Base.mjs");


/**
 * Factory function to create a functional component class from a specification object.
 * This enables a "Beginner Mode" for creating components without writing a class,
 * while still providing access to the full class-based feature set.
 *
 * It's important to understand the two ways of managing state:
 *
 * 1.  **Named Configs (Public API):** Defined in the `config` object (e.g., `text_`).
 *     - **Purpose:** Defines the component's public API for external control, similar to props.
 *     - **Use Case:** For data that a parent component will set or change.
 *     - **Features:** Integrates with the full config system (e.g., `afterSetText()` hooks).
 *
 * 2.  **`useConfig()` (Internal State):** Used inside `createVdom` or other methods.
 *     - **Purpose:** Manages private, encapsulated state that is internal to the component.
 *     - **Use Case:** For state that the component manages itself and is not controlled by the parent.
 *     - **Features:** Provides a simple, concise way to handle local reactive state.
 *
 * @param {Object} spec - The specification object for the component.
 * @returns {Neo.functional.component.Base} The generated component class.
 *
 * @example
 * import { defineComponent } from 'neo/functional/defineComponent.mjs';
 * import { useConfig }       from 'neo/functional/useConfig.mjs';
 *
 * const MyComponent = defineComponent({
 *     // 1. Define the Public API via the `config` object.
 *     config: {
 *         className: 'MyApp.MyFunctionalComponent',
 *         ntype    : 'my-functional-component',
 *
 *         // `text_` is a NAMED CONFIG. It's part of the component's public API.
 *         // A parent can create this component with a `text` config.
 *         // It is reactive and will generate `afterSetText()` and `beforeSetText()` hooks.
 *         text_: 'Hello World'
 *     },
 *
 *     // 2. Define the component's logic and VDOM.
 *     createVdom(config) {
 *         // `useConfig` creates ANONYMOUS, INTERNAL STATE.
 *         // The `count` state is private to this component and cannot be set by a parent.
 *         const [count, setCount] = useConfig(0);
 *
 *         return {
 *             tag: 'div',
 *             cn: [{
 *                 tag: 'h1',
 *                 // Access the public, named config via the `config` parameter.
 *                 text: config.text
 *             }, {
 *                 tag: 'p',
 *                 // Access the private, internal state directly.
 *                 text: `You clicked ${count} times`
 *             }, {
 *                 tag: 'button',
 *                 text: 'Click me',
 *                 // The setter from `useConfig` updates the internal state.
 *                 onclick: () => setCount(count + 1)
 *             }]
 *         };
 *     },
 *
 *     // 3. Lifecycle hooks for named configs work automatically.
 *     afterSetText(newValue, oldValue) {
 *         console.log(`Text changed from '${oldValue}' to '${newValue}'`);
 *     }
 * });
 *
 * // The returned MyComponent is a class constructor that can be used with Neo.create()
 * // const instance = Neo.create(MyComponent, {
 * //     text: 'Welcome to Neo.mjs!' // Set the public config on creation.
 * // });
 */
function defineComponent(spec) {
    const configSpec = spec.config;
    delete spec.config;

    if (!configSpec?.className) {
        throw new Error('defineComponent requires a config object with a className.');
    }

    class FunctionalComponent extends _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
        static config = {
            ...configSpec
            // We can add our own configurations here
        }
    }

    // Assign instance methods
    Object.entries(spec).forEach(([key, value]) => {
        FunctionalComponent.prototype[key] = value
    });

    // To support multiple envs (like `devmode`, `dist/esm`, `dist/production` in parallel,
    // we must re-assign FunctionalComponent to the setupClass() output.
    FunctionalComponent = Neo.setupClass(FunctionalComponent);

    return FunctionalComponent
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defineComponent);


/***/ }),

/***/ "./src/functional/useConfig.mjs":
/*!**************************************!*\
  !*** ./src/functional/useConfig.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   useConfig: () => (/* binding */ useConfig)
/* harmony export */ });
/* harmony import */ var _core_Config_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Config.mjs */ "./src/core/Config.mjs");
/* harmony import */ var _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/EffectManager.mjs */ "./src/core/EffectManager.mjs");



const
    hookIndexSymbol = Symbol.for('hookIndex'),
    hooksSymbol     = Symbol.for('hooks');

/**
 * A hook for managing reactive state within a functional component's `createVdom` method.
 * It mirrors the behavior of React's `useState` but is powered by `Neo.core.Config` for reactivity.
 * @param {*} initialValue The initial value for the state.
 * @returns {Array<any>} A tuple containing the current value and a setter function.
 */
function useConfig(initialValue) {
    _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].pause();

    const
        effect    = _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getActiveEffect(),
        component = effect && Neo.getComponent(effect.componentId);

    if (!component) {
        throw new Error('useConfig must be called from within a functional component\'s createVdom method.')
    }

    const currentIndex = component[hookIndexSymbol];

    // Increment the index for the next hook call within the same component render cycle.
    component[hookIndexSymbol]++;

    // If this is the first time this hook is being called for this component, initialize its state.
    if (!component[hooksSymbol][currentIndex]) {
        const config = new _core_Config_mjs__WEBPACK_IMPORTED_MODULE_0__["default"](initialValue);

        const customSetter = (newValue) => {
            if (typeof newValue === 'function') {
                newValue = newValue(config.get())
            }
            config.set(newValue)
        };

        component[hooksSymbol][currentIndex] = [config, customSetter]
    }

    const [config, setter] = component[hooksSymbol][currentIndex];

    _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].resume();

    // Call config.get() to ensure this component's effect tracks this config as a dependency.
    return [config.get(), setter]
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useConfig);


/***/ }),

/***/ "./src/functional/useEvent.mjs":
/*!*************************************!*\
  !*** ./src/functional/useEvent.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   useEvent: () => (/* binding */ useEvent)
/* harmony export */ });
/* harmony import */ var _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/EffectManager.mjs */ "./src/core/EffectManager.mjs");


const pendingDomEventsSymbol = Symbol.for('pendingDomEvents');

/**
 * A hook for registering DOM event listeners within a functional component.
 * Event listeners registered via this hook will be managed by Neo.mjs's
 * delegated DOM event system, ensuring efficient and proper lifecycle handling.
 *
 * @param {String} eventType - The type of DOM event to listen for (e.g., 'click', 'input').
 * @param {Function} handler - The event handler function. It will receive the event data as its argument.
 * @param {String} [delegate] - An optional CSS selector for event delegation. If provided,
 *                               the handler will only fire if the event target matches this selector.
 */
function useEvent(eventType, handler, delegate) {
    const
        activeEffect = _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].getActiveEffect(),
        componentId  = activeEffect?.componentId;

    if (!componentId) {
        throw new Error('useEvent must be called from within a functional component\'s createVdom method.')
    }

    _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].pause();
    const component = Neo.getComponent(componentId);
    _core_EffectManager_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].resume();

    if (!component) {
        throw new Error(`Component with id ${componentId} not found for useEvent hook.`);
    }

    // Ensure pendingDomEventsSymbol exists on the component instance
    component[pendingDomEventsSymbol] ??= [];

    // Add the event listener configuration to the component's pending list
    component[pendingDomEventsSymbol].push({
        [eventType]: handler,
        delegate,
        scope      : component // The component instance itself will be the scope
    })
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useEvent);


/***/ }),

/***/ "./src/toolbar/Base.mjs":
/*!******************************!*\
  !*** ./src/toolbar/Base.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _component_Label_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/Label.mjs */ "./src/component/Label.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");






/**
 * @class Neo.toolbar.Base
 * @extends Neo.container.Base
 */
class Toolbar extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    /**
     * Valid values for dock
     * @member {String[]} dockPositions=['top','right','bottom','left', null]
     * @static
     */
    static dockPositions = ['top', 'right', 'bottom', 'left', null]

    static config = {
        /**
         * @member {String} className='Neo.toolbar.Base'
         * @protected
         */
        className: 'Neo.toolbar.Base',
        /**
         * @member {String} ntype='toolbar'
         * @protected
         */
        ntype: 'toolbar',
        /**
         * @member {String[]} baseCls=['neo-toolbar']
         */
        baseCls: ['neo-toolbar'],
        /**
         * @member {String|null} dock_=null
         * @reactive
         */
        dock_: null,
        /**
         * @member {Object} itemDefaults={ntype:'button'}
         * @reactive
         */
        itemDefaults: {
            ntype: 'button'
        },
        /**
         * @member {Object} layout={ntype:'flexbox',align:'center',direction: 'row', pack:'start'}
         * @reactive
         */
        layout: {
            ntype    : 'flexbox',
            align    : 'center',
            direction: 'row',
            pack     : 'start'
        },
        /**
         * @member {Boolean} sortable_=false
         * @reactive
         */
        sortable_: false,
        /**
         * @member {Neo.draggable.toolbar.SortZone|null} sortZone=null
         */
        sortZone: null,
        /**
         * @member {Object} sortZoneConfig=null
         */
        sortZoneConfig: null
    }

    /**
     * Triggered after the appName config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetAppName(value, oldValue) {
        super.afterSetAppName(value, oldValue);

        if (this.sortZone) {
            this.sortZone.appName = value
        }
    }

    /**
     * Triggered after the dock config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetDock(value, oldValue) {
        if (!value && !oldValue) {
            return
        }

        let me            = this,
            {cls}         = me,
            dockPositions = me.getStaticConfig('dockPositions'),
            layoutConfig  = me.getLayoutConfig();

        dockPositions.forEach(key => {
            key !== null && _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__["default"].toggle(cls, 'neo-dock-' + key, key === value)
        });

        if (!me.layout) {
            layoutConfig.ntype = 'flexbox';
            me.set({cls, layout: layoutConfig})
        } else {
            me.layout.set(layoutConfig);
            me.cls = cls;
        }
    }

    /**
     * Triggered after the sortable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetSortable(value, oldValue) {
        let me = this;

        if (value && !me.sortZone) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_draggable_DragZone_mjs"), __webpack_require__.e("vendors-src_draggable_toolbar_SortZone_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ../draggable/toolbar/SortZone.mjs */ "./src/draggable/toolbar/SortZone.mjs")).then(module => {
                me.sortZone = Neo.create({
                    module             : module.default,
                    appName            : me.appName,
                    boundaryContainerId: me.id,
                    owner              : me,
                    windowId           : me.windowId,
                    ...me.sortZoneConfig
                })
            })
        }
    }

    /**
     * Triggered after the windowId config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetWindowId(value, oldValue) {
        super.afterSetWindowId(value, oldValue);

        if (this.sortZone) {
            this.sortZone.windowId = value
        }
    }

    /**
     * Checks if the new dock position matches a value of the static dockPositions config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetDock(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'dock', 'dockPositions')
    }

    /**
     *
     */
    createItems() {
        let items = this._items;

        if (Array.isArray(items)) {
            this._items = items.map(item => this.replaceSpacer(item))
        }

        return super.createItems()
    }

    /**
     * Creates a layout config depending on this.dock
     * @returns {Object} layoutConfig
     */
    getLayoutConfig() {
        let me = this,
            layoutConfig;

        if (me.dock) {
            switch (me.dock) {
                case 'bottom':
                case 'top':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'row',
                        pack     : 'start'
                    };
                    break
                case 'left':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column-reverse',
                        pack     : 'start'
                    };
                    break
                case 'right':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column',
                        pack     : 'start'
                    };
                    break
            }
        }

        return layoutConfig || me.layout
    }

    /**
     * Inserts an item or array of items at a specific index
     * @param {Number} index
     * @param {Array|Object} item
     * @param {Boolean} [silent=false]
     * @returns {Neo.component.Base|Neo.component.Base[]}
     */
    insert(index, item, silent=false) {
        if (Array.isArray(item)) {
            item = item.map(item => this.replaceSpacer(item))
        } else {
            item = this.replaceSpacer(item)
        }

        return super.insert(index, item, silent)
    }

    /**
     * @param {Array|Object|String} item
     * @returns {Array|Object}
     */
    replaceSpacer(item) {
        return item === '->' ? {module: _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"], flex: 1} : item
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Toolbar));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,