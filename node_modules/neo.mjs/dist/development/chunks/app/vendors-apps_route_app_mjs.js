"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-apps_route_app_mjs"],{

/***/ "./apps/route/app.mjs":
/*!****************************!*\
  !*** ./apps/route/app.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _view_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view/Viewport.mjs */ "./apps/route/view/Viewport.mjs");


const onStart = () => Neo.app({
    mainView: _view_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Route'
});

/***/ }),

/***/ "./apps/route/view/ButtonBar.mjs":
/*!***************************************!*\
  !*** ./apps/route/view/ButtonBar.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");



/**
 * @class Route.view.ButtonBar
 * @extends Neo.container.Base
 */
class ButtonBar extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.ButtonBar'
         * @protected
         */
        className: 'Route.view.ButtonBar',
        baseCls: ['route', 'neo-container'],
        cls: ['route_buttonbar', 'centerPanel'],
        /**
         * @member {Object[]} items
         */
        items: [{
            module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            flex: 'none',
            handler: 'onSwitchButtonCardHome',
            cls: ['route_button', 'neo-button'],
            iconCls: 'fa-solid fa-home',
            reference: 'home_button',
            text: 'Home',
        }, {
            module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            flex: 'none',
            handler: 'onSwitchButtonCardSection1',
            cls: ['route_button', 'neo-button'],
            iconCls: 'fa-solid fa-globe',
            text: 'Section 1'
        }, {
            module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            flex: 'none',
            handler: 'onSwitchButtonCardSection2',
            cls: ['route_button', 'neo-button'],
            iconCls: 'fa-solid fa-globe',
            text: 'Section 2'
        },{
            module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            flex: 'none',
            handler: 'onSwitchButtonAdministration',
            cls: ['route_button', 'neo-button'],
            iconCls: 'fa-solid fa-building-user',
            text: 'Administration',
        }],
        layout: { ntype: 'flexbox', wrap: 'wrap' },

    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(ButtonBar));


/***/ }),

/***/ "./apps/route/view/CenterContainer.mjs":
/*!*********************************************!*\
  !*** ./apps/route/view/CenterContainer.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Route.view.CenterContainer
 * @extends Neo.container.Base
 */
class CenterContainer extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.CenterContainer'
         * @protected
         */
        className: 'Route.view.CenterContainer',
        baseCls: ['route_center', 'neo-container'],

        /**
         * @member {Object[]} items
         */
        items: [
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardContact_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardContact.mjs */ "./apps/route/view/center/CardContact.mjs"))},
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardAdministration_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardAdministration.mjs */ "./apps/route/view/center/CardAdministration.mjs"))},
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardSection1_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardSection1.mjs */ "./apps/route/view/center/CardSection1.mjs"))},
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardSection2_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardSection2.mjs */ "./apps/route/view/center/CardSection2.mjs"))},
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardHome_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardHome.mjs */ "./apps/route/view/center/CardHome.mjs"))},
            {module: () => __webpack_require__.e(/*! import() */ "apps_route_view_center_CardAdministrationDenied_mjs").then(__webpack_require__.bind(__webpack_require__, /*! ./center/CardAdministrationDenied.mjs */ "./apps/route/view/center/CardAdministrationDenied.mjs"))},
        ],

        /**
         * @member {Object} layout={ntype: 'vbox', align: 'stretch'}
         */
        layout: {ntype: 'card', align: 'stretch', activeIndex: 4},
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(CenterContainer));


/***/ }),

/***/ "./apps/route/view/FooterContainer.mjs":
/*!*********************************************!*\
  !*** ./apps/route/view/FooterContainer.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");



/**
 * @class Route.view.FooterContainer
 * @extends Neo.container.Base
 */
class FooterContainer extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.FooterContainer'
         * @protected
         */
        className: 'Route.view.FooterContainer',

        baseCls: ['route_footer', 'neo-container'],

        height: 55,
        /**
         * @member {Object[]} items
         */
        items: [
            {
                module: _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                reference: 'footer-container',
                cls: ['centerPanel'],
                items: [
                    {
                        module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                        flex: 'none',
                        handler: 'onSwitchButtonCardContact',
                        cls: ['route_button', 'neo-button'],
                        text: 'Contact'
                    }
                ],
                layout: { ntype: 'hbox', align: 'stretch' }
            }
        ]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(FooterContainer));


/***/ }),

/***/ "./apps/route/view/HeaderContainer.mjs":
/*!*********************************************!*\
  !*** ./apps/route/view/HeaderContainer.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _src_component_Label_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/component/Label.mjs */ "./src/component/Label.mjs");




/**
 * @class Route.view.HeaderContainer
 * @extends Neo.container.Base
 */
class HeaderContainer extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.HeaderContainer'
         * @protected
         */
        className: 'Route.view.HeaderContainer',
        baseCls: ['route', 'neo-container', 'route_header'],
        height: 242,
        /**
         * @member {Object[]} items
         */
        items: [
            {
                module: _src_component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                reference: 'logo',
                width: 140,
                height: 140,
                cls: ['center'],
                vdom: {
                    tag: 'img',
                    src: 'https://raw.githubusercontent.com/neomjs/pages/main/resources_pub/images/logo_rounded.svg'
                }
            },
            {
                module: _src_component_Label_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                text: 'neo.mjs routes showcase',
                cls: ['headline-caption']
            }
        ],
        layout: { ntype: 'vbox', align: 'stretch' }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(HeaderContainer));


/***/ }),

/***/ "./apps/route/view/MainView.mjs":
/*!**************************************!*\
  !*** ./apps/route/view/MainView.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MainViewController_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainViewController.mjs */ "./apps/route/view/MainViewController.mjs");
/* harmony import */ var _HeaderContainer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HeaderContainer.mjs */ "./apps/route/view/HeaderContainer.mjs");
/* harmony import */ var _FooterContainer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FooterContainer.mjs */ "./apps/route/view/FooterContainer.mjs");
/* harmony import */ var _CenterContainer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CenterContainer.mjs */ "./apps/route/view/CenterContainer.mjs");
/* harmony import */ var _ButtonBar_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ButtonBar.mjs */ "./apps/route/view/ButtonBar.mjs");
/* harmony import */ var _src_container_Panel_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/container/Panel.mjs */ "./src/container/Panel.mjs");
/* harmony import */ var _MetaContainer_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MetaContainer.mjs */ "./apps/route/view/MetaContainer.mjs");








/**
 * @class Route.view.MainContainer
 * @extends Neo.container.Viewport
 */
class MainContainer extends _src_container_Panel_mjs__WEBPACK_IMPORTED_MODULE_5__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.MainContainer'
         * @protected
         */
        className: 'Route.view.MainView',
        baseCls: ['route'],
        /**
         * @member {Neo.controller.Component} controller=MainViewController
         */
        controller: _MainViewController_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
        /**
         * @member {headers[]} items
         */
        headers: [
            {
                module: _HeaderContainer_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                dock: 'top'
            },
            {
                module: _ButtonBar_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
                dock: 'top',
                reference: 'buttonbar'
            },
            {
                module: _FooterContainer_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                dock: 'bottom'
            },
            {
                module: _MetaContainer_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
                dock: 'bottom',
                reference: 'metabar'
            }
        ],
        items: [
            {
                module: _CenterContainer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                reference: 'center-container'
            }
        ]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./apps/route/view/MainViewController.mjs":
/*!************************************************!*\
  !*** ./apps/route/view/MainViewController.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_controller_Component_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/controller/Component.mjs */ "./src/controller/Component.mjs");


/**
 * @class Route.view.MainContainerController
 * @extends Neo.controller.Component
 */
class MainContainerController extends _src_controller_Component_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
   static config = {
      /**
       * @member {String} className='Route.view.MainContainerController'
       * @protected
       */
      className: 'Route.view.MainContainerController',

      routes: {
         '/home': 'handleHomeRoute',
         '/section1': 'handleSection1Route',
         '/section2': 'handleSection2Route',
         '/contact': 'handleContactRoute',
         '/users/{userId}': { handler: 'handleUserRoute', preHandler: 'doPrehandling' },
         // '/users/{userId}' : {handler: 'handleUserRoute', preHandler: 'doPrehandling'}, //example
         //'/users/{userId}/posts/{postId}' : {handler:'handleUserPostsRoute', preHandler: 'doPrehandlingFalse'}, //example
         // default: 'doDefaultHandling' //optional - example
      },

      //Demo data
      data: {
         users: [{ id: 1, name: 'Joe Doe' }, { id: 2, name: 'Max Mustermann' }],
         activeUser: 0
      }
   }

   onConstructed() {
      super.onConstructed();
   }

   /**
    * Card sort order
    * 0 - Contact
    * 1 - Administration
    * 2 - Section 1
    * 3 - Section 2
    * 4 - Home
    */


   doPrehandling(params = null, value, oldValue) {
      const userId = parseInt(params.userId);
      if (userId > 0 && userId === this.data.activeUser) {
         return true;
      }

      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 5;

      return false;

   }

   /**
   * @param {Object} data
   */
   onSwitchButtonCardContact(data) {
      Neo.Main.redirectTo({ url: '#/contact' });
      this.#removeFromButtonSelection();
      this.#addButtonSelection(data);
   }

   /**
       * @param {Object} data
       */
   onSwitchButtonAdministration(data) {

      Neo.Main.redirectTo({ url: `#/users/${this.data.activeUser}` });
      this.#removeFromButtonSelection();
      this.#addButtonSelection(data);
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonCardSection1(data) {
      Neo.Main.redirectTo({ url: '#/section1' });
      this.#removeFromButtonSelection();
      this.#addButtonSelection(data);
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonCardSection2(data) {
      Neo.Main.redirectTo({ url: '#/section2' });
      this.#removeFromButtonSelection();
      this.#addButtonSelection(data);
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonCardHome(data) {
      Neo.Main.redirectTo({ url: '#/home' });
      this.#removeFromButtonSelection();
      this.#addButtonSelection(data);
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonMetaUser1(data) {
      const currentUser = this.data.activeUser;
      this.data.activeUser = 1;
      this.#removeMetaButtonSelection();
      this.#setUsername();
      data.component?.addCls('route_meta_button_grant_selected');
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonMetaUser2(data) {
      const currentUser = this.data.activeUser;
      this.data.activeUser = 2;
      this.#removeMetaButtonSelection();
      this.#setUsername();
      data.component?.addCls('route_meta_button_grant_selected');
   }

   /**
   * @param {Object} data
   */
   onSwitchButtonMetaReset(data) {
      this.data.activeUser = 0;
      this.#setUsername();
      this.#removeMetaButtonSelection();
   }

   handleHomeRoute(params = null, value, oldValue) {
      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 4;
   }

   handleSection1Route(params = null, value, oldValue) {
      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 2;
   }

   handleSection2Route(params = null, value, oldValue) {
      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 3;
   }

   handleContactRoute(params = null, value, oldValue) {
      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 0;
   }

   handleUserRoute(params = null, value, oldValue) {
      const centerContainer = this.getReference('center-container');
      centerContainer.layout.activeIndex = 1
   }

   #removeFromButtonSelection() {
      const buttonbar = this.getReference('buttonbar');
      buttonbar.items.forEach(element => {
         element.removeCls('route_button_selected');
      });

      const footer = this.getReference('footer-container');
      footer.items.forEach(element => {
         element.removeCls('route_button_selected');
      });
   }

   #addButtonSelection(data) {
      data.component?.addCls('route_button_selected');
   }

   #removeMetaButtonSelection(user) {
      const buttonbar = this.getReference('metabar');
      buttonbar.items.forEach(element => {
         element.removeCls('route_meta_button_grant_selected');
      });
      this.#removeFromButtonSelection();
      const data = {
         component: this.getReference('home_button')
      }
      this.#addButtonSelection(data);
      Neo.Main.redirectTo({ url: '#/home' });
   }

   #setUsername() {
      const user = this.data.users.find(item => { return item.id === this.data.activeUser });

      const centerContainer = this.getReference('center-container');
      const adminPage = centerContainer.items[1];
      adminPage.username = user ? user.name : '';
   }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainerController));


/***/ }),

/***/ "./apps/route/view/MetaContainer.mjs":
/*!*******************************************!*\
  !*** ./apps/route/view/MetaContainer.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");



/**
 * @class Route.view.MetaContainer
 * @extends Neo.container.Base
 */
class MetaContainer extends _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        /**
         * @member {String} className='Route.view.MetaContainer'
         * @protected
         */
        className: 'Route.view.MetaContainer',

        baseCls: ['route_meta', 'route_meta_color','route_meta_center', 'neo-container'],

        height: 55,
        /**
         * @member {Object[]} items
         */
        items: [
            {
                module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                flex: 'none',
                handler: 'onSwitchButtonMetaUser1',
                cls: ['route_meta_button_grant', 'neo-button'],
                text: 'User 1'
            },
            {
                module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                flex: 'none',
               handler: 'onSwitchButtonMetaUser2',
                cls: ['route_meta_button_grant', 'neo-button'],
                text: 'User 2'
            },
            {
                module: _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                flex: 'none',
                handler: 'onSwitchButtonMetaReset',
                cls: ['route_meta_button_remove', 'neo-button'],
                text: 'Reset User'
            }
        ],
        layout: { ntype: 'hbox', align: 'stretch'  }

    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MetaContainer));


/***/ }),

/***/ "./apps/route/view/Viewport.mjs":
/*!**************************************!*\
  !*** ./apps/route/view/Viewport.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/container/Viewport.mjs */ "./src/container/Viewport.mjs");
/* harmony import */ var _MainView_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MainView.mjs */ "./apps/route/view/MainView.mjs");



class Viewport extends _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className: 'Route.view.Viewport',
        layout: { ntype: 'fit' },
        items: [{ module: _MainView_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/component/Label.mjs":
/*!*********************************!*\
  !*** ./src/component/Label.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a label with a text
 * @class Neo.component.Label
 * @extends Neo.component.Base
 */
class Label extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Label'
         * @protected
         */
        className: 'Neo.component.Label',
        /**
         * @member {String} ntype='label'
         * @protected
         */
        ntype: 'label',
        /**
         * @member {String[]} baseCls=['neo-label']
         */
        baseCls: ['neo-label'],
        /**
         * @member {String} text_=''
         */
        text_: '',
        /**
         * @member {Object} _vdom={tag: 'label'}
         */
        _vdom:
        {tag: 'label', draggable: false}
    }

    /**
     * Triggered after the text config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetText(value, oldValue) {
        this.vdom.html = value;
        this.update()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Label));


/***/ }),

/***/ "./src/container/Panel.mjs":
/*!*********************************!*\
  !*** ./src/container/Panel.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _toolbar_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toolbar/Base.mjs */ "./src/toolbar/Base.mjs");



/**
 * An extended Container supporting multiple docked header toolbars
 * @class Neo.container.Panel
 * @extends Neo.container.Base
 */
class Panel extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Panel'
         * @protected
         */
        className: 'Neo.container.Panel',
        /**
         * @member {String} ntype='panel'
         * @protected
         */
        ntype: 'panel',
        /**
         * @member {String[]} baseCls=['neo-panel','neo-container']
         */
        baseCls: ['neo-panel', 'neo-container'],
        /**
         * @member {Object} containerConfig=null
         */
        containerConfig: null,
        /**
         * @member {Object} headerDefaults=null
         */
        headerDefaults: null,
        /**
         * @member {Array} headers=null
         */
        headers: null,
        /**
         * @member {Object} items={ntype: 'vbox', align: 'stretch'}
         */
        _layout: {
            ntype: 'vbox',
            align: 'stretch'
        },
        /**
         * @member {Boolean} verticalHeadersFirst=false
         */
        verticalHeadersFirst: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me = this;

        if (me.hasHeaders() && me.verticalHeadersFirst === true) {
            me.layout = {
                ntype: 'hbox',
                align: 'stretch'
            };
        }
    }

    /**
     * @param {Object} header the header config
     * @returns {Object}
     */
    static createHeaderConfig(header) {
        if (Neo.typeOf(header) === 'NeoInstance') {
            return header;
        }

        let config = {
            flex: '0 1 auto'
        };

        if (!header.module && !header.ntype) {
            config.cls   = ['neo-panel-header-toolbar', 'neo-toolbar'];
            config.ntype = 'toolbar';
        }

        if (header.text) {
            config.items = [{
                ntype: 'label',
                cls  : ['neo-panel-header-text', 'neo-label'],
                text : header.text
            }];

            delete header.text;
        }

        // assuming all labels inside a Panel Header are meant to be titles -> look the same way
        if (Array.isArray(header.items)) {
            header.items.forEach(item => {
                if (item.ntype === 'label') {
                    item.cls = ['neo-panel-header-text', 'neo-label'];
                }
            });
        }

        return {...config, ...header}
    }

    /**
     *
     */
    createItems() {
        let me              = this,
            containerConfig = me.containerConfig;

        if (!me.hasHeaders()) {
            containerConfig && me.set(containerConfig);
            super.createItems();
        } else {
            let hf                   = me.verticalHeadersFirst === false,
                headers              = me.headers || [],
                bottomHeaders        = headers.filter(header => {return header.dock === (hf ?'bottom': 'right')}),
                leftHeaders          = headers.filter(header => {return header.dock === (hf ?'left'  : 'top')}),
                rightHeaders         = headers.filter(header => {return header.dock === (hf ?'right' : 'bottom')}),
                topHeaders           = headers.filter(header => {return header.dock === (hf ?'top'   : 'left')}),
                hasHorizontalHeaders = bottomHeaders.length > 0 || topHeaders  .length > 0,
                hasVerticalHeaders   = leftHeaders  .length > 0 || rightHeaders.length > 0,
                {items}              = me,
                horizontalItems      = [],
                verticalItems        = [],
                config;

            topHeaders.forEach(header => {
                verticalItems.push(Panel.createHeaderConfig(header))
            });

            if (hasVerticalHeaders && (hf && hasHorizontalHeaders || !hf && hasHorizontalHeaders)) {
                leftHeaders.forEach(header => {
                    horizontalItems.push(Panel.createHeaderConfig(header))
                });

                config = {
                    ntype       : 'container',
                    flex        : 1,
                    items,
                    itemDefaults: me.itemDefaults,
                    ...containerConfig
                };

                horizontalItems.push({...me.headerDefaults, ...config});

                rightHeaders.forEach(header => {
                    horizontalItems.push(Panel.createHeaderConfig(header))
                });

                verticalItems.push({
                    ntype : 'container',
                    items : horizontalItems,
                    layout: {
                        ntype: (hf ? 'hbox' : 'vbox'),
                        align: 'stretch'
                    }
                });
            } else {
                config = {
                    ntype       : 'container',
                    flex        : 1,
                    items,
                    itemDefaults: me.itemDefaults,
                    ...containerConfig
                };

                verticalItems.push({...me.headerDefaults, ...config})
            }

            bottomHeaders.forEach(header => {
                verticalItems.push(Panel.createHeaderConfig(header))
            });

            me.items = verticalItems;

            me.itemDefaults = null;

            super.createItems()
        }
    }

    /**
     * @returns {Boolean}
     */
    hasHeaders() {
        return Array.isArray(this.headers) && this.headers.length > 0
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Panel));


/***/ }),

/***/ "./src/container/Viewport.mjs":
/*!************************************!*\
  !*** ./src/container/Viewport.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Neo.container.Viewport
 * @extends Neo.container.Base
 */
class Viewport extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Viewport'
         * @protected
         */
        className: 'Neo.container.Viewport',
        /**
         * @member {String} ntype='viewport'
         * @protected
         */
        ntype: 'viewport',
        /**
         * true applies 'neo-body-viewport' to the document.body
         * @member {Boolean} applyBodyCls=true
         */
        applyBodyCls: true,
        /**
         * Assuming that a Viewport is the top level view of your app, and you want to mount it right away.
         * Could be without any items. Use false otherwise.
         * @member {Boolean} autoMount=true
         */
        autoMount: true,
        /**
         * @member {String[]} baseCls=['neo-viewport']
         */
        baseCls: ['neo-viewport'],
        /**
         * true applies a main.addon.ResizeObserver and fires a custom resize event
         * which other instances can subscribe to.
         * @member {Boolean} monitorSize_=false
         */
        monitorSize_: false
    }

    /**
     * Triggered after the mounted config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMounted(value, oldValue) {
        super.afterSetMounted(value, oldValue);

        let me = this;

        if (value && me.monitorSize) {
            me.addDomListeners([{resize: me.onDomResize, scope: me}])
        }
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        let {appName, windowId} = this;

        this.applyBodyCls && Neo.main.DomAccess.applyBodyCls({
            appName,
            cls: ['neo-body-viewport'],
            windowId
        })
    }

    /**
     * @param {Object} data
     */
    onDomResize(data) {
        this.fire('resize', data)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/controller/Component.mjs":
/*!**************************************!*\
  !*** ./src/controller/Component.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/controller/Base.mjs");
/* harmony import */ var _util_Function_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Function.mjs */ "./src/util/Function.mjs");
/* harmony import */ var _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Logger.mjs */ "./src/util/Logger.mjs");




/**
 * @class Neo.controller.Component
 * @extends Neo.controller.Base
 */
class Component extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.controller.Component'
         * @protected
         */
        className: 'Neo.controller.Component',
        /**
         * @member {String} ntype='component-controller'
         * @protected
         */
        ntype: 'component-controller',
        /**
         * @member {Neo.component.Base|null} component=null
         * @protected
         */
        component: null,
        /**
         * @member {Neo.controller.Component|null} parent_=null
         */
        parent_: null,
        /**
         * @member {Object} references=null
         * @protected
         */
        references: null,
        /**
         * @member {Number|null} windowId=null
         */
        windowId: null
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me          = this,
            {component} = me;

        me.references = {};

        if (component.isConstructed) {
            me.onComponentConstructed()
        } else {
            component.on('constructed', () => {
                me.onComponentConstructed()
            }, me, {once: true})
        }
    }

    /**
     * Triggered before the parent config gets changed
     * @param {Neo.controller.Component|null} value
     * @param {Neo.controller.Component|null} oldValue
     * @protected
     */
    beforeSetParent(value, oldValue) {
        return value || this.getParent()
    }

    /**
     * @param {String} handlerName
     * @param {Neo.component.Base} [component]
     * @returns {Neo.controller.Component|Boolean|null}
     */
    getHandlerScope(handlerName, component) {
        let me       = this,
            {parent} = me;

        if (component) {
            // Look for ths function *name* first in the Component itself.
            // If we find it, return true so calling code knows not to continue to search.
            const handlerCb = (0,_util_Function_mjs__WEBPACK_IMPORTED_MODULE_1__.resolveCallback)(handlerName, component);

            // Handler fn is resolved in the Component or its own parent chain.
            // Return a status indicating that we do not need an early binding
            if (handlerCb.fn) {
                return true
            }
        }

        return Neo.isFunction(me[handlerName]) ?
            me : parent?.getHandlerScope(handlerName) || null
    }

    /**
     * Get the closest controller inside the components parent tree
     * @returns {Neo.controller.Component|null}
     */
    getParent() {
        let me       = this,
            {parent} = me;

        if (parent) {
            return parent
        }

        return me.component.parent?.getController() || null
    }

    /**
     * todo: update changed references (e.g. container.remove() then container.add() using the same key)
     * @param {String} name
     * @returns {*}
     */
    getReference(name) {
        let me        = this,
            component = me.references[name];

        if (!component) {
            component = me.component.down({reference: name});

            if (component) {
                me.references[name] = component
            }
        }

        return component || null
    }

    /**
     * Convenience shortcut
     * @param args
     * @returns {*}
     */
    getState(...args) {
        return this.getStateProvider().getData(...args)
    }

    /**
     * sameLevelOnly=false will return the closest stateProvider inside the component parent tree,
     * in case there is none on the same level.
     * @param {Boolean} [sameLevelOnly=false]
     */
    getStateProvider(sameLevelOnly=false) {
        let {component} = this;
        return sameLevelOnly ? component.stateProvider : component.getStateProvider()
    }

    /**
     * Convenience shortcut for accessing state.Provider based data.Stores
     * @param {String} key
     * @returns {Neo.data.Store}
     */
    getStore(key) {
        return this.getStateProvider().getStore(key)
    }

    /**
     * Override this method inside your view controllers as a starting point in case you need references
     * (instead of using onConstructed() inside your controller)
     */
    onComponentConstructed() {}

    /**
     * @param {Neo.component.Base} component=this.component
     */
    parseConfig(component=this.component) {
        let me = this,
            {handler, listeners, reference, renderer, validator} = component,
            eventHandler, handlerScope;

        if (handler && Neo.isString(handler)) {
            handlerScope = me.getHandlerScope(handler, component);

            // If the handler name was not resolved in the Component itself, bind it
            if (handlerScope !== true) {
                component.handler = handlerScope[handler].bind(component.handlerScope || handlerScope);
            }
        }

        listeners && Object.entries(listeners).forEach(([key, value]) => {
            if (key !== 'scope' && key !== 'delegate') {
                if (Neo.isString(value)) {
                    eventHandler = value;
                    handlerScope = me.getHandlerScope(eventHandler, component);

                    if (!handlerScope) {
                        _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].logError('Unknown event handler for', eventHandler, component)
                    } else if (handlerScope !== true) {
                        listeners[key] = {};
                        listeners[key].fn = handlerScope[eventHandler].bind(handlerScope)
                    }
                } else {
                    value?.forEach?.(listener => {
                        if (Neo.isObject(listener) && listener.hasOwnProperty('fn') && Neo.isString(listener.fn)) {
                            eventHandler = listener.fn;
                            handlerScope = me.getHandlerScope(eventHandler, component);

                            if (!handlerScope) {
                                console.error('Unknown event handler for', eventHandler, component)
                            } else if (handlerScope !== true) {
                                listener.fn = handlerScope[eventHandler].bind(handlerScope)
                            }
                        }
                    })
                }
            }
        });

        if (renderer && Neo.isString(renderer)) {
            handlerScope = me.getHandlerScope(renderer);

            if (handlerScope) {
                component.renderer = handlerScope[renderer].bind(handlerScope)
            }
        }

        if (validator && Neo.isString(validator)) {
            handlerScope = me.getHandlerScope(validator);

            if (!handlerScope) {
                _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].logError('Unknown validator for', component.id, component)
            } else {
                component.validator = handlerScope[validator].bind(handlerScope)
            }
        }

        if (reference) {
            me.references[reference] = component
        }
    }

    /**
     * @param {Neo.component.Base} component=this.component
     */
    parseDomListeners(component=this.component) {
        let me             = this,
            {domListeners} = component,
            eventHandler, scope;

        domListeners?.forEach(domListener => {
            Object.entries(domListener).forEach(([key, value]) => {
                eventHandler = null;

                if (key !== 'scope' && key !== 'delegate') {
                    if (Neo.isString(value)) {
                        eventHandler = value;
                    } else if (Neo.isObject(value) && value.hasOwnProperty('fn') && Neo.isString(value.fn)) {
                        eventHandler = value.fn;
                    }

                    if (eventHandler) {
                        scope = me.getHandlerScope(eventHandler);

                        // There can be string based listeners like 'up.onClick', which will resolved inside manager.DomEvents
                        // => Do nothing in case there is no match inside the controller hierarchy.
                        if (scope) {
                            domListener[key] = scope[eventHandler].bind(scope)
                        }
                    }
                }
            })
        })
    }

    /**
     * Will get called by component.Base: destroy() in case the component has a reference config
     * @param {Neo.component.Base} component
     */
    removeReference(component) {
        let me           = this,
            {references} = me,
            key;

        for (key in references) {
            if (component === references[key]) {
                delete references[key];
                break
            }
        }

        me.getParent()?.removeReference(component)
    }

    /**
     * Convenience shortcut
     * @param args
     */
    setState(...args) {
        this.getStateProvider().setData(...args)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Component));


/***/ }),

/***/ "./src/toolbar/Base.mjs":
/*!******************************!*\
  !*** ./src/toolbar/Base.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _component_Label_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/Label.mjs */ "./src/component/Label.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");






/**
 * @class Neo.toolbar.Base
 * @extends Neo.container.Base
 */
class Toolbar extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    /**
     * Valid values for dock
     * @member {String[]} dockPositions=['top','right','bottom','left', null]
     * @static
     */
    static dockPositions = ['top', 'right', 'bottom', 'left', null]

    static config = {
        /**
         * @member {String} className='Neo.toolbar.Base'
         * @protected
         */
        className: 'Neo.toolbar.Base',
        /**
         * @member {String} ntype='toolbar'
         * @protected
         */
        ntype: 'toolbar',
        /**
         * @member {String[]} baseCls=['neo-toolbar']
         */
        baseCls: ['neo-toolbar'],
        /**
         * @member {String|null} dock_=null
         */
        dock_: null,
        /**
         * @member {Object} itemDefaults={ntype:'button'}
         */
        itemDefaults: {
            ntype: 'button'
        },
        /**
         * @member {Object} layout={ntype:'flexbox',align:'center',direction: 'row', pack:'start'}
         */
        layout: {
            ntype    : 'flexbox',
            align    : 'center',
            direction: 'row',
            pack     : 'start'
        },
        /**
         * @member {Boolean} sortable_=false
         */
        sortable_: false,
        /**
         * @member {Neo.draggable.toolbar.SortZone|null} sortZone=null
         */
        sortZone: null,
        /**
         * @member {Object} sortZoneConfig=null
         */
        sortZoneConfig: null
    }

    /**
     * Triggered after the appName config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetAppName(value, oldValue) {
        super.afterSetAppName(value, oldValue);

        if (this.sortZone) {
            this.sortZone.appName = value
        }
    }

    /**
     * Triggered after the dock config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetDock(value, oldValue) {
        if (!value && !oldValue) {
            return
        }

        let me            = this,
            {cls}         = me,
            dockPositions = me.getStaticConfig('dockPositions'),
            layoutConfig  = me.getLayoutConfig();

        dockPositions.forEach(key => {
            key !== null && _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__["default"].toggle(cls, 'neo-dock-' + key, key === value)
        });

        if (!me.layout) {
            layoutConfig.ntype = 'flexbox';
            me.set({cls, layout: layoutConfig})
        } else {
            me.layout.set(layoutConfig);
            me.cls = cls;
        }
    }

    /**
     * Triggered after the sortable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetSortable(value, oldValue) {
        let me = this;

        if (value && !me.sortZone) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_draggable_DragZone_mjs"), __webpack_require__.e("vendors-src_draggable_toolbar_SortZone_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ../draggable/toolbar/SortZone.mjs */ "./src/draggable/toolbar/SortZone.mjs")).then(module => {
                me.sortZone = Neo.create({
                    module             : module.default,
                    appName            : me.appName,
                    boundaryContainerId: me.id,
                    owner              : me,
                    windowId           : me.windowId,
                    ...me.sortZoneConfig
                })
            })
        }
    }

    /**
     * Triggered after the windowId config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetWindowId(value, oldValue) {
        super.afterSetWindowId(value, oldValue);

        if (this.sortZone) {
            this.sortZone.windowId = value
        }
    }

    /**
     * Checks if the new dock position matches a value of the static dockPositions config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetDock(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'dock', 'dockPositions')
    }

    /**
     *
     */
    createItems() {
        let items = this._items;

        if (Array.isArray(items)) {
            this._items = items.map(item => this.replaceSpacer(item))
        }

        return super.createItems()
    }

    /**
     * Creates a layout config depending on this.dock
     * @returns {Object} layoutConfig
     */
    getLayoutConfig() {
        let me = this,
            layoutConfig;

        if (me.dock) {
            switch(me.dock) {
                case 'bottom':
                case 'top':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'row',
                        pack     : 'start'
                    };
                    break
                case 'left':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column-reverse',
                        pack     : 'start'
                    };
                    break
                case 'right':
                    layoutConfig = {
                        align    : 'center',
                        direction: 'column',
                        pack     : 'start'
                    };
                    break
            }
        }

        return layoutConfig || me.layout
    }

    /**
     * Inserts an item or array of items at a specific index
     * @param {Number} index
     * @param {Array|Object} item
     * @param {Boolean} [silent=false]
     * @returns {Neo.component.Base|Neo.component.Base[]}
     */
    insert(index, item, silent=false) {
        if (Array.isArray(item)) {
            item = item.map(item => this.replaceSpacer(item))
        } else {
            item = this.replaceSpacer(item)
        }

        return super.insert(index, item, silent)
    }

    /**
     * @param {Array|Object|String} item
     * @returns {Array|Object}
     */
    replaceSpacer(item) {
        return item === '->' ? {module: _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"], flex: 1} : item
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Toolbar));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,