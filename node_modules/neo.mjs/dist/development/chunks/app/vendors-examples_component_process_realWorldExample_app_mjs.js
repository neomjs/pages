"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_component_process_realWorldExample_app_mjs"],{

/***/ "./examples/component/process/realWorldExample/MainContainer.mjs":
/*!***********************************************************************!*\
  !*** ./examples/component/process/realWorldExample/MainContainer.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/form/field/CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/form/field/ComboBox.mjs */ "./src/form/field/ComboBox.mjs");
/* harmony import */ var _src_component_Base_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _src_form_field_Display_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/form/field/Display.mjs */ "./src/form/field/Display.mjs");
/* harmony import */ var _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/form/Container.mjs */ "./src/form/Container.mjs");
/* harmony import */ var _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/form/field/Number.mjs */ "./src/form/field/Number.mjs");
/* harmony import */ var _src_component_Process_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/component/Process.mjs */ "./src/component/Process.mjs");
/* harmony import */ var _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../src/form/field/Range.mjs */ "./src/form/field/Range.mjs");
/* harmony import */ var _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../src/form/field/Text.mjs */ "./src/form/field/Text.mjs");
/* harmony import */ var _src_component_Toast_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../src/component/Toast.mjs */ "./src/component/Toast.mjs");














/**
 * @class Neo.examples.component.process.realWorldExample.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    static config = {
        className           : 'Neo.examples.component.process.realWorldExample.MainContainer',
        configItemLabelWidth: 110,
        configItemWidth     : 250,
        configPanelMinWidth : 250,
        configPanelFlex     : 'none',
        layout              : {ntype: 'hbox', align: 'stretch'}
    }

    createConfigurationComponents() {
        let me = this;

        return [{
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            checked  : false,
            value    : 5,
            labelText: 'horizontal',
            listeners: {change: me.onConfigChange.bind(me, 'horizontal')}
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_11__["default"],
            labelText: 'arrowColor',
            listeners: {change: me.onConfigChange.bind(me, 'arrowColor')}
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_11__["default"],
            labelText: 'iconColor',
            listeners: {change: me.onConfigChange.bind(me, 'iconColor')}
        }]
    }

    createExampleComponent() {
        const me            = this,
              onRangeChange = me.onRangeChange.bind(me),
              // Wetterdaten von Berlin Tiergarten
              weatherUrl    = 'https://api.open-meteo.com/v1/forecast?latitude=52.51239766781255&longitude=13.35733940978727&current_weather=true';

        let weather = fetch(weatherUrl).then(async (response) => {
            let result        = await response.json(),
                temperature   = Math.ceil(result.current_weather.temperature),
                temperatureEl = me.down({flag: 'temperature'})

            temperatureEl.value = temperature
        });

        return Neo.create({
            module      : _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            maxWidth    : 450,
            maxHeight   : '100%',
            style       : {
                overflowY: 'auto',
                margin   : '0 auto'
            },
            itemDefaults: {
                horizontal: false
            },
            items       : [{
                module: _src_component_Base_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
                vdom  : {
                    cn: [
                        {tag: 'img', src: './RangeHeader.jpg', width: '100%'}
                    ]
                }
            }, {
                module: _src_component_Process_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
                flag  : 'start-process',
                items : [{
                    iconCls: 'fa fa-plane-departure',
                    title  : 'Start Eingabe',
                    text   : 'Batterie % und Kilometerstand'
                }]
            }, {
                module   : _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
                hasFields: true,
                layout   : {ntype: 'vbox', align: 'stretch'},
                items    : [{
                    module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_8__["default"],
                    flag     : 'max-capacity',
                    labelText: 'max. Kapazit√§t kWh',
                    minValue : 1,
                    maxValue : 500,
                    value    : 29
                }, {
                    module           : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
                    flag             : 'start-battery',
                    labelText        : 'Batterie %',
                    showResultInLabel: true,
                    minValue         : 1,
                    maxValue         : 100,
                    value            : 100,
                    listeners        : {change: onRangeChange}
                }, {
                    module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_8__["default"],
                    flag     : 'start-km',
                    labelText: 'Kilometerstand',
                    minValue : 0,
                    maxValue : 500000
                }],
                listeners: {fieldFocusLeave: onRangeChange}
            }, {
                module: _src_component_Process_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
                flag  : 'end-process',
                items : [{
                    iconCls: 'fa fa-plane-arrival',
                    title  : 'Ankunft Eingabe',
                    text   : 'Batterie % und Kilometerstand'
                }]
            }, {
                module   : _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
                hasFields: true,
                layout   : {ntype: 'vbox', align: 'stretch'},
                items    : [{
                    module           : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
                    flag             : 'end-battery',
                    labelText        : 'Batterie %',
                    showResultInLabel: true,
                    minValue         : 0,
                    maxValue         : 99,
                    value            : 0,
                    listeners        : {change: onRangeChange}
                }, {
                    module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_8__["default"],
                    flag     : 'end-km',
                    labelText: 'Kilometerstand',
                    minValue : 0,
                    maxValue : 500000,
                }],
                listeners: {fieldFocusLeave: onRangeChange}
            }, {
                module    : _src_component_Process_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
                flag      : 'result-process',
                arrowColor: 'rgb(200 155 12)',
                items     : [{
                    iconCls: 'fa fa-square-poll-vertical',
                    title  : 'Ergebnisse',
                    text   : 'Errechnete Ergebnisse'
                }]
            }, {
                module   : _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
                hasFields: true,
                layout   : {ntype: 'vbox', align: 'stretch'},
                listeners: {fieldChange: onRangeChange},
                items    : [{
                    module   : _src_form_field_Display_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
                    flag     : 'result',
                    labelText: 'Rest Kilometer'
                }, {
                    module   : _src_form_field_Display_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
                    flag     : 'remain-kWh',
                    labelText: 'Rest kWh'
                }, {
                    module   : _src_form_field_Display_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
                    flag     : 'average-kWh',
                    labelText: 'kwH pro 100km'
                }]
            }, {
                module    : _src_component_Process_mjs__WEBPACK_IMPORTED_MODULE_9__["default"],
                arrowColor: 'rgb(200 155 12)',
                items     : [{
                    iconCls: 'fa fa-magnifying-glass-chart',
                    title  : 'Zus√§tzliche Angaben',
                    text   : 'F√ºr die Langzeitauswertung'
                }]
            }, {
                module      : _src_form_Container_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
                flag        : 'additional-information',
                disabled    : true,
                layout      : {ntype: 'vbox', align: 'stretch'},
                itemDefaults: {
                    showResultInLabel: true,
                    value            : 20
                },
                items       : [{
                    module      : _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                    displayField: 'name',
                    labelText   : 'Fahrstil',
                    value       : 'normal',

                    store: {
                        data : [
                            {style: 'sportStyle',  name: 'sport',  code: 'sportCode'},
                            {style: 'normalStyle', name: 'normal', code: 'normalCode'},
                            {style: 'ecoStyle',    name: 'eco',    code: 'ecoCode'},
                        ],
                        model: {
                            fields: [
                                {name: 'style', type: 'String'},
                                {name: 'name',  type: 'String'},
                                {name: 'code',  type: 'String'}
                            ]
                        }
                    }
                }, {
                    module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
                    flag     : 'highway',
                    labelText: 'Autobahn %',
                    minValue : 0,
                    maxValue : 100,
                }, {
                    module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_10__["default"],
                    flag     : 'temperature',
                    labelText: 'Au√üen-Temp.',
                    minValue : -20,
                    maxValue : 50
                }, {
                    module : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                    text   : 'Speichern und Auswerten',
                    ui     : 'secondary',
                    style  : {
                        minHeight   : '50px',
                        marginBottom: '35px'
                    },
                    handler: me.onSaveClick.bind(me)
                }],
                listeners   : {fieldChange: onRangeChange}
            }]
        })
    }

    /**
     * @param {String} config
     * @param {Object} opts
     */
    onConfigChange(config, opts) {
        const processes = Neo.find({ntype: 'process'});

        processes.forEach(process => {
            process[config] = opts.value
        })
    }

    /**
     * @param {Object} data
     */
    onRangeChange(data) {
        const me                      = this,
              startBattery            = me.down({flag: 'start-battery'}).value,
              endBatteryEl            = me.down({flag: 'end-battery'}),
              endBattery              = endBatteryEl.value,
              startKm                 = me.down({flag: 'start-km'}).value,
              endKmEl                 = me.down({flag: 'end-km'}),
              endKm                   = endKmEl.value,
              additionalInformationEl = me.down({flag: 'additional-information'});

        if (startKm) {
            const startProcess = this.down({flag: 'start-process'});

            startProcess.arrowColor = '#12FE88'
        }

        if (endKm) {
            const startProcess = this.down({flag: 'end-process'});

            startProcess.arrowColor = '#12FE88'
        }

        if ((startKm && !endKm) || endKm <= startKm) {
            endKmEl.value = startKm + 5
        }

        if (endBattery >= startBattery) {
            endBatteryEl.value = startBattery - 1
        }

        if (startKm && endKm) {
            const resultEl      = me.down({flag: 'result'}),
                  kwpMaxEl      = me.down({flag: 'max-capacity'}),
                  remainKwhEl   = me.down({flag: 'remain-kWh'}),
                  averageKwhEl  = me.down({flag: 'average-kWh'}),
                  maxCapacityEl = me.down({flag: 'max-capacity'}),
                  batteryDiff   = startBattery - endBattery,
                  kmDiff        = endKm - startKm,
                  kWhUsed       = maxCapacityEl.value * (batteryDiff / 100),
                  resultKm      = (endBattery) * kmDiff / batteryDiff;

            additionalInformationEl.disabled = false;
            resultEl.value = Math.ceil(resultKm);
            remainKwhEl.value = Math.ceil(kwpMaxEl.value * (endBattery / 100));
            averageKwhEl.value = Math.ceil(100 * (kWhUsed / kmDiff))
        } else {
            additionalInformationEl.disabled = true
        }
    }

    /**
     * Shows a toast
     */
    onSaveClick() {
        const averageKwh = this.down({flag: 'average-kWh'}).value;
        let msg     = `Du hast einen durchschnittlichen Verbrauch von ${averageKwh} kwh/100km.`,
            iconCls = 'fa fa-user-tie',
            title   = 'results',
            ui;

        if (averageKwh > 25) {
            msg = `Du bist seeehr sportlich unterwegs mit ${averageKwh} kWh auf 100km`;
            iconCls = 'fa fa-flag-checkered';
            ui = 'danger';
            title = 'racing'
        } else if (averageKwh < 15) {
            msg = `Du bist sehr umweltbewusst gefahren und hast nur ${averageKwh} kwh/100km verbraucht.`;
            iconCls = 'fa-brands fa-pagelines';
            ui = 'success';
            title = 'ECO'
        }

        Neo.toast({
            appName: this.appName,
            ui     : ui,
            iconCls: iconCls,
            title  : title,
            msg    : msg
        })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/component/process/realWorldExample/app.mjs":
/*!*************************************************************!*\
  !*** ./examples/component/process/realWorldExample/app.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/component/process/realWorldExample/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.component.realWorldExample.process'
});

/***/ }),

/***/ "./src/form/field/Display.mjs":
/*!************************************!*\
  !*** ./src/form/field/Display.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * An extended form.field.Text, which is read-only.
 * @class Neo.form.field.Display
 * @extends Neo.form.field.Text
 */
class Display extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Display'
         * @protected
         */
        className: 'Neo.form.field.Display',
        /**
         * @member {String} ntype='displayfield'
         * @protected
         */
        ntype: 'displayfield',
        /**
         * @member {String[]} baseCls=['neo-displayfield','neo-textfield']
         */
        baseCls: ['neo-displayfield', 'neo-textfield'],
        /**
         * @member {Boolean} clearable=false
         * @protected
         */
        clearable: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me      = this,
            inputEl = me.getInputEl();

        inputEl.readonly = 'readonly';
        inputEl.tabindex = '-1';

        me.update()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Display));


/***/ }),

/***/ "./src/form/field/Range.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Range.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Number_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Number.mjs */ "./src/form/field/Number.mjs");


/**
 * @class Neo.form.field.Range
 * @extends Neo.form.field.Number
 */
class Range extends _Number_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Removing the debounce for range fields
     * @member {Object} delayable
     * @protected
     * @static
     */
    static delayable = {}

    static config = {
        /**
         * @member {String} className='Neo.form.field.Range'
         * @protected
         */
        className: 'Neo.form.field.Range',
        /**
         * @member {String} ntype='rangefield'
         * @protected
         */
        ntype: 'rangefield',
        /**
         * @member {String[]} baseCls=['neo-rangefield','neo-textfield']
         */
        baseCls: ['neo-rangefield', 'neo-textfield'],
        /**
         * True shows a clear trigger in case the field has a non empty value.
         * @member {Boolean} clearable=false
         */
        clearable: false,
        /**
         * Value for the inputType_ textfield config
         * @member {String} inputType='range'
         */
        inputType: 'range',
        /**
         * If true, shows the result of the slider in the label
         * @member {Boolean} showResultInLabel=false
         */
        showResultInLabel: false,
        /**
         * @member {Array} tickmarks_=[]
         */
        tickmarks_: [],
        /**
         * @member {Boolean} useInputEvent=false
         */
        useInputEvent: false,
        /**
         * Disables the field.Number buttons
         * @member {Boolean} useInputEvent=false
         */
        useSpinButtons: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me      = this,
            inputEl = me.vdom.cn[2];

        if (me.useInputEvent) {
            me.addDomListeners({
                input: {
                    fn   : me.onInputValueChange,
                    id   : me.vdom.cn[2].id,
                    scope: me
                }
            });
        }

        inputEl.cls = ['neo-rangefield-input']; // replace neo-textfield-input

        me.addValueToLabel()
    }

    /**
     * Triggered after the tickmarks config got changed
     * @param {Array} value
     * @param {Array} oldValue
     * @protected
     */
    afterSetTickmarks(value, oldValue) {
        // todo
    }

    /**
     * Triggered after the value config got changed
     * @param {Number} value
     * @param {Number} oldValue
     */
    afterSetValue(value, oldValue) {
        this.addValueToLabel();
        super.afterSetValue(value, oldValue)
    }

    /**
     * Update label with value
     */
    addValueToLabel() {
        let me = this;

        if (me.showResultInLabel) {
            me.getLabelEl().text = `[${me.value}] ` + me.labelText
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Range));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,