{"classData":[{"comment":"/**\n * Base class for main thread addons\n * @class Neo.main.addon.Base\n * @extends Neo.core.Base\n */","meta":{"filename":"Base.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Base class for main thread addons</p>\n","kind":"class","name":"Base","augments":["Neo.core.Base"],"memberof":"Neo.main.addon","longname":"Neo.main.addon.Base","scope":"static","$longname":"Neo.main.addon.Base","$kind":"class","id":3544,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n         * @member {String} className='Neo.main.addon.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":14,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.main.addon.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3545,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n         * An identifier for core.Base to get handled like singletons for remote method access\n         * @member {Boolean} isMainThreadAddon=true\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":20,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>An identifier for core.Base to get handled like singletons for remote method access</p>\n","kind":"member","name":"isMainThreadAddon","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"isMainThreadAddon","scope":"global","$longname":"isMainThreadAddon","$kind":"property","id":3546,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n         * Will get set to true once all addon related files got loaded (if there is a need to load)\n         * @member {Boolean} isReady_=false\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Will get set to true once all addon related files got loaded (if there is a need to load)</p>\n","kind":"member","name":"isReady_","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isReady_","scope":"global","$longname":"isReady_","$kind":"property","id":3547,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n         * Amount in ms to delay the loading of library files, unless remote method access happens\n         * Change the value to false in case you don't want an automated preloading\n         * @member {Boolean|Number} preloadFilesDelay=5000\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":33,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Amount in ms to delay the loading of library files, unless remote method access happens\nChange the value to false in case you don&#39;t want an automated preloading</p>\n","kind":"member","name":"preloadFilesDelay","type":{"names":["Boolean","Number"]},"defaultvalue":5000,"access":"protected","longname":"preloadFilesDelay","scope":"global","$longname":"preloadFilesDelay","$kind":"property","id":3548,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * @member {Object[]} cache=[]\n     */","meta":{"filename":"Base.mjs","lineno":39,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"kind":"member","name":"cache","type":{"names":["Array.<Object>"]},"defaultvalue":"[]","longname":"cache","scope":"global","$longname":"cache","$kind":"property","id":3549,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * Will get set to true once we start loading Monaco related files\n     * @member {Boolean} isLoading=false\n     */","meta":{"filename":"Base.mjs","lineno":44,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Will get set to true once we start loading Monaco related files</p>\n","kind":"member","name":"isLoading","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"isLoading","scope":"global","$longname":"isLoading","$kind":"property","id":3550,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * Internal flag to store the setTimeout() id for loading external files\n     * @member {Number|null} loadingTimeoutId=null\n     */","meta":{"filename":"Base.mjs","lineno":49,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Internal flag to store the setTimeout() id for loading external files</p>\n","kind":"member","name":"loadingTimeoutId","type":{"names":["Number","null"]},"defaultvalue":null,"longname":"loadingTimeoutId","scope":"global","$longname":"loadingTimeoutId","$kind":"property","id":3551,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[1555,1961],"filename":"Base.mjs","lineno":54,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100102412","name":"Base#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Base#construct","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#construct","$kind":"method","id":3552,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * Triggered after the isReady config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[2118,2424],"filename":"Base.mjs","lineno":76,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100102470","name":"Base#afterSetIsReady","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the isReady config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetIsReady","longname":"Base#afterSetIsReady","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetIsReady","$kind":"method","id":3553,"neoClassName":"Neo.main.addon.Base"},{"comment":"/**\n     * Internally caches call when isReady===false\n     * Loads the library files in case this is not already happening\n     * @param item\n     * @returns {Promise<unknown>}\n     */","meta":{"range":[2620,2957],"filename":"Base.mjs","lineno":96,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100102519","name":"Base#cacheMethodCall","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Internally caches call when isReady===false\nLoads the library files in case this is not already happening</p>\n","params":[{"name":"item"}],"returns":[{"type":{"names":["Promise.<unknown>"]}}],"name":"cacheMethodCall","longname":"Base#cacheMethodCall","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#cacheMethodCall","$kind":"method","id":3554,"neoClassName":"Neo.main.addon.Base"}]}