{"classData":[{"comment":"/**\n * @class Neo.core.Observable\n * @extends Neo.core.Base\n */","meta":{"filename":"Observable.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"class","name":"Observable","augments":["Neo.core.Base"],"memberof":"Neo.core","longname":"Neo.core.Observable","scope":"static","$longname":"Neo.core.Observable","$kind":"class","id":1779,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {String} className='Neo.core.Observable'\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":14,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.core.Observable'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1780,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {String} ntype='mixin-observable'\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":19,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'mixin-observable'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1781,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {Boolean} mixin=true\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":24,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"mixin","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"mixin","scope":"global","$longname":"mixin","$kind":"property","id":1782,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param {Object|String} name\n     * @param {Object} [opts]\n     * @param {Object} [scope]\n     * @param {String} [eventId]\n     * @param {Object} [data]\n     * @param {Number|String} [order]\n     * @returns {String|null} eventId null in case an object gets passed as the name (multiple ids)\n     */","meta":{"range":[929,4061],"filename":"Observable.mjs","lineno":36,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100056342","name":"Observable#addListener","type":"MethodDefinition","paramnames":["name","opts","scope","eventId","data","order"]},"vars":{"":null}},"params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Object"]},"optional":true,"name":"scope"},{"type":{"names":["String"]},"optional":true,"name":"eventId"},{"type":{"names":["Object"]},"optional":true,"name":"data"},{"type":{"names":["Number","String"]},"optional":true,"name":"order"}],"returns":[{"type":{"names":["String","null"]},"description":"eventId null in case an object gets passed as the name (multiple ids)"}],"name":"addListener","longname":"Observable#addListener","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#addListener","$kind":"method","id":1783,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Call the passed function, or a function by *name* which exists in the passed scope's\n     * or this component's ownership chain.\n     * @param {Function|String} fn A function, or the name of a function to find in the passed scope object/\n     * @param {Object} scope The scope to find the function in if it is specified as a string.\n     * @param {Array} args Arguments to pass to the callback.\n     */","meta":{"range":[4485,4657],"filename":"Observable.mjs","lineno":138,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100056706","name":"Observable#callback","type":"MethodDefinition","paramnames":["fn","scope","args"]},"vars":{"":null}},"description":"<p>Call the passed function, or a function by <em>name</em> which exists in the passed scope&#39;s\nor this component&#39;s ownership chain.</p>\n","params":[{"type":{"names":["function","String"]},"description":"<p>A function, or the name of a function to find in the passed scope object/</p>\n","name":"fn"},{"type":{"names":["Object"]},"description":"<p>The scope to find the function in if it is specified as a string.</p>\n","name":"scope"},{"type":{"names":["Array"]},"description":"<p>Arguments to pass to the callback.</p>\n","name":"args"}],"name":"callback","longname":"Observable#callback","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#callback","$kind":"method","id":1784,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Internal helper method for events which use the delay option\n     * @param {Object} cb\n     * @param {Array} args\n     * @param {Number} delay\n     */","meta":{"range":[4829,4961],"filename":"Observable.mjs","lineno":151,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100056736","name":"Observable#delayedCallback","type":"MethodDefinition","paramnames":["cb","args","delay"]},"vars":{"":null}},"description":"<p>Internal helper method for events which use the delay option</p>\n","params":[{"type":{"names":["Object"]},"name":"cb"},{"type":{"names":["Array"]},"name":"args"},{"type":{"names":["Number"]},"name":"delay"}],"name":"delayedCallback","longname":"Observable#delayedCallback","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#delayedCallback","$kind":"method","id":1785,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param name\n     */","meta":{"range":[5002,6676],"filename":"Observable.mjs","lineno":160,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100056765","name":"Observable#fire","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"params":[{"name":"name"}],"name":"fire","longname":"Observable#fire","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#fire","$kind":"method","id":1786,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[6728,7774],"filename":"Observable.mjs","lineno":205,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100056974","name":"Observable#initObservable","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"initObservable","longname":"Observable#initObservable","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#initObservable","$kind":"method","id":1787,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Alias for addListener\n     * @param {Object|String} name\n     * @param {Object} [opts]\n     * @param {Object} [scope]\n     * @param {String} [eventId]\n     * @param {Object} [data]\n     * @param {Number} [order]\n     * @returns {String} eventId\n     */","meta":{"range":[8048,8108],"filename":"Observable.mjs","lineno":256,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057101","name":"Observable#on","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"<p>Alias for addListener</p>\n","params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Object"]},"optional":true,"name":"scope"},{"type":{"names":["String"]},"optional":true,"name":"eventId"},{"type":{"names":["Object"]},"optional":true,"name":"data"},{"type":{"names":["Number"]},"optional":true,"name":"order"}],"returns":[{"type":{"names":["String"]},"description":"eventId"}],"name":"on","longname":"Observable#on","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#on","$kind":"method","id":1788,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * There are different syntax's how you can use this method.\n     * Using the eventId:\n     * ```\n     * this.removeListener('change', 'neo-event-7');\n     * ```\n     * Passing the handler method:\n     * ```\n     * this.removeListener('change', this.onChange, this);\n     * ```\n     * Passing an object:\n     * ```\n     * me.field.un({\n     *     change                    : me.onFieldChange,\n     *     changeClearToOriginalValue: me.onFieldChange,\n     *     scope                     : me\n     * });\n     * ```\n     * @param {Object|String} name\n     * @param {Function|String} [eventId]\n     * @param {Neo.core.Base} [scope]\n     */","meta":{"range":[8763,10157],"filename":"Observable.mjs","lineno":282,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057114","name":"Observable#removeListener","type":"MethodDefinition","paramnames":["name","eventId","scope"]},"vars":{"":null}},"description":"<p>There are different syntax&#39;s how you can use this method.\nUsing the eventId:</p>\n<pre><code>this.removeListener(&#39;change&#39;, &#39;neo-event-7&#39;);\n</code></pre>\n<p>Passing the handler method:</p>\n<pre><code>this.removeListener(&#39;change&#39;, this.onChange, this);\n</code></pre>\n<p>Passing an object:</p>\n<pre><code>me.field.un({\n    change                    : me.onFieldChange,\n    changeClearToOriginalValue: me.onFieldChange,\n    scope                     : me\n});\n</code></pre>\n","params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["function","String"]},"optional":true,"name":"eventId"},{"type":{"names":["Neo.core.Base"]},"optional":true,"name":"scope"}],"name":"removeListener","longname":"Observable#removeListener","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#removeListener","$kind":"method","id":1789,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Alias for removeListener\n     * @param {Object|String} name\n     * @param {String} [eventId]\n     */","meta":{"range":[10438,10495],"filename":"Observable.mjs","lineno":347,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057304","name":"Observable#un","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"<p>Alias for removeListener</p>\n","params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["String"]},"optional":true,"name":"eventId"}],"name":"un","longname":"Observable#un","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#un","$kind":"method","id":1790,"neoClassName":"Neo.core.Observable"}]}