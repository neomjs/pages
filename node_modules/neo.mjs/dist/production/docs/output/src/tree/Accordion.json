{"classData":[{"comment":"/**\n * @class Neo.tree.Accordion\n * @extends Neo.tree.List\n *\n * Accordion Store expects the following fields\n *\n *      [\n *          iconCls,        // can be defined in fields:icon\n *          content,        // can be defined in fields:text\n *          name,           // can be defined in fields:header\n *\n *          collapsed,      // collapsed state for non-leaf-items\n *          isLeaf,         // defines it item is leaf-item\n *          id,             // defines item id\n *          parentId        // leaf or sub-items need a parentId\n *      ]\n *\n */","meta":{"filename":"Accordion.mjs","lineno":7,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"class","name":"Accordion","augments":["Neo.tree.List"],"memberof":"Neo.tree","longname":"Neo.tree.Accordion","scope":"static","$longname":"Neo.tree.Accordion","$kind":"class","id":4731,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * @member {String} className='Neo.tree.Accordion'\n         * @protected\n         */","meta":{"filename":"Accordion.mjs","lineno":31,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.tree.Accordion'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":4732,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * @member {String} ntype='treeaccordion'\n         * @protected\n         */","meta":{"filename":"Accordion.mjs","lineno":36,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'treeaccordion'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":4733,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * @member {String[]} baseCls=['neo-tree-accordion']\n         */","meta":{"filename":"Accordion.mjs","lineno":40,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"member","name":"baseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-tree-accordion']","longname":"baseCls","scope":"global","$longname":"baseCls","$kind":"property","id":4734,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * Set to false to hide the initial root item\n         * @member {Boolean} firstParentIsVisible=true\n         */","meta":{"filename":"Accordion.mjs","lineno":45,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>Set to false to hide the initial root item</p>\n","kind":"member","name":"firstParentIsVisible","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"firstParentIsVisible","scope":"global","$longname":"firstParentIsVisible","$kind":"property","id":4735,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * Define the field names for the store to show header, text and icon\n         * @member {Object} fields={header:'name',icon:'iconCls',text:'content'}\n         */","meta":{"filename":"Accordion.mjs","lineno":50,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>Define the field names for the store to show header, text and icon</p>\n","kind":"member","name":"fields","type":{"names":["Object"]},"defaultvalue":"{header:'name',icon:'iconCls',text:'content'}","longname":"fields","scope":"global","$longname":"fields","$kind":"property","id":4736,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * Set to false will auto expand root parent items and disallow collapsing\n         * @member {Boolean} rootParentIsCollapsible=false\n         */","meta":{"filename":"Accordion.mjs","lineno":59,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>Set to false will auto expand root parent items and disallow collapsing</p>\n","kind":"member","name":"rootParentIsCollapsible","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"rootParentIsCollapsible","scope":"global","$longname":"rootParentIsCollapsible","$kind":"property","id":4737,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * Currently selected item, which is bindable\n         * @member {Record[]|null} selection=null\n         *\n         * @example\n         *     module: AccordionTree,\n         *     bind  : {selection: {twoWay: true, value: data => data.selection}}\n         *\n         *     ntype: 'component',\n         *     bind : {html: data => data.selection[0].name}\n         */","meta":{"filename":"Accordion.mjs","lineno":71,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>Currently selected item, which is bindable</p>\n","kind":"member","name":"selection","type":{"names":["Array.<Record>","null"]},"defaultvalue":null,"examples":["module: AccordionTree,\n    bind  : {selection: {twoWay: true, value: data => data.selection}}\n\n    ntype: 'component',\n    bind : {html: data => data.selection[0].name}"],"longname":"selection","scope":"global","$longname":"selection","$kind":"property","id":4738,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * Set to false will hide the icons for all leaf items\n         * @member {Boolean} showIcon=true\n         */","meta":{"filename":"Accordion.mjs","lineno":76,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>Set to false will hide the icons for all leaf items</p>\n","kind":"member","name":"showIcon","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"showIcon","scope":"global","$longname":"showIcon","$kind":"property","id":4739,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * @member {Boolean} showCollapseExpandAllIcons=true\n         */","meta":{"filename":"Accordion.mjs","lineno":80,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"member","name":"showCollapseExpandAllIcons","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"showCollapseExpandAllIcons","scope":"global","$longname":"showCollapseExpandAllIcons","$kind":"property","id":4740,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n         * @member {Object} _vdom\n         */","meta":{"filename":"Accordion.mjs","lineno":84,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"kind":"member","name":"_vdom","type":{"names":["Object"]},"longname":"_vdom","scope":"global","$longname":"_vdom","$kind":"property","id":4741,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     *\n     */","meta":{"range":[2909,3085],"filename":"Accordion.mjs","lineno":93,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146098","name":"AccordionTree#onConstructed","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"onConstructed","longname":"AccordionTree#onConstructed","kind":"function","memberof":"AccordionTree","scope":"instance","params":[],"$longname":"AccordionTree#onConstructed","$kind":"method","id":4742,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Called when changing firstParentIsVisible\n     * First store item gets marked and additional css class\n     *\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     */","meta":{"range":[3287,3507],"filename":"Accordion.mjs","lineno":111,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146123","name":"AccordionTree#afterSetFirstParentIsVisible","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Called when changing firstParentIsVisible\nFirst store item gets marked and additional css class</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"name":"afterSetFirstParentIsVisible","longname":"AccordionTree#afterSetFirstParentIsVisible","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#afterSetFirstParentIsVisible","$kind":"method","id":4743,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Called when changing rootParentsAreCollapsible\n     * Ensures that root items are expanded if not collapsible\n     *\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     */","meta":{"range":[3716,4140],"filename":"Accordion.mjs","lineno":126,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146158","name":"AccordionTree#afterSetRootParentsAreCollapsible","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Called when changing rootParentsAreCollapsible\nEnsures that root items are expanded if not collapsible</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"name":"afterSetRootParentsAreCollapsible","longname":"AccordionTree#afterSetRootParentsAreCollapsible","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#afterSetRootParentsAreCollapsible","$kind":"method","id":4744,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Called when changing showIcon\n     * Changes the display of the icons\n     *\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     */","meta":{"range":[4309,4794],"filename":"Accordion.mjs","lineno":149,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146221","name":"AccordionTree#afterSetShowIcon","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Called when changing showIcon\nChanges the display of the icons</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"name":"afterSetShowIcon","longname":"AccordionTree#afterSetShowIcon","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#afterSetShowIcon","$kind":"method","id":4745,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Triggered before the selectionModel config gets changed.\n     * @param {Neo.selection.Model} value\n     * @param {Neo.selection.Model} oldValue\n     * @returns {Neo.selection.Model}\n     * @protected\n     */","meta":{"range":[5023,5177],"filename":"Accordion.mjs","lineno":174,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146294","name":"AccordionTree#beforeSetSelectionModel","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the selectionModel config gets changed.</p>\n","params":[{"type":{"names":["Neo.selection.Model"]},"name":"value"},{"type":{"names":["Neo.selection.Model"]},"name":"oldValue"}],"returns":[{"type":{"names":["Neo.selection.Model"]}}],"access":"protected","name":"beforeSetSelectionModel","longname":"AccordionTree#beforeSetSelectionModel","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#beforeSetSelectionModel","$kind":"method","id":4746,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Remove all items from the accordion\n     * If you do not need to update the view after clearing, set `withUpdate = false`\n     *\n     * @param {Boolean} [withUpdate=true]\n     */","meta":{"range":[5377,5487],"filename":"Accordion.mjs","lineno":186,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146309","name":"AccordionTree#clear","type":"MethodDefinition","paramnames":["withUpdate"]},"vars":{"":null}},"description":"<p>Remove all items from the accordion\nIf you do not need to update the view after clearing, set <code>withUpdate = false</code></p>\n","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":true,"name":"withUpdate"}],"name":"clear","longname":"AccordionTree#clear","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#clear","$kind":"method","id":4747,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Remove all items from the selection\n     */","meta":{"range":[5552,5619],"filename":"Accordion.mjs","lineno":195,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146335","name":"AccordionTree#clearSelection","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Remove all items from the selection</p>\n","name":"clearSelection","longname":"AccordionTree#clearSelection","kind":"function","memberof":"AccordionTree","scope":"instance","params":[],"$longname":"AccordionTree#clearSelection","$kind":"method","id":4748,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * @param {String} [parentId] The parent node\n     * @param {Object} [vdomRoot] The vdom template root for the current sub tree\n     * @param {Number} level The hierarchy level of the tree\n     * @returns {Object} vdomRoot\n     * @protected\n     */","meta":{"range":[5886,9268],"filename":"Accordion.mjs","lineno":206,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146346","name":"AccordionTree#createItems","type":"MethodDefinition","paramnames":["parentId","vdomRoot","level"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"optional":true,"description":"<p>The parent node</p>\n","name":"parentId"},{"type":{"names":["Object"]},"optional":true,"description":"<p>The vdom template root for the current sub tree</p>\n","name":"vdomRoot"},{"type":{"names":["Number"]},"description":"<p>The hierarchy level of the tree</p>\n","name":"level"}],"returns":[{"type":{"names":["Object"]},"description":"vdomRoot"}],"access":"protected","name":"createItems","longname":"AccordionTree#createItems","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#createItems","$kind":"method","id":4749,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Expands an item based on the record\n     * @param {Object} record\n     */","meta":{"range":[9364,9634],"filename":"Accordion.mjs","lineno":306,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146707","name":"AccordionTree#expandItem","type":"MethodDefinition","paramnames":["record"]},"vars":{"":null}},"description":"<p>Expands an item based on the record</p>\n","params":[{"type":{"names":["Object"]},"name":"record"}],"name":"expandItem","longname":"AccordionTree#expandItem","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#expandItem","$kind":"method","id":4750,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * @param {Object} item\n     * @param {Object} data\n     */","meta":{"range":[9712,10469],"filename":"Accordion.mjs","lineno":321,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146755","name":"AccordionTree#onItemClick","type":"MethodDefinition","paramnames":["item","data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"item"},{"type":{"names":["Object"]},"name":"data"}],"name":"onItemClick","longname":"AccordionTree#onItemClick","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#onItemClick","$kind":"method","id":4751,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n             * The folderItemClick event fires when a click occurs on a list item which does have child items.\n             * Passes the item record to the event handler.\n             * @event folderItemClick\n             * @returns {Object} record\n             */","meta":{"filename":"Accordion.mjs","lineno":333,"columnno":12,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{}},"description":"<p>The folderItemClick event fires when a click occurs on a list item which does have child items.\nPasses the item record to the event handler.</p>\n","kind":"event","name":"folderItemClick","returns":[{"type":{"names":["Object"]},"description":"record"}],"longname":"event:folderItemClick","scope":"global","$longname":"event:folderItemClick","$kind":"event","id":4752,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * To place the root item at the correct location\n     * @returns {Object}\n     */","meta":{"range":[10570,10627],"filename":"Accordion.mjs","lineno":349,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146834","name":"AccordionTree#getListItemsRoot","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>To place the root item at the correct location</p>\n","returns":[{"type":{"names":["Object"]}}],"name":"getListItemsRoot","longname":"AccordionTree#getListItemsRoot","kind":"function","memberof":"AccordionTree","scope":"instance","params":[],"$longname":"AccordionTree#getListItemsRoot","$kind":"method","id":4753,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Accordion gaining focus without selection => setSelection\n     * @param {Object} data\n     */","meta":{"range":[10742,10951],"filename":"Accordion.mjs","lineno":357,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146846","name":"AccordionTree#onFocus","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Accordion gaining focus without selection =&gt; setSelection</p>\n","params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onFocus","longname":"AccordionTree#onFocus","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#onFocus","$kind":"method","id":4754,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Called from SelectionModel select()\n     * @param {String[]} value\n     */","meta":{"range":[11047,11347],"filename":"Accordion.mjs","lineno":369,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146876","name":"AccordionTree#onSelect","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Called from SelectionModel select()</p>\n","params":[{"type":{"names":["Array.<String>"]},"name":"value"}],"name":"onSelect","longname":"AccordionTree#onSelect","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#onSelect","$kind":"method","id":4755,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * After the store loaded, create the items for the list\n     * @param {Record[]} records\n     */","meta":{"range":[11463,11857],"filename":"Accordion.mjs","lineno":387,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146925","name":"AccordionTree#onStoreLoad","type":"MethodDefinition","paramnames":["records"]},"vars":{"":null}},"description":"<p>After the store loaded, create the items for the list</p>\n","params":[{"type":{"names":["Array.<Record>"]},"name":"records"}],"name":"onStoreLoad","longname":"AccordionTree#onStoreLoad","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#onStoreLoad","$kind":"method","id":4756,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Update a record\n     * @param {Object}         data\n     * @param {Object[]}       data.fields\n     * @param {Number}         data.index\n     * @param {Neo.data.Model} data.model\n     * @param {Record}         data.record\n     */","meta":{"range":[12108,12892],"filename":"Accordion.mjs","lineno":411,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100146995","name":"AccordionTree#onStoreRecordChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Update a record</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.fields"},{"type":{"names":["Number"]},"name":"data.index"},{"type":{"names":["Neo.data.Model"]},"name":"data.model"},{"type":{"names":["Record"]},"name":"data.record"}],"name":"onStoreRecordChange","longname":"AccordionTree#onStoreRecordChange","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#onStoreRecordChange","$kind":"method","id":4757,"neoClassName":"Neo.tree.Accordion"},{"comment":"/**\n     * Set the selection either bei record id or record.\n     * You can pass a record or a recordId as value\n     *\n     * @param {Record|Record[]|Number|Number[]|String|String[]} value\n     */","meta":{"range":[13100,13712],"filename":"Accordion.mjs","lineno":443,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/tree","code":{"id":"astnode100147102","name":"AccordionTree#setSelection","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Set the selection either bei record id or record.\nYou can pass a record or a recordId as value</p>\n","params":[{"type":{"names":["Record","Array.<Record>","Number","Array.<Number>","String","Array.<String>"]},"name":"value"}],"name":"setSelection","longname":"AccordionTree#setSelection","kind":"function","memberof":"AccordionTree","scope":"instance","$longname":"AccordionTree#setSelection","$kind":"method","id":4758,"neoClassName":"Neo.tree.Accordion"}]}