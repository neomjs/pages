"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,803],{96:(e,o,s)=>{s.r(o),s.d(o,{default:()=>l});var a=s(110);class t extends a.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,preloadFilesDelay:5e3};cache=[];get isLoading(){return!!this.#e&&!!this.#o}#e=null;#o=null;construct(e){super.construct(e);let o=this;if(o.#e=new Promise(e=>{o.#o=e}),!1===o.preloadFilesDelay)o.#o(),o.#o=null;else{const e=Neo.isNumber(o.preloadFilesDelay)?o.preloadFilesDelay:0;0===e?o.#s():o.timeout(e).then(()=>{o.#o&&o.#s()})}}async#s(){let e=this;if(e.#o){const o=e.#o;e.#o=null,await e.loadFiles(),o()}}async initAsync(){await super.initAsync(),await this.#e}afterSetIsReady(e,o){e&&this.#a()}cacheMethodCall(e){let o=this;return o.#o&&o.#s(),new Promise((s,a)=>{o.cache.push({...e,reject:a,resolve:s})})}async loadFiles(){}onInterceptRemotes(e){return this.cacheMethodCall({fn:e.remoteMethod,data:e.data})}async#a(){let e=this;for(const o of e.cache){let s;try{s=e[o.fn](o.data),Neo.isPromise(s)&&(s=await s),o.resolve(s)}catch(e){o.reject(e);break}}e.cache=[]}}const l=Neo.setupClass(t)},803:(e,o,s)=>{s.r(o),s.d(o,{default:()=>i});var a=s(96),t=s(392),l=s(160);s(691);class r extends a.default{static observable=!0;static config={className:"Neo.main.addon.GoogleMaps",remote:{app:["addMarker","create","destroyMarkers","geocode","hideMarker","panTo","removeMap","removeMarker","setCenter","setZoom","showMarker"]}};geoCoder=null;maps={};markers={};addMarker(e){let o,s,a=this,{mapId:t}=e;a.maps[t]?(Neo.ns(`${t}`,!0,a.markers),a.markers[t][e.id]=s=new google.maps.Marker({icon:e.icon,label:e.label,map:a.maps[t],neoId:e.id,neoMapId:t,position:e.position,title:e.title}),s.addListener("click",a.onMarkerClick.bind(a,s))):o=a.on("mapCreated",s=>{t===s&&(a.un(o),a.addMarker(e))})}create(e){let o,s=this,{id:a}=e;s.maps[a]=o=new google.maps.Map(t.A.getElement(a),{center:e.center,fullscreenControl:e.fullscreenControl,maxZoom:e.maxZoom,minZoom:e.minZoom,zoom:e.zoom,zoomControl:e.zoomControl,...e.mapOptions}),o.addListener("zoom_changed",s.onMapZoomChange.bind(s,o,a)),s.fire("mapCreated",a)}destroyMarkers(e){let o=this.markers[e.mapId]||{};Object.values(o).forEach(e=>e.setMap(null)),delete this.markers[e.mapId]}async geocode(e){let o,s=this;return s.geoCoder||(s.geoCoder=new google.maps.Geocoder),o=await s.geoCoder.geocode(e),JSON.parse(JSON.stringify(o))}hideMarker(e){this.markers[e.mapId][e.id].setMap(null)}async loadFiles(){let e=Neo.config.googleMapsApiKey;await t.A.loadScript(` https://maps.googleapis.com/maps/api/js?key=${e}&v=weekly&callback=Neo.emptyFn`)}onMapZoomChange(e,o){l.A.sendMessageToApp({id:o,path:[{cls:[],id:o}],type:"googleMapZoomChange",value:e.zoom})}onMarkerClick(e,o){let s=l.A.getMouseEventData(o.domEvent);l.A.sendMessageToApp({id:e.neoId,path:[{cls:[],id:e.neoMapId}],type:"googleMarkerClick",domEvent:s})}panTo(e){this.maps[e.mapId].panTo(e.position)}removeMap(e){delete this.maps[e.mapId],delete this.markers[e.mapId]}removeMarker(e){let o=this.markers[e.mapId];o[e.id].setMap(null),delete o[e.id]}setCenter(e){this.maps[e.id].setCenter(e.value)}setZoom(e){this.maps[e.id].setZoom(e.value)}showMarker(e){this.markers[e.mapId][e.id].setMap(this.maps[e.mapId])}}const i=Neo.setupClass(r)}}]);