"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,803],{96:(e,a,o)=>{o.r(a),o.d(a,{default:()=>l});var s=o(583);class t extends s.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,isReady_:!1,preloadFilesDelay:5e3};cache=[];isLoading=!1;loadingTimeoutId=null;construct(e){super.construct(e);let a=this;a.loadFiles&&(0===a.preloadFilesDelay?a.loadFiles():Neo.isNumber(a.preloadFilesDelay)&&(a.loadingTimeoutId=setTimeout((()=>{a.loadFiles()}),a.preloadFilesDelay)))}afterSetIsReady(e,a){if(e){let e,a=this;a.cache.forEach((o=>{e=a[o.fn](o.data),o.resolve(e)})),a.cache=[]}}cacheMethodCall(e){let a=this;return a.isLoading||(a.loadingTimeoutId&&clearTimeout(a.loadingTimeoutId),a.loadingTimeoutId=null,a.loadFiles()),new Promise(((o,s)=>{a.cache.push({...e,resolve:o})}))}}const l=Neo.setupClass(t)},803:(e,a,o)=>{o.r(a),o.d(a,{default:()=>i});var s=o(96),t=o(254),l=o(160),r=o(691);class d extends s.default{static config={className:"Neo.main.addon.GoogleMaps",mixins:[r.A],remote:{app:["addMarker","create","destroyMarkers","geocode","hideMarker","panTo","removeMap","removeMarker","setCenter","setZoom","showMarker"]}};geoCoder=null;maps={};markers={};construct(e){super.construct(e),this.loadApi()}addMarker(e){let a,o,s=this,{mapId:t}=e;s.maps[t]?(Neo.ns(`${t}`,!0,s.markers),s.markers[t][e.id]=o=new google.maps.Marker({icon:e.icon,label:e.label,map:s.maps[t],neoId:e.id,neoMapId:t,position:e.position,title:e.title}),o.addListener("click",s.onMarkerClick.bind(s,o))):a=s.on("mapCreated",(o=>{t===o&&(s.un(a),s.addMarker(e))}))}create(e){let a,o=this,{id:s}=e;o.maps[s]=a=new google.maps.Map(t.A.getElement(s),{center:e.center,fullscreenControl:e.fullscreenControl,maxZoom:e.maxZoom,minZoom:e.minZoom,zoom:e.zoom,zoomControl:e.zoomControl,...e.mapOptions}),a.addListener("zoom_changed",o.onMapZoomChange.bind(o,a,s)),o.fire("mapCreated",s)}destroyMarkers(e){let a=this.markers[e.mapId]||{};Object.values(a).forEach((e=>e.setMap(null))),delete this.markers[e.mapId]}async geocode(e){let a,o=this;return o.geoCoder||(o.geoCoder=new google.maps.Geocoder),a=await o.geoCoder.geocode(e),JSON.parse(JSON.stringify(a))}hideMarker(e){this.markers[e.mapId][e.id].setMap(null)}loadApi(){let e=Neo.config.googleMapsApiKey;t.A.loadScript(` https://maps.googleapis.com/maps/api/js?key=${e}&v=weekly&callback=Neo.emptyFn`).then((()=>{console.log("GoogleMaps API loaded")}))}onMapZoomChange(e,a){l.A.sendMessageToApp({id:a,path:[{cls:[],id:a}],type:"googleMapZoomChange",value:e.zoom})}onMarkerClick(e,a){let o=l.A.getMouseEventData(a.domEvent);l.A.sendMessageToApp({id:e.neoId,path:[{cls:[],id:e.neoMapId}],type:"googleMarkerClick",domEvent:o})}panTo(e){this.maps[e.mapId].panTo(e.position)}removeMap(e){delete this.maps[e.mapId],delete this.markers[e.mapId]}removeMarker(e){let a=this.markers[e.mapId];a[e.id].setMap(null),delete a[e.id]}setCenter(e){this.maps[e.id].setCenter(e.value)}setZoom(e){this.maps[e.id].setZoom(e.value)}showMarker(e){this.markers[e.mapId][e.id].setMap(this.maps[e.mapId])}}const i=Neo.setupClass(d)}}]);