"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,803],{96:(e,s,o)=>{o.r(s),o.d(s,{default:()=>t});var a=o(583);class l extends a.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,preloadFilesDelay:5e3};cache=[];get isLoading(){return!!this.#e&&!!this.#s}#e=null;#s=null;construct(e){super.construct(e);let s=this;if(s.#e=new Promise(e=>{s.#s=e}),!1===s.preloadFilesDelay)s.#s(),s.#s=null;else{const e=Neo.isNumber(s.preloadFilesDelay)?s.preloadFilesDelay:0;0===e?s.#o():s.timeout(e).then(()=>{s.#s&&s.#o()})}}async#o(){let e=this;if(e.#s){const s=e.#s;e.#s=null,await e.loadFiles(),s()}}async initAsync(){await super.initAsync(),await this.#e}afterSetIsReady(e,s){e&&this.#a()}cacheMethodCall(e){let s=this;return s.#s&&s.#o(),new Promise((o,a)=>{s.cache.push({...e,reject:a,resolve:o})})}async loadFiles(){}async#a(){let e=this;for(const s of e.cache){let o;try{o=e[s.fn](s.data),Neo.isPromise(o)&&(o=await o),s.resolve(o)}catch(e){s.reject(e);break}}e.cache=[]}}const t=Neo.setupClass(l)},803:(e,s,o)=>{o.r(s),o.d(s,{default:()=>i});var a=o(96),l=o(392),t=o(160);o(215);class r extends a.default{static observable=!0;static config={className:"Neo.main.addon.GoogleMaps",remote:{app:["addMarker","create","destroyMarkers","geocode","hideMarker","panTo","removeMap","removeMarker","setCenter","setZoom","showMarker"]}};geoCoder=null;maps={};markers={};addMarker(e){let s,o,a=this,{mapId:l}=e;a.maps[l]?(Neo.ns(`${l}`,!0,a.markers),a.markers[l][e.id]=o=new google.maps.Marker({icon:e.icon,label:e.label,map:a.maps[l],neoId:e.id,neoMapId:l,position:e.position,title:e.title}),o.addListener("click",a.onMarkerClick.bind(a,o))):s=a.on("mapCreated",o=>{l===o&&(a.un(s),a.addMarker(e))})}create(e){let s,o=this,{id:a}=e;o.maps[a]=s=new google.maps.Map(l.A.getElement(a),{center:e.center,fullscreenControl:e.fullscreenControl,maxZoom:e.maxZoom,minZoom:e.minZoom,zoom:e.zoom,zoomControl:e.zoomControl,...e.mapOptions}),s.addListener("zoom_changed",o.onMapZoomChange.bind(o,s,a)),o.fire("mapCreated",a)}destroyMarkers(e){let s=this.markers[e.mapId]||{};Object.values(s).forEach(e=>e.setMap(null)),delete this.markers[e.mapId]}async geocode(e){let s,o=this;return o.geoCoder||(o.geoCoder=new google.maps.Geocoder),s=await o.geoCoder.geocode(e),JSON.parse(JSON.stringify(s))}hideMarker(e){this.markers[e.mapId][e.id].setMap(null)}async loadFiles(){let e=Neo.config.googleMapsApiKey;await l.A.loadScript(` https://maps.googleapis.com/maps/api/js?key=${e}&v=weekly&callback=Neo.emptyFn`)}onMapZoomChange(e,s){t.A.sendMessageToApp({id:s,path:[{cls:[],id:s}],type:"googleMapZoomChange",value:e.zoom})}onMarkerClick(e,s){let o=t.A.getMouseEventData(s.domEvent);t.A.sendMessageToApp({id:e.neoId,path:[{cls:[],id:e.neoMapId}],type:"googleMarkerClick",domEvent:o})}panTo(e){this.maps[e.mapId].panTo(e.position)}removeMap(e){delete this.maps[e.mapId],delete this.markers[e.mapId]}removeMarker(e){let s=this.markers[e.mapId];s[e.id].setMap(null),delete s[e.id]}setCenter(e){this.maps[e.id].setCenter(e.value)}setZoom(e){this.maps[e.id].setZoom(e.value)}showMarker(e){this.markers[e.mapId][e.id].setMap(this.maps[e.mapId])}}const i=Neo.setupClass(r)}}]);