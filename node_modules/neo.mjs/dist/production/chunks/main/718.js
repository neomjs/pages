"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,718],{96:(a,e,t)=>{t.r(e),t.d(e,{default:()=>d});var s=t(583);class i extends s.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,isReady_:!1,preloadFilesDelay:5e3};cache=[];isLoading=!1;loadingTimeoutId=null;construct(a){super.construct(a);let e=this;e.loadFiles&&(0===e.preloadFilesDelay?e.loadFiles():Neo.isNumber(e.preloadFilesDelay)&&(e.loadingTimeoutId=setTimeout(()=>{e.loadFiles()},e.preloadFilesDelay)))}afterSetIsReady(a,e){if(a){let a,e=this;e.cache.forEach(t=>{a=e[t.fn](t.data),t.resolve(a)}),e.cache=[]}}cacheMethodCall(a){let e=this;return e.isLoading||(e.loadingTimeoutId&&clearTimeout(e.loadingTimeoutId),e.loadingTimeoutId=null,e.loadFiles()),new Promise((t,s)=>{e.cache.push({...a,resolve:t})})}}const d=Neo.setupClass(i)},337:(a,e,t)=>{t.r(e),t.d(e,{default:()=>o});var s=t(96),i=t(392);class d extends s.default{static config={className:"Neo.main.addon.AmCharts",charts:{},dataMap:{},downloadPath:"https://cdn.amcharts.com/lib/4/",fallbackPath:"https://raw.githubusercontent.com/neomjs/pages/main/resources_pub/amCharts/",remote:{app:["callMethod","create","destroy","setProperties","setProperty","updateData"]},useFallbackPath:!1};afterSetIsReady(a,e){if(super.afterSetIsReady(a,e),a){let a=this;a.timeout(1e3).then(()=>{Object.entries(a.dataMap).forEach(([e,t])=>{a.updateData(t)}),a.dataMap={}})}}callMethod(a){let e=this;if(!e.isReady)return e.cacheMethodCall({fn:"callMethod",data:a});if(e.hasChart(a.id)){let t=e.charts[a.id],s=a.path.split("."),i=s.pop(),d=s.length<1?t:Neo.ns(s.join("."),!1,t);d[i].call(d,...a.params||[])}}combineSeriesTooltip(a){a.series.each(e=>{e.adapter.add("tooltipText",()=>{let e="[bold]{dateX}[/]\n";return a.series.each(a=>{e+="["+a.stroke+"]●[/] "+a.name+": {"+a.dataFields.valueY+"}\n"}),e})})}create(a){let e=this;if(!e.isReady)return e.cacheMethodCall({fn:"create",data:a});am4core.useTheme(am4themes_dark),e.charts[a.id]=am4core.createFromConfig(a.config,a.id,globalThis[a.package][a.type||"XYChart"]),a.combineSeriesTooltip&&e.combineSeriesTooltip(e.charts[a.id]),a.data?e.updateData({data:a.data,dataPath:a.dataPath,id:a.id}):e.dataMap[a.id]&&(e.updateData(e.dataMap[a.id]),delete e.dataMap[a.id])}destroy(a){let e=this;if(!e.isReady)return e.cacheMethodCall({fn:"destroy",data:a});e.charts[a.id]?.dispose?.(),delete e.charts[a.id]}hasChart(a){return!!this.charts[a]}loadFiles(a=!1){let e,t=this,s=t.useFallbackPath||a;s&&Neo.config.isGitHubPages?(e="../../../../resources_pub/amCharts/","development"!==Neo.config.environment&&(e=`../../${e}`)):e=s?t.fallbackPath:t.downloadPath,t.isLoading=!0,i.A.loadScript(e+"core.js").then(()=>{Promise.all([i.A.loadScript(e+"charts.js"),i.A.loadScript(e+"maps.js"),i.A.loadScript(e+"themes/dark.js"),i.A.loadScript(e+"geodata/worldLow.js")]).then(()=>{t.isLoading=!1,t.isReady=!0})}).catch(e=>{a||t.useFallbackPath||(console.log("Download from amcharts.com failed, switching to fallback",e),t.loadFiles(!0))})}setProperties(a){let e=this;if(!e.isReady)return e.cacheMethodCall({fn:"setProperties",data:a});Object.entries(a.properties).forEach(([t,s])=>{e.setProperty({id:a.id,path:t,value:s})})}setProperty(a){if(!this.isReady)return this.cacheMethodCall({fn:"setProperty",data:a});if(this.hasChart(a.id)){let e=this.charts[a.id],t=a.path.split("."),s=t.pop();Neo.ns(t.join("."),!1,e)[s]=a.isColor?am4core.color(a.value):a.value}}updateData(a){let e=this;if(!e.isReady)return e.cacheMethodCall({fn:"updateData",data:a});if(e.hasChart(a.id)){let t=e.charts[a.id];""===a.dataPath?t.data=a.data:Neo.ns(a.dataPath,!1,t).data=a.data}else e.dataMap[a.id]=a}}const o=Neo.setupClass(d)}}]);