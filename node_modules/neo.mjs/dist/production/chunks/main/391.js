"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,391],{96:(e,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(247);class o extends t.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,preloadFilesDelay:5e3};cache=[];get isLoading(){return!!this.#e&&!!this.#s}#e=null;#s=null;construct(e){super.construct(e);let s=this;if(s.#e=new Promise(e=>{s.#s=e}),!1===s.preloadFilesDelay)s.#s(),s.#s=null;else{const e=Neo.isNumber(s.preloadFilesDelay)?s.preloadFilesDelay:0;0===e?s.#a():s.timeout(e).then(()=>{s.#s&&s.#a()})}}async#a(){let e=this;if(e.#s){const s=e.#s;e.#s=null,await e.loadFiles(),s()}}async initAsync(){await super.initAsync(),await this.#e}afterSetIsReady(e,s){e&&this.#t()}cacheMethodCall(e){let s=this;return s.#s&&s.#a(),new Promise((a,t)=>{s.cache.push({...e,reject:t,resolve:a})})}async loadFiles(){}onInterceptRemotes(e){return this.cacheMethodCall({fn:e.remoteMethod,data:e.data})}async#t(){let e=this;for(const s of e.cache){let a;try{a=e[s.fn](s.data),Neo.isPromise(a)&&(a=await a),s.resolve(a)}catch(e){s.reject(e);break}}e.cache=[]}}const l=Neo.setupClass(o)},391:(e,s,a)=>{a.r(s),a.d(s,{default:()=>i});var t=a(96),o=a(392);class l extends t.default{static config={className:"Neo.main.addon.MapboxGL",dataMap:{},downloadPath:"https://api.mapbox.com/mapbox-gl-js/",layers:{},maps:{},mapsToCreate:[],remote:{app:["addLayers","addSources","autoResize","center","create","destroy","setFilter","setLayoutProperty","setPaintProperty","setStyle","updateData","zoom"]},scriptsLoaded_:!1,sources:{},styleMap:{},version:"v1.9.1",zoomMap:{}};construct(e){super.construct(e),this.insertMapboxGLScripts()}addLayers(e){let s,a=this,t=a.maps[e.id];t?e.layers.forEach(e=>{s=e.beforeId,delete e.beforeId,t.addLayer(e,s)}):a.layers[e.id]=Object.assign(a.layers[e.id]||{},e)}addSources(e){let s,a=this,t=a.maps[e.id];t?e.sources.forEach(e=>{s=e.id,delete e.id,t.addSource(s,e)}):a.sources[e.id]=Object.assign(a.sources[e.id]||{},e)}afterSetScriptsLoaded(e,s){if(e){let e=this;e.mapsToCreate.forEach(s=>{e.create(s)}),e.mapsToCreate=[]}}applyStyleObject(e,s,a){a&&(this.styleMap[a]=s),s.layers.forEach(s=>{Object.entries(s.paint).forEach(([a,t])=>{e.setPaintProperty(s.id,a,t)})})}autoResize(e){let s=this.maps[e.id];s&&this.timeout(100).then(()=>{s.resize()})}center(e){let s=this.maps[e.id],a={lat:e.lat,lng:e.lng};s&&(e.animate?s.flyTo({center:a}):s.setCenter(a))}create(e){let s=this;if(s.scriptsLoaded){mapboxgl.accessToken=e.accessToken;let a=e.zoom;s.zoomMap[e.id]&&(a=s.zoomMap[e.id].zoom,delete s.zoomMap[e.id]),s.maps[e.id]=new mapboxgl.Map({center:e.center,container:e.id,style:e.mapboxStyle,zoom:a}),s.maps[e.id].on("load",s.onMapLoaded.bind(s,e))}else s.mapsToCreate.push(e)}destroy(e){this.maps[e.id].remove(),delete this.maps[e.id]}hasMap(e){return!!this.maps[e]}insertMapboxGLScripts(){let e=this,s=e.downloadPath+e.version+"/";Promise.all([o.A.loadScript(s+"mapbox-gl.js"),o.A.loadStylesheet(s+"mapbox-gl.css")]).then(()=>{e.scriptsLoaded=!0})}onMapLoaded(e,s){let a=this,t=e.id;e.sources?a.addSources({id:e.id,sources:e.sources}):a.sources[t]&&(a.addSources(a.sources[t]),delete a.sources[t]),e.layers?a.addLayers({id:e.id,layers:e.layers}):a.layers[t]&&(a.addLayers(a.layers[t]),delete a.layers[t]),s.target.loaded()?a.onMapReallyLoaded(e,s):s.target.once("idle",a.onMapReallyLoaded.bind(a,e))}onMapReallyLoaded(e,s){let a=this;a.timeout(100).then(()=>{e.data?a.updateData({data:e.data,dataSourceId:e.dataSourceId,id:e.id}):a.dataMap[e.id]&&a.updateData(a.dataMap[e.id])})}setFilter(e){let s=this.maps[e.id];s&&s.setFilter(e.layerId,e.value,e.options||{})}setLayoutProperty(e){let s=this.maps[e.id];s&&s.setLayoutProperty(e.layerId,e.key,e.value,e.options||{})}setPaintProperty(e){let s=this.maps[e.id];s&&s.setPaintProperty(e.layerId,e.key,e.value,e.options||{})}setStyle(e){let s=this;s.scriptsLoaded&&s.hasMap(e.id)&&Neo.isString(e.style)&&(0===e.style.indexOf("mapbox://styles/")&&(e.style=e.style.substring(16)),s.styleMap[e.style]?s.applyStyleObject(s.maps[e.id],s.styleMap[e.style]):fetch(`https://api.mapbox.com/styles/v1/${e.style}?access_token=${e.accessToken}`).then(e=>e.json()).then(a=>s.applyStyleObject(s.maps[e.id],a,e.style)))}updateData(e){let s=this;if(s.scriptsLoaded&&s.hasMap(e.id)){let a=s.maps[e.id].getSource(e.dataSourceId);a?(a.setData(e.data),delete s.dataMap[e.id]):s.dataMap[e.id]=e}else s.dataMap[e.id]=e}zoom(e){let s=this.maps[e.id];s?s.setZoom(e.zoom):this.zoomMap[e.id]=e}}const i=Neo.setupClass(l)}}]);