"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[51,96],{96:(e,s,a)=>{a.r(s),a.d(s,{default:()=>l});var i=a(583);class o extends i.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,isReady_:!1,preloadFilesDelay:5e3};cache=[];isLoading=!1;loadingTimeoutId=null;construct(e){super.construct(e);let s=this;s.loadFiles&&(0===s.preloadFilesDelay?s.loadFiles():Neo.isNumber(s.preloadFilesDelay)&&(s.loadingTimeoutId=setTimeout((()=>{s.loadFiles()}),s.preloadFilesDelay)))}afterSetIsReady(e,s){if(e){let e,s=this;s.cache.forEach((a=>{e=s[a.fn](a.data),a.resolve(e)})),s.cache=[]}}cacheMethodCall(e){let s=this;return s.isLoading||(s.loadingTimeoutId&&clearTimeout(s.loadingTimeoutId),s.loadingTimeoutId=null,s.loadFiles()),new Promise(((a,i)=>{s.cache.push({...e,resolve:a})}))}}const l=Neo.setupClass(o)},432:(e,s,a)=>{a.r(s),a.d(s,{default:()=>l});var i=a(96);class o extends i.default{static config={className:"Neo.main.addon.FileSystemAccess",remote:{app:["showDirectoryPicker","showOpenFilePicker","showSaveFilePicker","supported"]}};async showDirectoryPicker(e){return await window.showDirectoryPicker(e)}async showOpenFilePicker(e){return await window.showOpenFilePicker(e)}async showSaveFilePicker(e){return await window.showSaveFilePicker(e)}supported(){return"showOpenFilePicker"in window}}const l=Neo.setupClass(o)}}]);