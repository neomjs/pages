"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[96,265],{96:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var s=a(222);class o extends s.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,preloadFilesDelay:5e3};cache=[];get isLoading(){return!!this.#e&&!!this.#t}#e=null;#t=null;construct(e){super.construct(e);let t=this;if(t.#e=new Promise(e=>{t.#t=e}),!1===t.preloadFilesDelay)t.#t(),t.#t=null;else{const e=Neo.isNumber(t.preloadFilesDelay)?t.preloadFilesDelay:0;0===e?t.#a():t.timeout(e).then(()=>{t.#t&&t.#a()})}}async#a(){let e=this;if(e.#t){const t=e.#t;e.#t=null,await e.loadFiles(),t()}}async initAsync(){await super.initAsync(),await this.#e}afterSetIsReady(e,t){e&&this.#s()}cacheMethodCall(e){let t=this;return t.#t&&t.#a(),new Promise((a,s)=>{t.cache.push({...e,reject:s,resolve:a})})}async loadFiles(){}onInterceptRemotes(e){return this.cacheMethodCall({fn:e.remoteMethod,data:e.data})}async#s(){let e=this;for(const t of e.cache){let a;try{a=e[t.fn](t.data),Neo.isPromise(a)&&(a=await a),t.resolve(a)}catch(e){t.reject(e);break}}e.cache=[]}}const l=Neo.setupClass(o)},265:(e,t,a)=>{a.r(t),a.d(t,{default:()=>n});var s=a(96),o=a(392),l=a(160);class i extends s.default{static config={className:"Neo.main.addon.MonacoEditor",interceptRemotes:["createInstance","destroyInstance","getValue","layoutEditor","setLanguage","setTheme","setValue","updateOptions"],libraryBasePath:Neo.config.basePath+"node_modules/monaco-editor/min/vs",remote:{app:["createInstance","destroyInstance","getValue","layoutEditor","setLanguage","setTheme","setValue","updateOptions"]}};map={};createInstance(e){let t,a=this,{id:s}=e,l=o.A.getElement(s);delete e.appName,delete e.id,l?(t=a.map[s]=monaco.editor.create(l,e),t.getModel().onDidChangeContent(a.onContentChange.bind(a,s))):"development"===Neo.config.environment&&console.warn(`addon.MonacoEditor: node ${s} not found`)}destroyInstance(e){delete this.map[e.id]}getValue(e){return this.map[e.id].getModel().getValue()}layoutEditor(e){this.map[e.id].layout()}async loadFiles(){let e=this.libraryBasePath;window.require={paths:{vs:e}},await o.A.loadScript(e+"/loader.js"),await Promise.all([o.A.loadStylesheet(e+"/editor/editor.main.css",{name:"vs/editor/editor.main"}),o.A.loadScript(e+"/editor/editor.main.nls.js"),o.A.loadScript(e+"/editor/editor.main.js")])}onContentChange(e,t){let a=o.A.getElement(e),s=l.A.getPathFromElement(a).map(e=>l.A.getTargetData(e));l.A.sendMessageToApp({event:t,id:e,path:s,type:"editorChange",value:this.map[e].getModel().getValue()})}setLanguage(e){this.map[e.id].getModel().setLanguage(e.value)}setTheme(e){this.map[e.id]._themeService.setTheme(e.value)}setValue(e){this.map[e.id].getModel().setValue(e.value)}updateOptions(e){this.map[e.id].updateOptions(e.options)}}const n=Neo.setupClass(i)}}]);