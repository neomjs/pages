"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[2542],{1613:(e,t,a)=>{a.d(t,{A:()=>s});var o=a(950),n=a(825);class l extends o.A{static config={className:"Neo.selection.grid.ColumnModel",ntype:"selection-grid-columnmodel",cls:"neo-selection-columnmodel"};addDomListener(){let e=this;e.view.parent.on("cellClick",e.onCellClick,e)}destroy(...e){let t=this;t.view.parent.un("cellClick",t.onCellClick,t),super.destroy(...e)}onCellClick(e){let t,a,o,{view:l}=this,s=e.data.currentTarget;s&&(a=l.getDataField(s),o=l.getColumn(a,!0),t=n.A.getColumnNodesIds(l.vdom.cn[0],o),this.select(t))}onKeyDownLeft(e){!this.hasEditorFocus(e)&&this.onNavKeyColumn(-1)}onKeyDownRight(e){!this.hasEditorFocus(e)&&this.onNavKeyColumn(1)}onNavKeyColumn(e){let t,a,o,l=this,{dataFields:s,view:i}=l;for(a=l.hasSelection()?i.getDataField(l.items[0]):s[0],o=(s.indexOf(a)+e)%s.length;o<0;)o+=s.length;t=n.A.getColumnNodesIds(i.vdom.cn[0],o),l.select(t)}register(e){super.register(e);let{id:t,view:a}=this;a.keys?._keys.push({fn:"onKeyDownLeft",key:"Left",scope:t},{fn:"onKeyDownRight",key:"Right",scope:t})}unregister(){let{id:e,view:t}=this;t.keys?.removeKeys([{fn:"onKeyDownLeft",key:"Left",scope:e},{fn:"onKeyDownRight",key:"Right",scope:e}]),super.unregister()}}const s=Neo.setupClass(l)},2542:(e,t,a)=>{a.r(t),a.d(t,{onStart:()=>D});var o=a(3733),n=a(550),l=a(6015),s=a(4363),i=a(1613),r=a(1315),d=a(6827),m=a(3079),u=a(7155),c=a(9294);class h extends m.A{static config={className:"Neo.examples.grid.bigData.ControlsContainer",cls:["neo-examples-bigdata-controls-container"],items:[{ntype:"button",cls:["controls-container-button"],handler:"up.onControlsToggleButtonClick",iconCls:"fas fa-bars"},{module:c.A,cls:["neo-examples-bigdata-controls-container-content"],sortable:!0,headerToolbar:{sortZoneConfig:{adjustItemRectsToParent:!0}},items:[{module:m.A,header:{text:"Settings"},layout:"vbox",itemDefaults:{module:d.A,clearable:!1,displayField:"id",editable:!1},items:[{labelText:"Amount Rows",labelWidth:120,listeners:{change:"up.onAmountRowsChange"},store:["1000","5000","10000","20000","50000"],value:"1000",width:200},{labelText:"Amount Columns",labelWidth:145,listeners:{change:"up.onAmountColumnsChange"},store:["10","25","50","75","100"],value:"50",width:200},{labelText:"Buffer Rows",labelWidth:145,listeners:{change:"up.onBufferRowRangeChange"},store:["0","3","5","10","25","50"],value:"5",width:200},{labelText:"Buffer Columns",labelWidth:145,listeners:{change:"up.onBufferColumnRangeChange"},store:["0","3","5","10","20"],value:"3",width:200},{module:u.A,checked:!0,labelText:"Theme",labelWidth:70,listeners:{change:"up.onThemeRadioChange"},name:"theme",style:{marginTop:"2em"},value:"neo-theme-dark",valueLabelText:"Dark"},{module:u.A,labelText:"",labelWidth:70,listeners:{change:"up.onThemeRadioChange"},name:"theme",style:{marginTop:".3em"},value:"neo-theme-light",valueLabelText:"Light"},{ntype:"label",style:{marginTop:"2em"},text:"Filters"},{ntype:"textfield",clearable:!0,editable:!0,labelText:"Firstname",labelWidth:90,listeners:{change:"up.onFilterFieldChange"},name:"firstname",style:{marginTop:".3em"},width:200},{ntype:"textfield",clearable:!0,editable:!0,labelText:"Lastname",labelWidth:90,listeners:{change:"up.onFilterFieldChange"},name:"lastname",width:200},{ntype:"label",reference:"count-rows-label",style:{marginTop:"1em"}}]},{module:m.A,header:{text:"Selection"},layout:"vbox",itemDefaults:{module:u.A,hideLabel:!0,hideValueLabel:!1,labelText:"",listeners:{change:"up.onSelectionModelChange"},name:"selectionModel",style:{marginTop:".3em"},width:200},items:[{ntype:"label",style:{marginTop:0},text:"Pick the Selection Model"},{style:{marginTop:"1em"},selectionModel:l.A,valueLabelText:"Cell"},{selectionModel:i.A,valueLabelText:"Column"},{checked:!0,selectionModel:r.A,valueLabelText:"Row"},{selectionModel:o.A,valueLabelText:"Cell & Column"},{selectionModel:s.A,valueLabelText:"Cell & Row"},{selectionModel:n.A,valueLabelText:"Cell & Column & Row"}]}]}],layout:{ntype:"fit"},tag:"aside"};get grid(){return this.parent.getItem("grid")}onAmountColumnsChange(e){e.oldValue&&(this.grid.isLoading="Is Loading",this.grid.amountColumns=parseInt(e.value.id))}onAmountRowsChange(e){e.oldValue&&(this.grid.isLoading="Is Loading",this.grid.store.amountRows=parseInt(e.value.id))}onBufferColumnRangeChange(e){e.oldValue&&(this.grid.view.bufferColumnRange=parseInt(e.value.id))}onBufferRowRangeChange(e){e.oldValue&&(this.grid.view.bufferRowRange=parseInt(e.value.id))}async onControlsToggleButtonClick(e){let t=this,a=e.component;a.expanded=!a.expanded,t.toggleCls("neo-expanded"),await t.timeout(a.expanded?250:0),t.grid.toggleCls("neo-extend-margin-right")}onConstructed(){super.onConstructed();let e=this,{store:t}=e.grid;t.on({filter:e.updateRowsLabel,load:e.updateRowsLabel,scope:e}),t.getCount()>0&&e.updateRowsLabel()}onFilterFieldChange(e){this.grid.store.getFilter(e.component.name).value=e.value}onSelectionModelChange(e){this.grid.view.selectionModel=e.component.selectionModel}updateRowsLabel(){let{store:e}=this.grid;e.isLoading||(this.getItem("count-rows-label").text="Filtered rows: "+e.getCount())}}const g=Neo.setupClass(h);var p=a(438),C=a(8202);class f extends C.A{static config={className:"Neo.examples.grid.bigData.MainModel",amountColumns_:50};afterSetAmountColumns(e,t){let a=4,o=[{name:"id",type:"Int"},{name:"firstname",type:"String"},{name:"lastname",type:"String"}];for(;a<=e;a++)o.push({name:"number"+a,type:"Int"});this.fields=o}}const b=Neo.setupClass(f);var w=a(1374);class y extends w.A{static config={className:"Neo.examples.grid.bigData.MainStore",amountColumns_:50,amountRows_:1e3,filters:[{property:"firstname",operator:"like",value:null},{property:"lastname",operator:"like",value:null}],model:b};firstnames=["Amanda","Andrew","Anthony","Ashley","Barbara","Betty","Brian","Carol","Charles","Christopher","Daniel","David","Deborah","Donna","Elizabeth","Emily","George","Jack","James","Jennifer","Jessica","Joe","John","Joseph","Joshua","Karen","Kenneth","Kelly","Kevin","Kimberly","Linda","Lisa","Margaret","Mark","Mary","Matthew","Max","Melissa","Michael","Michelle","Nancy","Patricia","Paul","Richard","Robert","Ronald","Sam","Sandra","Sarah","Stephanie","Steven","Susan","Thomas","Timothy","Tobias","William"];lastnames=["Adams","Allen","Anderson","Baker","Brown","Campbell","Carter","Clark","Davis","Flores","Garcia","Gonzales","Green","Hall","Harris","Hernandez","Hill","Jackson","Johnson","Jones","King","Lee","Lewis","Lopez","Martin","Martinez","Miller","Mitchell","Moore","Nelson","Nguyen","Perez","Rahder","Ramirez","Roberts","Rivera","Robinson","Rodriguez","Sanchez","Scott","Smith","Taylor","Thomas","Thompson","Torres","Uhlig","Walker","Waters","White","Williams","Wilson","Wright","Young"];afterSetAmountColumns(e,t){if(void 0!==t){let t=this,a=t.generateData(t.amountRows,e),o=performance.now();t.model.amountColumns=e,console.log("Start creating records"),t.data=a,console.log(`Record creation total time: ${Math.round(performance.now()-o)}ms`)}}afterSetAmountRows(e,t){let a=this,o=a.generateData(e,a.amountColumns),n=performance.now();console.log("Start creating records"),a.data=o,console.log(`Record creation total time: ${Math.round(performance.now()-n)}ms`)}generateData(e,t){console.log("Start creating data",{amountRows:e,amountColumns:t});let a,o,n=this,l=performance.now(),s=n.firstnames.length,i=n.lastnames.length,r=[],d=0;for(;d<e;d++){for(a=4,o={id:d+1,firstname:n.firstnames[Math.floor(Math.random()*s)],lastname:n.lastnames[Math.floor(Math.random()*i)]};a<=t;a++)o["number"+a]=Math.round(1e4*Math.random());r.push(o)}return console.log(`Data creation total time: ${Math.round(performance.now()-l)}ms`),r}}const v=Neo.setupClass(y);class x extends p.A{static config={className:"Neo.examples.grid.bigData.GridContainer",amountColumns_:50,columnDefaults:{cellAlign:"right",defaultSortDirection:"DESC",width:100},store:v,viewConfig:{bufferColumnRange:3,bufferRowRange:5}};afterSetAmountColumns(e,t){let a=4,o=[{dataField:"id",text:"#",width:60,renderer:({record:e,store:t})=>t.indexOf(e)+1},{cellAlign:"left",dataField:"firstname",defaultSortDirection:"ASC",text:"Firstname",width:150},{cellAlign:"left",dataField:"lastname",defaultSortDirection:"ASC",text:"Lastname",width:150}];for(;a<=e;a++)o.push({dataField:"number"+a,text:"Number "+a});this.store.amountColumns=e,this.columns=o}}const R=Neo.setupClass(x);var A=a(2930);class M extends A.A{static config={className:"Neo.examples.grid.bigData.MainContainer",cls:["neo-examples-bigdata-maincontainer"],items:[{module:R,reference:"grid"},{module:g}],layout:{ntype:"hbox",align:"stretch"}};onThemeRadioChange({value:e}){this.theme=e}}const T=Neo.setupClass(M),D=()=>Neo.app({mainView:T,name:"Neo.examples.grid.bigData"})},2930:(e,t,a)=>{a.d(t,{A:()=>l});var o=a(3079);class n extends o.A{static config={className:"Neo.container.Viewport",ntype:"viewport",applyBodyCls:!0,autoMount:!0,baseCls:["neo-viewport"],monitorSize_:!1};afterSetMounted(e,t){super.afterSetMounted(e,t);let a=this;e&&a.monitorSize&&a.addDomListeners([{resize:a.onDomResize,scope:a}])}onConstructed(){super.onConstructed();let{appName:e,windowId:t}=this;this.applyBodyCls&&Neo.main.DomAccess.applyBodyCls({appName:e,cls:["neo-body-viewport"],windowId:t})}onDomResize(e){this.fire("resize",e)}}const l=Neo.setupClass(n)}}]);