"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[7712],{7155:(e,t,a)=>{a.d(t,{A:()=>s});var l=a(8313),r=a(293);class o extends l.A{static config={className:"Neo.form.field.Radio",ntype:"radiofield",baseCls:["neo-radiofield","neo-checkboxfield"],iconCls:["far","fa-circle"],inputType:"radio"};afterSetChecked(e,t){super.afterSetChecked(e,t),e&&this.uncheckGroupItems()}fireChangeEvent(e,t){this.checked&&super.fireChangeEvent(e,t)}getGroupValue(){let e=super.getGroupValue();return e.length>0?e[0]:[]}uncheckGroupItems(){let e,t=this;e=r.A.find({ntype:"radiofield",name:t.name}),e.forEach(e=>{e.id!==t.id&&e._checked&&(e.checked=!1)})}}const s=Neo.setupClass(o)},7712:(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});var l=a(9359),r=a(7155);class o extends l.A{static config={className:"Form.view.pages.Page5",itemDefaults:{module:r.A,labelText:null,labelWidth:70,name:"fruits"},formGroup:"page5",items:[{labelText:"Fruits",value:"apple",valueLabelText:"Apple"},{value:"banana",valueLabelText:"Banana"},{checked:!0,value:"lemon",valueLabelText:"Lemon"},{value:"orange",valueLabelText:"Orange"},{value:"strawberry",valueLabelText:"Strawberry"}]}}const s=Neo.setupClass(o)},8313:(e,t,a)=>{a.d(t,{A:()=>i});var l=a(293),r=a(3293),o=a(6270);class s extends r.A{static labelPositions=["left","top"];static config={className:"Neo.form.field.CheckBox",ntype:"checkboxfield",baseCls:["neo-checkboxfield"],checked_:!1,error_:null,errorPositionAbsolute_:!1,errorTextGroupRequired:e=>`Please check at least one item of the group: ${e.name}`,errorTextRequired:"Required",groupRequired_:!1,hideLabel_:!1,iconCls:["far","fa-square"],iconClsChecked:["fas","fa-check"],inputType_:"checkbox",labelBaseCls:["neo-checkbox-label"],labelCls_:[],labelId_:null,labelIdCls_:[],labelIdSeparator_:" Â· ",labelPosition_:"left",labelText_:"LabelText",labelWidth_:150,required_:!1,showErrorTexts_:!0,uncheckedValue:!1,useAlertState_:!1,value:!0,valueLabelText_:null,_vdom:{cn:[{tag:"label",cls:["neo-checkbox-label"],cn:[{tag:"span",cls:[]},{tag:"input",cls:["neo-checkbox-input"]},{tag:"i",cls:["neo-checkbox-icon"]},{tag:"span",cls:["neo-checkbox-value-label"]}]},{cls:["neo-error-wrapper"],removeDom:!0,cn:[{cls:["neo-error"]}]}]}};clean=!0;construct(e){super.construct(e);let t=this;t.addDomListeners({change:t.onInputValueChange,scope:t})}afterSetChecked(e,t){let a=this,l=a.vdom.cn[0],r=l.cn[2].cls,s=e?a.iconClsChecked:a.iconCls,i=e?a.iconCls:a.iconClsChecked;t&&(a.clean=!1),a.validate(),l.cn[1].checked=e,o.A.removeAdd(r,i,s),a.update(),void 0!==t&&a.fireChangeEvent(a.getSubmitValue(),a.getOldSubmitValue())}afterSetError(e,t){this.updateError(e)}afterSetErrorPositionAbsolute(e,t){let a=this.vdom.cn[1].cn[0].cls;o.A[e?"add":"remove"](a,"neo-absolute"),this.update()}afterSetGroupRequired(e,t){void 0!==t&&this.validate(!1)}afterSetHideLabel(e,t){this.vdom.cn[0].cn[0].removeDom=e,this.update()}afterSetId(e,t){let a=this,l=a.vdom.cn[0];l.cn[0].id=a.getLabelId(),l.cn[1].id=a.getInputElId(),l.cn[2].id=a.getIconElId(),l.cn[3].id=a.getValueLabelId(),super.afterSetId(e,t)}afterSetInputType(e,t){this.changeInputElKey("type",e)}afterSetLabelCls(e,t){let a=this.vdom.cn[0].cn[0].cls;o.A.remove(a,t),o.A.add(a,e),this.update()}afterSetLabelPosition(e,t){let{cls:a}=this;o.A.remove(a,"neo-label-"+t),o.A.add(a,"neo-label-"+e),this.cls=a}afterSetLabelText(e,t){let a=this;a.labelId&&(e=`<span class="${a.labelIdCls.join(",")}">${a.labelId}</span>${a.labelIdSeparator+e}`),a.vdom.cn[0].cn[0].html=e,a.update()}afterSetLabelWidth(e,t){let a=this;a.hideLabel||(a.vdom.cn[0].cn[0].width=e,a.update())}afterSetRequired(e,t){void 0!==t&&this.validate(!1)}afterSetShowErrorTexts(e,t){void 0!==t&&this.validate(!1)}afterSetUseAlertState(e,t){let{cls:a}=this;o.A.toggle(a,"neo-use-alert-state",e),this.cls=a}afterSetValue(e,t){this.changeInputElKey("value",e)}afterSetValueLabelText(e,t){let a=this.vdom.cn[0].cn[3],l=!!e;l&&(a.text=e),a.removeDom=!l,this.update()}beforeSetGroupRequired(e,t){return e&&this.required?(console.warn("Do not use groupRequired & required at the same time. Switching to required.",this),!1):e}beforeSetLabelCls(e,t){return o.A.union(e||[],this.labelBaseCls)}beforeSetLabelPosition(e,t){return this.beforeSetEnumValue(e,t,"labelPosition")}beforeSetRenderName(e,t){return!0}getGroupValue(){let e,t=this.getClosestForm(),a=this.getPath(),r=[];return a&&(e=l.A.find({path:a}),e.forEach(e=>{e.checked&&e.getClosestForm()===t&&o.A.add(r,e.value)})),r}getIconElId(){return`${this.id}__icon`}getInputEl(){return this.vdom.cn[0].cn[1]}getInputElId(){return`${this.id}__input`}getLabelId(){return`${this.id}__label`}getOldSubmitValue(){let e=this;return e.checked?e.uncheckedValue:e.value}getOldValue(){return this.getOldSubmitValue()}getSubmitValue(){let e=this;return e.checked?e.value:e.uncheckedValue}getValueLabelId(){return`${this.id}__value-label`}isEmptyAndRequired(){return!this.validate(!1)}isValid(){return this.validate(!0),!this.error&&super.isValid()}onInputValueChange(e){let t=this,a=e.target.checked;t.vnode.childNodes[0].childNodes[t.hideLabel?0:1].attributes.checked=`${a}`,t.checked=a,t.fireUserChangeEvent(t.getSubmitValue(),t.getOldSubmitValue())}updateError(e,t=!1){let a,l,r=this,{cls:s}=r,i=e&&r.showErrorTexts;r.clean&&!r.mounted||(r._error=e,o.A.toggle(s,"neo-invalid",e),r.cls=s,l=r.vdom.cn[1],a=l.cn[0],i?a.text=e:delete a.text,l.removeDom=!i,!t&&r.update())}validate(e=!0){let t,a,r=this,{name:o}=r,s=!0;if(e||(r.clean=!1),r.groupRequired){for(t of(s=!1,a=l.A.find({ntype:r.ntype,name:o}),a))if(t.checked){s=!0;break}for(t of a)t.id!==r.id&&(r.clean||(t.clean=!1),t[r.clean?"_error":"error"]=s?null:t.errorTextGroupRequired({name:o}));s||(r._error=r.errorTextGroupRequired({name:o}))}else r.required&&!r.checked&&(r._error=r.errorTextRequired,s=!1);return s&&(r._error=null),!r.clean&&r.updateError(r._error,e),!!s&&super.validate(e)}}const i=Neo.setupClass(s)},9359:(e,t,a)=>{a.d(t,{A:()=>o});var l=a(2714);class r extends l.A{static config={className:"Form.view.FormPageContainer",itemDefaults:{style:{maxWidth:"300px"}},layout:{ntype:"vbox"},style:{overflow:"auto"},vdom:{cn:[]}}}const o=Neo.setupClass(r)}}]);