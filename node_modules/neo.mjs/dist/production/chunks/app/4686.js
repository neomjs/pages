"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[4686],{4686:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var s=n(5608),r=n(825);class o extends s.A{static config={className:"RealWorld.view.user.SignUpComponent",baseCls:["auth-page"],errors_:[],fieldsets_:[{name:"username",placeholder:"Your Name",type:"text"},{name:"email",placeholder:"Email",type:"text"},{name:"password",placeholder:"Password",type:"password"}],keys:{Enter:"onKeyDownEnter"},mode_:"signup",_vdom:{cn:[{cls:["container","page"],cn:[{cls:["row"],cn:[{cls:["col-md-6","offset-md-3","col-xs-12"],cn:[{tag:"h1",cls:["text-xs-center"]},{tag:"p",cls:["text-xs-center"],cn:[{tag:"a"}]},{tag:"ul",cls:["error-messages"]},{tag:"form",cn:[{tag:"fieldset",cn:[{tag:"button",cls:["btn","btn-lg","btn-primary","pull-xs-right"],type:"button"}]}]}]}]}]}]}};construct(e){super.construct(e);let t=this;t.addDomListeners({click:{fn:t.onSubmitButtonClick,delegate:".btn-primary",scope:t}})}afterSetErrors(e,t){let n=this.getErrorMessagesList();n.cn=[],Object.entries(e||{}).forEach(([e,t])=>{n.cn.push({tag:"li",text:e+" "+t.join(" and ")})}),this.update()}afterSetFieldsets(e,t){let n=this,s=n.vdom.cn[0].cn[0].cn[0].cn[3];e.slice().reverse().forEach(e=>{s.cn[0].cn.unshift({tag:"fieldset",cls:["form-group"],cn:[{tag:"input",cls:["form-control","form-control-lg"],id:n.getInputId(e.name),name:e.name,placeholder:e.placeholder,type:e.type}]})}),n.update()}afterSetMode(e,t){let n="signup"===e,s=this.vdom.cn[0].cn[0].cn[0];s.cn[0].text=n?"Sign up":"Sign in",s.cn[1].cn[0].href=n?"#/login":"#/register",s.cn[1].cn[0].text=n?"Have an account?":"Need an account?",s.cn[3].cn[0].cn[0].removeDom=!n,s.cn[3].cn[0].cn[3].text=n?"Sign up":"Sign in",this.update()}getErrorMessagesList(){return r.A.find(this.vdom,{cls:"error-messages"})?.vdom}getInputId(e){return this.id+"__"+e}onKeyDownEnter(){this.onSubmitButtonClick()}onSubmitButtonClick(){let e,t=this,n=t.getController(),s="signup"===t.mode,r=[t.getInputId("email"),t.getInputId("password")];s&&r.push(t.getInputId("username")),Neo.main.DomAccess.getAttributes({id:r,attributes:"value"}).then(r=>{e={user:{email:r[0].value,password:r[1].value}},s&&(e.user.username=r[2].value),n.saveUser({data:JSON.stringify(e),slug:s?"":"/login"}).then(e=>{const s=e.json.errors;s?t.errors=s:n.login(e.json.user)})})}}const a=Neo.setupClass(o)}}]);