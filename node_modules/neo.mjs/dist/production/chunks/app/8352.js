"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[8352],{9431:(e,r,o)=>{o.d(r,{A:()=>n});var t=o(5608);class a extends t.A{static config={className:"Neo.draggable.DragProxyComponent",ntype:"dragproxy",autoMount:!0,autoRender:!0,baseCls:["neo-dragproxy"],moveInMainThread:!0};afterSetMounted(e,r){if(super.afterSetMounted(e,r),e&&this.moveInMainThread){let{appName:e,id:r,windowId:o}=this;Neo.main.addon.DragDrop.setDragProxyElement({appName:e,id:r,windowId:o})}}}const n=Neo.setupClass(a)},8352:(e,r,o)=>{o.r(r),o.d(r,{default:()=>s});var t=o(2583),a=o(9431),n=o(6270),d=(o(5691),o(825));class l extends t.A{static observable=!0;static config={className:"Neo.draggable.DragZone",ntype:"dragzone",addDragProxyCls:!0,alwaysFireDragMove:!1,appName_:null,bodyCursorStyle:null,boundaryContainerId:null,data:null,dragElement:null,dragElementRect:null,dragProxy:null,dragProxyConfig_:null,dragProxyCls:"neo-dragproxy",dropZoneIdentifier:null,moveHorizontal:!0,moveInMainThread:!0,moveVertical:!0,offsetX:0,offsetY:0,owner:null,proxyParentId_:"document.body",scrollContainerId:null,scrollFactorLeft:1,scrollFactorTop:1,useProxyWrapper:!0,windowId_:null};construct(e){super.construct(e),Neo.main.addon.DragDrop||console.error("You can not use Neo.draggable.DragZone without adding Neo.main.addon.DragDrop to the main thread addons",this.id)}afterSetWindowId(e,r){e&&Neo.currentWorker.insertThemeFiles(e,this.__proto__)}beforeGetDragProxyConfig(e){return Neo.clone(e,!0,!0)}async createDragProxy(e,r=!0){let o=this,t=Neo.getComponent(o.getDragElementRoot().id)||o.owner,l=o.dragElementRect,s=o.dragProxyConfig?.vdom,i=d.A.clone(s||o.dragElement),g={module:a.A,appName:o.appName,moveInMainThread:o.moveInMainThread,parentId:o.proxyParentId,windowId:o.windowId,...o.dragProxyConfig,vdom:o.useProxyWrapper?{cn:[i]}:i};return g.cls=g.cls||[],t&&g.cls.push(t.getTheme()),i.cls&&!o.useProxyWrapper&&g.cls.push(...i.cls),o.addDragProxyCls&&g.cls&&n.A.add(g.cls,o.dragProxyCls),g.style=g.style||{},Object.assign(g.style,{height:`${e.height}px`,left:`${o.moveHorizontal?e.x:l.x}px`,top:`${o.moveVertical?e.y:l.y}px`,width:`${e.width}px`}),r?o.dragProxy=Neo.create(g):g}destroyDragProxy(){let e=this,r=e.dragProxy.id;e.timeout(e.moveInMainThread?0:30).then((()=>{Neo.currentWorker.promiseMessage("main",{action:"updateDom",appName:e.appName,deltas:[{action:"removeNode",id:r}]})})),e.dragProxy.destroy()}dragEnd(e){let r=this,{owner:o}=r,{cls:t}=o;n.A.remove(t,"neo-is-dragging"),o.cls=t,r.dragProxy&&(r.destroyDragProxy(),r.dragProxy=null),Object.assign(r,{dragElementRect:null,offsetX:0,offsetY:0,scrollContainerId:null}),r.fire("dragEnd",e),r.resetData()}dragMove(e){let r,o=this;!o.moveInMainThread&&o.dragProxy&&(r=o.dragProxy.style,o.moveHorizontal&&(r.left=e.clientX-o.offsetX+"px"),o.moveVertical&&(r.top=e.clientY-o.offsetY+"px"),o.dragProxy.style=r),o.fire("dragMove",e)}async dragStart(e){let r,o,t=this,{appName:a,owner:d,windowId:l}=t,{cls:s}=d,i=t.getDragElementRect(e);t.setData(),Neo.main.addon.DragDrop.setConfigs({appName:a,windowId:l,...t.getMainThreadConfigs()}),n.A.add(s,"neo-is-dragging"),d.cls=s,r=e.clientX-i.left,o=e.clientY-i.top,Object.assign(t,{dragElementRect:i,offsetX:r,offsetY:o}),await t.createDragProxy(i),t.fire("dragStart",{clientX:e.clientX,clientY:e.clientY,dragElementRect:i,eventData:e,id:t.id,offsetX:r,offsetY:o})}getDragElementRect(e){let r=this.getDragElementRoot().id;for(let o of e.path)if(o.id===r)return o.rect;for(let o of e.targetPath)if(o.id===r)return o.rect;return null}getDragElementRoot(){return this.dragElement}getMainThreadConfigs(){let e=this;return{alwaysFireDragMove:e.alwaysFireDragMove,bodyCursorStyle:e.bodyCursorStyle,boundaryContainerId:e.boundaryContainerId,dragElementRootId:e.getDragElementRoot().id,dragProxyCls:e.dragProxyCls,dragZoneId:e.id,dropZoneIdentifier:e.dropZoneIdentifier,moveHorizontal:e.moveHorizontal,moveVertical:e.moveVertical,scrollContainerId:e.scrollContainerId,scrollFactorLeft:e.scrollFactorLeft,scrollFactorTop:e.scrollFactorTop}}onDrop(e){this.fire("drop",e)}onDropEnter(e){this.fire("drop:enter",e)}onDropLeave(e){this.fire("drop:leave",e)}resetData(){this.timeout(50).then((()=>{this.data=null}))}setData(e={}){let r=this;r.data={dragElement:r.getDragElementRoot(),dragZoneId:r.id,...e}}}const s=Neo.setupClass(l)}}]);