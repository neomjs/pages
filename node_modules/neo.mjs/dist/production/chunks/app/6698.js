"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[6698],{6698:(e,t,n)=>{n.r(t),n.d(t,{onStart:()=>x});var a=n(2393),r=n(5800);class o extends r.A{apiUrl="https://disease.sh/v3/covid-19/countries";static config={className:"Neo.examples.grid.covid.GridContainerController"};construct(e){super.construct(e),this.loadData()}addStoreItems(e){let t=this.component.store;e.forEach((e=>{e.country.includes('"')&&(e.country=e.country.replace('"',"'")),e.casesPerOneMillion=e.casesPerOneMillion>e.cases?"N/A":e.casesPerOneMillion||0,e.infected=e.casesPerOneMillion})),t.data=e}loadData(){let e=this;fetch(e.apiUrl).then((e=>e.json())).catch((t=>console.log("Can’t access "+e.apiUrl,t))).then((t=>e.addStoreItems(t)))}}const s=Neo.setupClass(o);var i=n(3303),c=n(8202);class l extends c.A{static config={className:"Neo.examples.grid.covid.Model",fields:[{name:"active",type:"Integer"},{name:"cases",type:"Integer"},{name:"casesPerOneMillion",type:"Integer"},{name:"country",type:"String"},{name:"countryInfo",type:"Object"},{name:"critical",type:"Integer"},{name:"deaths",type:"Integer"},{name:"index",type:"Integer"},{name:"infected",type:"Integer"},{name:"recovered",type:"Integer"},{name:"tests",type:"Integer"},{name:"testsPerOneMillion",type:"Integer"},{name:"todayCases",type:"Integer"},{name:"todayDeaths",type:"Integer"}]}}const d=Neo.setupClass(l);class u extends i.A{static config={className:"Neo.examples.grid.covid.Store",keyProperty:"country",model:d,sorters:[{property:"active",direction:"DESC"}]}}const p=Neo.setupClass(u);var f=n(2583);class m extends f.A{static flagRegEx=/ /gi;static locales="default";static config={className:"Neo.examples.table.covid.Util"};static formatInfected(e){let t=e.value;return Neo.isNumber(t)?(t=Math.round(t/100),t/=100,t=t.toFixed(2)+" %",t.toLocaleString(m.locales)):t||"N/A"}static formatNumber(e,t){let n=e.value;return Neo.isNumber(n)?(n=n.toLocaleString(m.locales),"string"!=typeof t?n:`<span style="color:${t};">${n}</span>`):n||"N/A"}static getCountryFlagUrl(e){let t=e.toLowerCase().replace(m.flagRegEx,"-");if(t={bosnia:"bosnia-and-herzegovina","cabo-verde":"cape-verde",car:"central-african-republic","caribbean-netherlands":"netherlands","channel-islands":"jersey","côte-d'ivoire":"ivory-coast",congo:"republic-of-the-congo","congo,-the-democratic-republic-of-the":"democratic-republic-of-congo",curaçao:"curacao",czechia:"czech-republic","diamond-princess":"japan",drc:"democratic-republic-of-congo","el-salvador":"salvador",eswatini:"swaziland","faeroe-islands":"faroe-islands","falkland-islands-(malvinas)":"falkland-islands","french-guiana":"france",guadeloupe:"france","holy-see-(vatican-city-state)":"vatican-city","iran,-islamic-republic-of":"iran","lao-people's-democratic-republic":"laos","libyan-arab-jamahiriya":"libya",macedonia:"republic-of-macedonia","marshall-islands":"marshall-island",mayotte:"france","moldova,-republic-of":"moldova","ms-zaandam":"netherlands","new-caledonia":"france","palestinian-territory,-occupied":"palestine",poland:"republic-of-poland",réunion:"france","s.-korea":"south-korea","st.-barth":"st-barts","saint-helena":"united-kingdom","saint-lucia":"st-lucia","saint-martin":"sint-maarten","saint-pierre-miquelon":"france","saint-vincent-and-the-grenadines":"st-vincent-and-the-grenadines","syrian-arab-republic":"syria","tanzania,-united-republic-of":"tanzania","timor-leste":"east-timor","turks-and-caicos-islands":"turks-and-caicos","u.s.-virgin-islands":"virgin-islands",uae:"united-arab-emirates",uk:"united-kingdom",usa:"united-states-of-america",uzbekistan:"uzbekistn","venezuela,-bolivarian-republic-of":"venezuela","viet-nam":"vietnam","wallis-and-futuna":"france"}[t]||t,Neo.config.isGitHubPages){let e=`../../../../resources/images/flaticon/country_flags/png/${t}.png`;return"development"!==Neo.config.environment&&(e=`../../${e}`),e}return`https://raw.githubusercontent.com/neomjs/pages/main/resources_pub/images/flaticon/country_flags/png/${t}.png`}static indexRenderer(e){return{cls:["neo-index-column","neo-grid-cell"],html:e.index+1}}}const g=Neo.setupClass(m);class h extends a.A{static config={className:"Neo.examples.grid.covid.GridContainer",cls:["covid-country-grid"],columnDefaults:{cellAlign:"right",defaultSortDirection:"DESC",renderer:g.formatNumber,width:100},columns:[{cls:["neo-index-column"],dock:"left",field:"index",minWidth:40,text:"#",renderer:g.indexRenderer,width:40},{cellAlign:"left",defaultSortDirection:"ASC",dock:"left",field:"country",text:"Country",width:200,renderer:e=>({cls:["neo-country-column","neo-grid-cell"],html:['<div style="display: flex; align-items: center">','<img style="height:20px; margin-right:10px; width:20px;" src="'+g.getCountryFlagUrl(e.value)+'">'+e.value,"</div>"].join("")})},{field:"cases",text:"Cases"},{field:"casesPerOneMillion",text:"Cases / 1M"},{field:"infected",text:"Infected",renderer:e=>g.formatInfected(e)},{field:"active",text:"Active",renderer:e=>g.formatNumber(e,"#64B5F6")},{field:"recovered",text:"Recovered",renderer:e=>g.formatNumber(e,"#28ca68")},{field:"critical",text:"Critical",renderer:e=>g.formatNumber(e,"orange")},{field:"deaths",text:"Deaths",renderer:e=>g.formatNumber(e,"#fb6767")},{field:"todayCases",text:"Cases today"},{field:"todayDeaths",text:"Deaths today",renderer:e=>g.formatNumber(e,"#fb6767")},{field:"tests",text:"Tests"},{field:"testsPerOneMillion",text:"Tests / 1M"}],controller:s,store:p}}const v=Neo.setupClass(h);var y=n(2930);class b extends y.A{static config={className:"Neo.examples.grid.covid.MainContainer",items:[v],layout:{ntype:"fit"},style:{padding:"20px"}}}const N=Neo.setupClass(b),x=()=>Neo.app({mainView:N,name:"Neo.examples.grid.covid"})},5800:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(2432),r=n(3439),o=n(599);class s extends a.A{static config={className:"Neo.controller.Component",ntype:"component-controller",component:null,parent_:null,references:null,windowId:null};construct(e){super.construct(e);let t,n=this,{component:a}=n;n.references={},a.isConstructed?n.onComponentConstructed():t=a.on("constructed",(()=>{a.un("constructed",t),n.onComponentConstructed()}))}beforeSetParent(e,t){return e||this.getParent()}getHandlerScope(e,t){let n=this,{parent:a}=n;return!(!t||!(0,r.Ap)(e,t).fn)||(Neo.isFunction(n[e])?n:a?.getHandlerScope(e)||null)}getParent(){let{parent:e}=this;return e||this.component.parent?.getController()||null}getReference(e){let t=this,n=t.references[e];return n||(n=t.component.down({reference:e}),n&&(t.references[e]=n)),n||null}getState(...e){return this.getStateProvider().getData(...e)}getStateProvider(e=!1){let{component:t}=this;return e?t.stateProvider:t.getStateProvider()}getStore(e){return this.getStateProvider().getStore(e)}onComponentConstructed(){}parseConfig(e=this.component){let t,n,a=this,{handler:r,listeners:s,reference:i,validator:c}=e;r&&"string"==typeof r&&(n=a.getHandlerScope(r,e),!0!==n&&(e.handler=n[r].bind(e.handlerScope||n))),s&&Object.entries(s).forEach((([r,i])=>{"scope"!==r&&"delegate"!==r&&(Neo.isString(i)?(t=i,n=a.getHandlerScope(t,e),n?!0!==n&&(s[r]={},s[r].fn=n[t].bind(n)):o.A.logError("Unknown event handler for",t,e)):i.forEach((r=>{Neo.isObject(r)&&r.hasOwnProperty("fn")&&Neo.isString(r.fn)&&(t=r.fn,n=a.getHandlerScope(t,e),n?!0!==n&&(r.fn=n[t].bind(n)):console.error("Unknown event handler for",t,e))})))})),Neo.isString(c)&&(n=a.getHandlerScope(c),n?e.validator=n[c].bind(n):o.A.logError("Unknown validator for",e.id,e)),i&&(a.references[i]=e)}parseDomListeners(e=this.component){let t,n,a=this,{domListeners:r}=e;r?.forEach((e=>{Object.entries(e).forEach((([r,o])=>{t=null,"scope"!==r&&"delegate"!==r&&(Neo.isString(o)?t=o:Neo.isObject(o)&&o.hasOwnProperty("fn")&&Neo.isString(o.fn)&&(t=o.fn),t&&(n=a.getHandlerScope(t),n&&(e[r]=n[t].bind(n))))}))}))}removeReference(e){let t,{references:n}=this;for(t in n)if(e===n[t]){delete n[t];break}this.getParent()?.removeReference(e)}setState(...e){this.getStateProvider().setData(...e)}}const i=Neo.setupClass(s)}}]);