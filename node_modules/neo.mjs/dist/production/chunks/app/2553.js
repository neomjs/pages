"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[2553],{2553:(e,o,s)=>{s.r(o),s.d(o,{default:()=>i});var n=s(4880);class t extends n.A{static config={className:"Neo.plugin.Responsive",ntype:"plugin-responsive",responsiveConfig:new Map,defaultResponsiveConfig:{landscape:e=>e.width>e.height,portrait:e=>e.width<e.height}};construct(e){super.construct(e);let o=this,{owner:s}=o;s.addCls("neo-responsive"),Neo.first("viewport").addDomListeners([{resize:o.onResize,scope:o}]),Neo.Responsive=Neo.Responsive||{responsiveConfig:new Map,apps:{}},o.addToResponsiveMap(o.defaultResponsiveConfig,o),o.addToResponsiveMap(s.responsiveConfig||{},s),o.handleBodyCls()}addToResponsiveMap(e,o){for(const[s,n]of Object.entries(e)){let e;e=Neo.isObject(n)?function(e){let o=!0;for(const[s,t]of Object.entries(n)){const n=s.startsWith("min"),i=s.substring(3).toLowerCase();if(o=n?e[i]>=t:e[i]<=t,!o)break}return o}:n,e=e.bind(o),Neo.Responsive.responsiveConfig.set(s,e)}}handleBodyCls(){const e=this,{appName:o}=e.owner,s=Neo.Responsive;if(!s[o]?.activeBodyUpdate){const n=Neo.first("viewport");s[o]={appId:n.id,activeBodyUpdate:!0},n.addDomListeners([{resize:e.onResizeBody,scope:e}])}}onResize(e){const o={},s=Neo.Responsive.responsiveConfig,{owner:n}=this,{responsive:t}=n;for(const[n,i]of Object.entries(t)){const t=s.get(n)?.(e.rect);if(t)for(const[e,s]of Object.entries(i))o[e]=s}Object.keys(o).length>0&&n.set(o)}onResizeBody(e){const o=e.contentRect,s=o.width>=o.height,n=s?"neo-landscape":"neo-portrait",t=s?"neo-portrait":"neo-landscape";Neo.applyDeltas(this.appName,{id:"document.body",cls:{add:[n],remove:[t]}})}}const i=Neo.setupClass(t)},4880:(e,o,s)=>{s.d(o,{A:()=>i});var n=s(3572);class t extends n.A{static config={className:"Neo.plugin.Base",ntype:"plugin",owner:null,windowId_:null};construct(e){super.construct(e);let o=this,{owner:s}=o;s.isConstructed?o.onOwnerConstructed():s.on("constructed",()=>{o.onOwnerConstructed()},o,{once:!0}),s.mounted?o.onOwnerMounted():s.on("mounted",o.onOwnerMounted,o)}afterSetWindowId(e,o){e&&Neo.currentWorker.insertThemeFiles(e,this.__proto__)}onOwnerConstructed(){let{owner:e}=this;e.windowId&&(this.windowId=e.windowId)}onOwnerMounted(){}}const i=Neo.setupClass(t)}}]);