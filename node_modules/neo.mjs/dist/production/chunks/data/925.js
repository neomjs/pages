"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[925],{925:(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});var r=t(703),o=t(270);class a extends r.A{static config={className:"Neo.manager.rpc.Message",singleton:!0,sorters:[{direction:"ASC",property:"id"}]};endPointTimeouts=[];messageId=1;requestBuffer=20;socketConnections={};transactionId=1;onMessage(e){let s=Neo.manager.rpc.Api.get(`${e.service}.${e.method}`);return this[`onMessage${Neo.capitalize(s.type)}`](e,s)}onMessageAjax(e,s){return new Promise(((t,r)=>{let o=this,{url:a}=s;o.register({id:o.messageId,method:e.method,params:e.params,reject:r,resolve:t,service:e.service,transactionId:0,url:a}),o.messageId++,o.endPointTimeouts.includes(a)||(o.endPointTimeouts.push(a),o.timeout(o.requestBuffer).then((()=>{o.resolveBufferTimeout(a)})))}))}async onMessageWebsocket(e,s){let r=this,{url:o}=s,a=r.socketConnections[o];if(!a){let e=await t.e(827).then(t.bind(t,827));r.socketConnections[o]=a=Neo.create(e.default,{serverAddress:o})}return await a.promiseMessage(e)}async resolveBufferTimeout(e){let s,t=this,r=[],a=t.find({transactionId:0,url:e}),n=[],{transactionId:i}=t;a.forEach((e=>{e.transactionId=i,r.push(e.id),n.push({id:e.id,method:e.method,params:e.params,service:e.service})})),o.A.remove(t.endPointTimeouts,e),t.transactionId++,s=await Neo.Fetch.request(e,{},"post",JSON.stringify({tid:i,requests:n})),a.forEach((e=>{e.resolve()})),t.remove(r)}}const n=Neo.setupClass(a)}}]);