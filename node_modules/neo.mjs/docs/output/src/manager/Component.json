{"classData":[{"comment":"/**\n * @class Neo.manager.Component\n * @extends Neo.manager.Base\n * @singleton\n */","meta":{"filename":"Component.mjs","lineno":5,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{}},"kind":"class","name":"Component","augments":["Neo.manager.Base"],"tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.manager","longname":"Neo.manager.Component","scope":"static","$longname":"Neo.manager.Component","$kind":"class","id":3953,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n         * @member {String} className='Neo.manager.Component'\n         * @protected\n         */","meta":{"filename":"Component.mjs","lineno":16,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.manager.Component'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3954,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n         * @member {Boolean} singleton=true\n         * @protected\n         */","meta":{"filename":"Component.mjs","lineno":21,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{}},"kind":"member","name":"singleton","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"singleton","scope":"global","$longname":"singleton","$kind":"property","id":3955,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @member {Map} wrapperNodes=new Map()\n     */","meta":{"filename":"Component.mjs","lineno":27,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{}},"kind":"member","name":"wrapperNodes","type":{"names":["Map"]},"defaultvalue":"new","description":"<p>Map()</p>\n","longname":"wrapperNodes","scope":"global","$longname":"wrapperNodes","$kind":"property","id":3956,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[674,873],"filename":"Component.mjs","lineno":32,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119062","name":"Component#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Component#construct","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#construct","$kind":"method","id":3957,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Flattens a given vnode tree by replacing component based subtrees with componentId based references\n     * @param {Object} vnode\n     * @param {String} ownerId We do not want to replace the own id => wrapped items\n     * @returns {Object}\n     */","meta":{"range":[1141,2730],"filename":"Component.mjs","lineno":47,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119101","name":"Component#addVnodeComponentReferences","type":"MethodDefinition","paramnames":["vnode","ownerId"]},"vars":{"":null}},"description":"<p>Flattens a given vnode tree by replacing component based subtrees with componentId based references</p>\n","params":[{"type":{"names":["Object"]},"name":"vnode"},{"type":{"names":["String"]},"description":"<p>We do not want to replace the own id =&gt; wrapped items</p>\n","name":"ownerId"}],"returns":[{"type":{"names":["Object"]}}],"name":"addVnodeComponentReferences","longname":"Component#addVnodeComponentReferences","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#addVnodeComponentReferences","$kind":"method","id":3958,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns the first component which matches the config-selector moving down the component items tree.\n     * Use returnFirstMatch=false to get an array of all matching items instead.\n     * If no match is found, returns null in case returnFirstMatch === true, otherwise an empty Array.\n     * @param {Neo.component.Base|String} component\n     * @param {Object|String|null} config\n     * @param {Boolean} returnFirstMatch=true\n     * @returns {Neo.component.Base|Neo.component.Base[]|null}\n     */","meta":{"range":[3246,4833],"filename":"Component.mjs","lineno":102,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119268","name":"Component#down","type":"MethodDefinition","paramnames":["component","config","returnFirstMatch"]},"vars":{"":null}},"description":"<p>Returns the first component which matches the config-selector moving down the component items tree.\nUse returnFirstMatch=false to get an array of all matching items instead.\nIf no match is found, returns null in case returnFirstMatch === true, otherwise an empty Array.</p>\n","params":[{"type":{"names":["Neo.component.Base","String"]},"name":"component"},{"type":{"names":["Object","String","null"]},"name":"config"},{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"returnFirstMatch"}],"returns":[{"type":{"names":["Neo.component.Base","Array.<Neo.component.Base>","null"]}}],"name":"down","longname":"Component#down","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#down","$kind":"method","id":3959,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @param {Array} path\n     * @returns {String|null} the component id in case there is a match\n     */","meta":{"range":[4954,5251],"filename":"Component.mjs","lineno":163,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119468","name":"Component#findParentComponent","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"params":[{"type":{"names":["Array"]},"name":"path"}],"returns":[{"type":{"names":["String","null"]},"description":"the component id in case there is a match"}],"name":"findParentComponent","longname":"Component#findParentComponent","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#findParentComponent","$kind":"method","id":3960,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns the object associated to the key, or null if there is none.\n     * @param key\n     * @returns {Neo.component.Base|null}\n     */","meta":{"range":[5408,5484],"filename":"Component.mjs","lineno":185,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119513","name":"Component#get","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns the object associated to the key, or null if there is none.</p>\n","params":[{"name":"key"}],"returns":[{"type":{"names":["Neo.component.Base","null"]}}],"name":"get","longname":"Component#get","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#get","$kind":"method","id":3961,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns all child components which are recursively matched via their parentId\n     * @param {Neo.component.Base} component\n     * @returns {Neo.component.Base[]} childComponents\n     */","meta":{"range":[5691,6139],"filename":"Component.mjs","lineno":194,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119532","name":"Component#getChildComponents","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Returns all child components which are recursively matched via their parentId</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"name":"component"}],"returns":[{"type":{"names":["Array.<Neo.component.Base>"]},"description":"childComponents"}],"name":"getChildComponents","longname":"Component#getChildComponents","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getChildComponents","$kind":"method","id":3962,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * todo: replace all calls of this method to calls using the util.VNode class\n     * Get the ids of all child nodes of the given vnode\n     * @param {Object} vnode\n     * @param {String[]} childIds=[]\n     * @returns {String[]} childIds\n     */","meta":{"range":[6402,6495],"filename":"Component.mjs","lineno":218,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119591","name":"Component#getChildIds","type":"MethodDefinition","paramnames":["vnode","childIds"]},"vars":{"":null}},"description":"<p>todo: replace all calls of this method to calls using the util.VNode class\nGet the ids of all child nodes of the given vnode</p>\n","params":[{"type":{"names":["Object"]},"name":"vnode"},{"type":{"names":["Array.<String>"]},"defaultvalue":"[","name":"childIds"}],"returns":[{"type":{"names":["Array.<String>"]},"description":"childIds"}],"name":"getChildIds","longname":"Component#getChildIds","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getChildIds","$kind":"method","id":3963,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns all child components found inside the vnode tree\n     * @param {Neo.component.Base} component\n     * @returns {Neo.component.Base[]} childComponents\n     */","meta":{"range":[6681,7072],"filename":"Component.mjs","lineno":227,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119606","name":"Component#getChildren","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Returns all child components found inside the vnode tree</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"name":"component"}],"returns":[{"type":{"names":["Array.<Neo.component.Base>"]},"description":"childComponents"}],"name":"getChildren","longname":"Component#getChildren","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getChildren","$kind":"method","id":3964,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * !! For debugging purposes only !!\n     *\n     * Get the first component based on the ntype or other properties\n     *\n     * @param {String|Object|Array} componentDescription\n     * @param {Boolean} returnFirstMatch=true\n     * @returns {Neo.component.Base|null|Neo.component.Base[]}\n     *\n     * @example\n     // as String: ntype[comma separated propterties]\n     Neo.first('toolbar button[text=Try me,icon=people]')\n     // as Object: Add properties. ntype is optional\n     Neo.first({\n                icon: 'people'\n            })\n     // as Array: An Array of Objects. No Strings allowed\n     Neo.first([{\n                ntype: 'toolbar'\n            },{\n                ntype: 'button', text: 'Try me', icon: 'people\n            }])\n\n     * The returnFirstMatch flag allows to return all items and\n     * not stop after the first result.\n     *\n     * @example\n     Neo.first('button', false) // => [Button, Button, Button]\n     */","meta":{"range":[8031,9806],"filename":"Component.mjs","lineno":272,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119653","name":"Component#getFirst","type":"MethodDefinition","paramnames":["componentDescription","returnFirstMatch"]},"vars":{"":null}},"description":"<p>!! For debugging purposes only !!</p>\n<p>Get the first component based on the ntype or other properties</p>\n","params":[{"type":{"names":["String","Object","Array"]},"name":"componentDescription"},{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"returnFirstMatch"}],"returns":[{"type":{"names":["Neo.component.Base","null","Array.<Neo.component.Base>"]}}],"examples":["// as String: ntype[comma separated propterties]\n     Neo.first('toolbar button[text=Try me,icon=people]')\n     // as Object: Add properties. ntype is optional\n     Neo.first({\n                icon: 'people'\n            })\n     // as Array: An Array of Objects. No Strings allowed\n     Neo.first([{\n                ntype: 'toolbar'\n            },{\n                ntype: 'button', text: 'Try me', icon: 'people\n            }])\nThe returnFirstMatch flag allows to return all items and\nnot stop after the first result.","Neo.first('button', false) // => [Button, Button, Button]"],"name":"getFirst","longname":"Component#getFirst","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getFirst","$kind":"method","id":3965,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns an Array containing the ids of all parent components for a given component\n     * @param {Neo.component.Base} component\n     * @returns {String[]} parentIds\n     */","meta":{"range":[10000,10281],"filename":"Component.mjs","lineno":332,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119850","name":"Component#getParentIds","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Returns an Array containing the ids of all parent components for a given component</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"name":"component"}],"returns":[{"type":{"names":["Array.<String>"]},"description":"parentIds"}],"name":"getParentIds","longname":"Component#getParentIds","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getParentIds","$kind":"method","id":3966,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @param {Array} path\n     * @returns {Array}\n     */","meta":{"range":[10354,10722],"filename":"Component.mjs","lineno":350,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119885","name":"Component#getParentPath","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"params":[{"type":{"names":["Array"]},"name":"path"}],"returns":[{"type":{"names":["Array"]}}],"name":"getParentPath","longname":"Component#getParentPath","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getParentPath","$kind":"method","id":3967,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns an Array containing all parent components for a given component or component id\n     * @param {Neo.component.Base|String} component\n     * @returns {Neo.component.Base[]} parents\n     */","meta":{"range":[10938,11306],"filename":"Component.mjs","lineno":370,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119941","name":"Component#getParents","type":"MethodDefinition","paramnames":["component"]},"vars":{"":null}},"description":"<p>Returns an Array containing all parent components for a given component or component id</p>\n","params":[{"type":{"names":["Neo.component.Base","String"]},"name":"component"}],"returns":[{"type":{"names":["Array.<Neo.component.Base>"]},"description":"parents"}],"name":"getParents","longname":"Component#getParents","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getParents","$kind":"method","id":3968,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Copies a given vdom tree and replaces child component references with the vdom of their matching components\n     * @param {Object} vdom\n     * @param {Number} depth=-1\n     *     The component replacement depth.\n     *     -1 will parse the full tree, 1 top level only, 2 include children, 3 include grandchildren\n     * @returns {Object}\n     */","meta":{"range":[11674,12371],"filename":"Component.mjs","lineno":396,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100119989","name":"Component#getVdomTree","type":"MethodDefinition","paramnames":["vdom","depth"]},"vars":{"":null}},"description":"<p>Copies a given vdom tree and replaces child component references with the vdom of their matching components</p>\n","params":[{"type":{"names":["Object"]},"name":"vdom"},{"type":{"names":["Number"]},"defaultvalue":-1,"description":"<p>The component replacement depth.\n    -1 will parse the full tree, 1 top level only, 2 include children, 3 include grandchildren</p>\n","name":"depth"}],"returns":[{"type":{"names":["Object"]}}],"name":"getVdomTree","longname":"Component#getVdomTree","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getVdomTree","$kind":"method","id":3969,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Copies a given vnode tree and replaces child component references with the vnode of their matching components\n     * @param {Object} vnode\n     * @param {Number} depth=-1\n     *     The component replacement depth.\n     *     -1 will parse the full tree, 1 top level only, 2 include children, 3 include grandchildren\n     * @returns {Object}\n     */","meta":{"range":[12742,13630],"filename":"Component.mjs","lineno":431,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100120109","name":"Component#getVnodeTree","type":"MethodDefinition","paramnames":["vnode","depth"]},"vars":{"":null}},"description":"<p>Copies a given vnode tree and replaces child component references with the vnode of their matching components</p>\n","params":[{"type":{"names":["Object"]},"name":"vnode"},{"type":{"names":["Number"]},"defaultvalue":-1,"description":"<p>The component replacement depth.\n    -1 will parse the full tree, 1 top level only, 2 include children, 3 include grandchildren</p>\n","name":"depth"}],"returns":[{"type":{"names":["Object"]}}],"name":"getVnodeTree","longname":"Component#getVnodeTree","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#getVnodeTree","$kind":"method","id":3970,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Check if the component had a property of any value somewhere in the Prototype chain\n     *\n     * @param {Neo.component.Base} component\n     * @param {String} property\n     * @param {*} value\n     * @returns {boolean}\n     */","meta":{"range":[13877,14181],"filename":"Component.mjs","lineno":469,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100120222","name":"Component#hasPrototypePropertyValue","type":"MethodDefinition","paramnames":["component","property","value"]},"vars":{"":null}},"description":"<p>Check if the component had a property of any value somewhere in the Prototype chain</p>\n","params":[{"type":{"names":["Neo.component.Base"]},"name":"component"},{"type":{"names":["String"]},"name":"property"},{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["boolean"]}}],"name":"hasPrototypePropertyValue","longname":"Component#hasPrototypePropertyValue","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#hasPrototypePropertyValue","$kind":"method","id":3971,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @param {String} wrapperId\n     * @param {Neo.component.Base} component\n     */","meta":{"range":[14281,14382],"filename":"Component.mjs","lineno":485,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100120257","name":"Component#registerWrapperNode","type":"MethodDefinition","paramnames":["wrapperId","component"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"wrapperId"},{"type":{"names":["Neo.component.Base"]},"name":"component"}],"name":"registerWrapperNode","longname":"Component#registerWrapperNode","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#registerWrapperNode","$kind":"method","id":3972,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * @param {Neo.component.Base|String} item\n     */","meta":{"range":[14451,14742],"filename":"Component.mjs","lineno":492,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100120272","name":"Component#unregister","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"params":[{"type":{"names":["Neo.component.Base","String"]},"name":"item"}],"name":"unregister","longname":"Component#unregister","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#unregister","$kind":"method","id":3973,"neoClassName":"Neo.manager.Component"},{"comment":"/**\n     * Returns the first component which matches the config-selector.\n     * Use returnFirstMatch=false to get an array of all matching items instead.\n     * If no match is found, returns null in case returnFirstMatch === true, otherwise an empty Array.\n     * @param {String} componentId\n     * @param {Object|String|null} config\n     * @param {Boolean} returnFirstMatch=true\n     * @returns {Neo.component.Base|Neo.component.Base[]|null}\n     */","meta":{"range":[15204,16280],"filename":"Component.mjs","lineno":513,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/manager","code":{"id":"astnode100120324","name":"Component#up","type":"MethodDefinition","paramnames":["componentId","config","returnFirstMatch"]},"vars":{"":null}},"description":"<p>Returns the first component which matches the config-selector.\nUse returnFirstMatch=false to get an array of all matching items instead.\nIf no match is found, returns null in case returnFirstMatch === true, otherwise an empty Array.</p>\n","params":[{"type":{"names":["String"]},"name":"componentId"},{"type":{"names":["Object","String","null"]},"name":"config"},{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"returnFirstMatch"}],"returns":[{"type":{"names":["Neo.component.Base","Array.<Neo.component.Base>","null"]}}],"name":"up","longname":"Component#up","kind":"function","memberof":"Component","scope":"instance","$longname":"Component#up","$kind":"method","id":3974,"neoClassName":"Neo.manager.Component"}]}