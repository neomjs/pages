{"classData":[{"comment":"/**\n * Creates a reactive effect that automatically tracks its dependencies and re-runs when any of them change.\n * This is a lightweight, plain JavaScript class for performance.\n * It serves as a core reactive primitive, enabling automatic and dynamic dependency tracking.\n * @class Neo.core.Effect\n */","meta":{"filename":"Effect.mjs","lineno":6,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Creates a reactive effect that automatically tracks its dependencies and re-runs when any of them change.\nThis is a lightweight, plain JavaScript class for performance.\nIt serves as a core reactive primitive, enabling automatic and dynamic dependency tracking.</p>\n","kind":"class","name":"Effect","memberof":"Neo.core","longname":"Neo.core.Effect","scope":"static","$longname":"Neo.core.Effect","$kind":"class","id":1848,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * The optional component id this effect belongs to.\n     * @member {String|null} componentId=null\n     */","meta":{"filename":"Effect.mjs","lineno":17,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The optional component id this effect belongs to.</p>\n","kind":"member","name":"componentId","type":{"names":["String","null"]},"defaultvalue":null,"longname":"componentId","scope":"global","$longname":"componentId","$kind":"property","id":1849,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * A Map containing Config instances as keys and their cleanup functions as values.\n     * @member {Map} dependencies=new Map()\n     * @protected\n     */","meta":{"filename":"Effect.mjs","lineno":23,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A Map containing Config instances as keys and their cleanup functions as values.</p>\n","kind":"member","name":"dependencies","type":{"names":["Map"]},"defaultvalue":"new","access":"protected","longname":"dependencies","scope":"global","$longname":"dependencies","$kind":"property","id":1850,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * The function to execute.\n     * @member {Function|null} _fn=null\n     */","meta":{"filename":"Effect.mjs","lineno":28,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The function to execute.</p>\n","kind":"member","name":"_fn","type":{"names":["function","null"]},"defaultvalue":null,"longname":"_fn","scope":"global","$longname":"_fn","$kind":"property","id":1851,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * The unique identifier for this effect instance.\n     * @member {String|null}\n     */","meta":{"range":[1076,1108],"filename":"Effect.mjs","lineno":37,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057427","name":"id","type":"ClassProperty"}},"description":"<p>The unique identifier for this effect instance.</p>\n","kind":"member","type":{"names":["String","null"]},"name":"id","longname":"Effect#id","memberof":"Effect","scope":"instance","$longname":"Effect#id","$kind":"property","id":1852,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * @member {Boolean}\n     * @protected\n     */","meta":{"range":[1172,1191],"filename":"Effect.mjs","lineno":42,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057433","name":"isDestroyed","type":"ClassProperty"}},"kind":"member","type":{"names":["Boolean"]},"access":"protected","name":"isDestroyed","longname":"Effect#isDestroyed","memberof":"Effect","scope":"instance","$longname":"Effect#isDestroyed","$kind":"property","id":1853,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * @member {Neo.core.Config}\n     * @protected\n     */","meta":{"range":[1263,1279],"filename":"Effect.mjs","lineno":47,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057435","name":"isRunning","type":"ClassProperty"}},"kind":"member","type":{"names":["Neo.core.Config"]},"access":"protected","name":"isRunning","longname":"Effect#isRunning","memberof":"Effect","scope":"instance","$longname":"Effect#isRunning","$kind":"property","id":1854,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * @member fn\n     */","meta":{"filename":"Effect.mjs","lineno":48,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"fn","longname":"fn","scope":"global","$longname":"fn","$kind":"property","id":1855,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * @param {Function|Object}  fn              - The function to execute, or a config object for the effect.\n     * @param {Function}        [fn.fn]          - The function to execute for the effect (if the first argument is an object).\n     * @param {String}          [fn.componentId] - The component id this effect belongs to.\n     * @param {Boolean}         [fn.lazy=false]  - If true, the effect will not run immediately upon creation.\n     * @param {Object|Object[]} [fn.subscriber]  - A single subscriber or an array of subscribers for the isRunning config.\n     * @param {Object}          [options={}]     - Optional. Used if the first argument is a function, this object contains the options.\n     * @example\n     * // Signature 1: Function and Options\n     * const myEffect = new Effect(() => console.log('Run'), {lazy: true});\n     * @example\n     * // Signature 2: Single Config Object\n     * const myEffect = new Effect({fn: () => console.log('Run'), lazy: true});\n     */","meta":{"range":[2689,3903],"filename":"Effect.mjs","lineno":73,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057461","name":"Effect","type":"MethodDefinition","paramnames":["fn","options"]},"vars":{"":null}},"params":[{"type":{"names":["function","Object"]},"description":"<p>The function to execute, or a config object for the effect.</p>\n","name":"fn"},{"type":{"names":["function"]},"optional":true,"description":"<p>The function to execute for the effect (if the first argument is an object).</p>\n","name":"fn.fn"},{"type":{"names":["String"]},"optional":true,"description":"<p>The component id this effect belongs to.</p>\n","name":"fn.componentId"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"<p>If true, the effect will not run immediately upon creation.</p>\n","name":"fn.lazy"},{"type":{"names":["Object","Array.<Object>"]},"optional":true,"description":"<p>A single subscriber or an array of subscribers for the isRunning config.</p>\n","name":"fn.subscriber"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>Optional. Used if the first argument is a function, this object contains the options.</p>\n","name":"options"}],"examples":["// Signature 1: Function and Options\nconst myEffect = new Effect(() => console.log('Run'), {lazy: true});","// Signature 2: Single Config Object\nconst myEffect = new Effect({fn: () => console.log('Run'), lazy: true});"],"name":"Effect","longname":"Effect","kind":"class","scope":"global","$longname":"Effect","$kind":"constructor","id":1856,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * Cleans up all subscriptions and destroys the effect.\n     */","meta":{"range":[3985,4146],"filename":"Effect.mjs","lineno":111,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057553","name":"Effect#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Cleans up all subscriptions and destroys the effect.</p>\n","name":"destroy","longname":"Effect#destroy","kind":"function","memberof":"Effect","scope":"instance","params":[],"$longname":"Effect#destroy","$kind":"method","id":1857,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * Executes the effect function, tracking its dependencies.\n     * This is called automatically on creation and whenever a dependency changes.\n     * The dynamic re-tracking ensures the effect always reflects its current dependencies,\n     * even if the logic within `fn` changes conditionally.\n     * @protected\n     */","meta":{"range":[4485,5361],"filename":"Effect.mjs","lineno":126,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057585","name":"Effect#run","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Executes the effect function, tracking its dependencies.\nThis is called automatically on creation and whenever a dependency changes.\nThe dynamic re-tracking ensures the effect always reflects its current dependencies,\neven if the logic within <code>fn</code> changes conditionally.</p>\n","access":"protected","name":"run","longname":"Effect#run","kind":"function","memberof":"Effect","scope":"instance","params":[],"$longname":"Effect#run","$kind":"method","id":1858,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * Adds a `Neo.core.Config` instance as a dependency for this effect.\n     * @param {Neo.core.Config} config The config instance to subscribe to.\n     * @protected\n     */","meta":{"range":[5551,5933],"filename":"Effect.mjs","lineno":163,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057697","name":"Effect#addDependency","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Adds a <code>Neo.core.Config</code> instance as a dependency for this effect.</p>\n","params":[{"type":{"names":["Neo.core.Config"]},"description":"<p>The config instance to subscribe to.</p>\n","name":"config"}],"access":"protected","name":"addDependency","longname":"Effect#addDependency","kind":"function","memberof":"Effect","scope":"instance","$longname":"Effect#addDependency","$kind":"method","id":1859,"neoClassName":"Neo.core.Effect"},{"comment":"/**\n     * Factory shortcut to create a new Neo.core.Effect instance.\n     * @function Neo.effect\n     * @param {Function|Object} fn - The function to execute, or a config object for the effect.\n     * @param {Object} [options] - Optional. Used if the first argument is a function.\n     * @returns {Neo.core.Effect}\n     */","meta":{"filename":"Effect.mjs","lineno":183,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Factory shortcut to create a new Neo.core.Effect instance.</p>\n","kind":"function","name":"effect","params":[{"type":{"names":["function","Object"]},"description":"<p>The function to execute, or a config object for the effect.</p>\n","name":"fn"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Optional. Used if the first argument is a function.</p>\n","name":"options"}],"returns":[{"type":{"names":["Neo.core.Effect"]}}],"memberof":"Neo","longname":"Neo.effect","scope":"static","$longname":"Neo.effect","$kind":"method","id":1860,"neoClassName":"Neo.core.Effect"}]}