{"classData":[{"comment":"/**\n * A singleton manager to track the currently running effect and control global effect execution.\n * It provides a centralized mechanism for pausing, resuming, and batching effect runs.\n * @class Neo.core.EffectManager\n * @singleton\n */","meta":{"filename":"EffectManager.mjs","lineno":1,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A singleton manager to track the currently running effect and control global effect execution.\nIt provides a centralized mechanism for pausing, resuming, and batching effect runs.</p>\n","kind":"class","name":"EffectManager","tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.core","longname":"Neo.core.EffectManager","scope":"static","$longname":"Neo.core.EffectManager","$kind":"class","id":1869,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * A stack to keep track of the currently active effect and its predecessors.\n     * @member {Neo.core.Effect[]} effectStack=[]\n     * @protected\n     */","meta":{"filename":"EffectManager.mjs","lineno":13,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A stack to keep track of the currently active effect and its predecessors.</p>\n","kind":"member","name":"effectStack","type":{"names":["Array.<Neo.core.Effect>"]},"defaultvalue":"[]","access":"protected","longname":"effectStack","scope":"global","$longname":"effectStack","$kind":"property","id":1870,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * A flag to temporarily disable dependency tracking for the active effect.\n     * This is used internally to prevent effects from depending on their own state, like `isRunning`.\n     * @member {Boolean} isTrackingPaused=false\n     * @protected\n     */","meta":{"filename":"EffectManager.mjs","lineno":20,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A flag to temporarily disable dependency tracking for the active effect.\nThis is used internally to prevent effects from depending on their own state, like <code>isRunning</code>.</p>\n","kind":"member","name":"isTrackingPaused","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isTrackingPaused","scope":"global","$longname":"isTrackingPaused","$kind":"property","id":1871,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * A counter to manage nested calls to pause() and resume(). Effect execution is\n     * paused or batched while this counter is greater than 0.\n     * @member {Number} pauseCounter=0\n     * @protected\n     */","meta":{"filename":"EffectManager.mjs","lineno":27,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A counter to manage nested calls to pause() and resume(). Effect execution is\npaused or batched while this counter is greater than 0.</p>\n","kind":"member","name":"pauseCounter","type":{"names":["Number"]},"defaultvalue":0,"access":"protected","longname":"pauseCounter","scope":"global","$longname":"pauseCounter","$kind":"property","id":1872,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * A Set to store unique effects that are triggered while the manager is paused.\n     * These effects will be run when resume() is called and the pauseCounter returns to 0.\n     * @member {Set<Neo.core.Effect>} queuedEffects=new Set()\n     * @protected\n     */","meta":{"filename":"EffectManager.mjs","lineno":34,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A Set to store unique effects that are triggered while the manager is paused.\nThese effects will be run when resume() is called and the pauseCounter returns to 0.</p>\n","kind":"member","name":"queuedEffects","type":{"names":["Set.<Neo.core.Effect>"]},"defaultvalue":"new","access":"protected","longname":"queuedEffects","scope":"global","$longname":"queuedEffects","$kind":"property","id":1873,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Adds a `Neo.core.Config` instance as a dependency for the currently active effect,\n     * unless dependency tracking is explicitly paused.\n     * @param {Neo.core.Config} config The config instance to add as a dependency.\n     */","meta":{"range":[1541,1676],"filename":"EffectManager.mjs","lineno":41,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057885","name":"addDependency","type":"FunctionExpression"}},"description":"<p>Adds a <code>Neo.core.Config</code> instance as a dependency for the currently active effect,\nunless dependency tracking is explicitly paused.</p>\n","params":[{"type":{"names":["Neo.core.Config"]},"description":"<p>The config instance to add as a dependency.</p>\n","name":"config"}],"name":"addDependency","longname":"EffectManager.addDependency","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.addDependency","$kind":"method","id":1874,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Returns the effect currently at the top of the stack (i.e., the one currently running).\n     * @returns {Neo.core.Effect|null}\n     */","meta":{"range":[1833,1919],"filename":"EffectManager.mjs","lineno":51,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057897","name":"getActiveEffect","type":"FunctionExpression"}},"description":"<p>Returns the effect currently at the top of the stack (i.e., the one currently running).</p>\n","returns":[{"type":{"names":["Neo.core.Effect","null"]}}],"name":"getActiveEffect","longname":"EffectManager.getActiveEffect","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.getActiveEffect","$kind":"method","id":1875,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Checks if effect execution is currently paused or batched.\n     * @returns {Boolean} True if the pauseCounter is greater than 0.\n     */","meta":{"range":[2078,2133],"filename":"EffectManager.mjs","lineno":59,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057912","name":"isPaused","type":"FunctionExpression"}},"description":"<p>Checks if effect execution is currently paused or batched.</p>\n","returns":[{"type":{"names":["Boolean"]},"description":"True if the pauseCounter is greater than 0."}],"name":"isPaused","longname":"EffectManager.isPaused","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.isPaused","$kind":"method","id":1876,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Pauses effect execution and begins batching.\n     * Each call to pause() increments a counter, allowing for nested control.\n     */","meta":{"range":[2287,2330],"filename":"EffectManager.mjs","lineno":67,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057921","name":"pause","type":"FunctionExpression"}},"description":"<p>Pauses effect execution and begins batching.\nEach call to pause() increments a counter, allowing for nested control.</p>\n","name":"pause","longname":"EffectManager.pause","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.pause","$kind":"method","id":1877,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Disables dependency tracking for the currently active effect.\n     * @protected\n     */","meta":{"range":[2440,2500],"filename":"EffectManager.mjs","lineno":75,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057929","name":"pauseTracking","type":"FunctionExpression"},"vars":{"this.isTrackingPaused":"EffectManager.pauseTracking#isTrackingPaused"}},"description":"<p>Disables dependency tracking for the currently active effect.</p>\n","access":"protected","name":"pauseTracking","longname":"EffectManager.pauseTracking","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.pauseTracking","$kind":"method","id":1878,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Pops the current effect from the stack.\n     * @returns {Neo.core.Effect|null}\n     */","meta":{"range":[2609,2660],"filename":"EffectManager.mjs","lineno":83,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057938","name":"pop","type":"FunctionExpression"}},"description":"<p>Pops the current effect from the stack.</p>\n","returns":[{"type":{"names":["Neo.core.Effect","null"]}}],"name":"pop","longname":"EffectManager.pop","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.pop","$kind":"method","id":1879,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Pushes an effect onto the stack.\n     * @param {Neo.core.Effect} effect The effect to push.\n     */","meta":{"range":[2782,2840],"filename":"EffectManager.mjs","lineno":91,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057948","name":"push","type":"FunctionExpression"}},"description":"<p>Pushes an effect onto the stack.</p>\n","params":[{"type":{"names":["Neo.core.Effect"]},"description":"<p>The effect to push.</p>\n","name":"effect"}],"name":"push","longname":"EffectManager.push","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.push","$kind":"method","id":1880,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Queues a unique effect to be run later.\n     * @param {Neo.core.Effect} effect The effect to queue.\n     * @protected\n     */","meta":{"range":[2988,3048],"filename":"EffectManager.mjs","lineno":100,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057960","name":"queue","type":"FunctionExpression"}},"description":"<p>Queues a unique effect to be run later.</p>\n","params":[{"type":{"names":["Neo.core.Effect"]},"description":"<p>The effect to queue.</p>\n","name":"effect"}],"access":"protected","name":"queue","longname":"EffectManager.queue","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.queue","$kind":"method","id":1881,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Resumes effect execution. If the pause counter returns to zero and effects\n     * have been queued, they will all be executed synchronously.\n     */","meta":{"range":[3219,3583],"filename":"EffectManager.mjs","lineno":108,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100057972","name":"resume","type":"FunctionExpression"},"vars":{"me":"EffectManager.resume~me","effectsToRun":"EffectManager.resume~effectsToRun","":null}},"description":"<p>Resumes effect execution. If the pause counter returns to zero and effects\nhave been queued, they will all be executed synchronously.</p>\n","name":"resume","longname":"EffectManager.resume","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.resume","$kind":"method","id":1882,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Re-enables dependency tracking for the currently active effect.\n     * @protected\n     */","meta":{"range":[3695,3757],"filename":"EffectManager.mjs","lineno":126,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100058032","name":"resumeTracking","type":"FunctionExpression"},"vars":{"this.isTrackingPaused":"EffectManager.resumeTracking#isTrackingPaused"}},"description":"<p>Re-enables dependency tracking for the currently active effect.</p>\n","access":"protected","name":"resumeTracking","longname":"EffectManager.resumeTracking","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.resumeTracking","$kind":"method","id":1883,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Wraps a function in a batch operation, ensuring that all effects triggered\n     * within it are run only once after the function completes.\n     * @function Neo.batch\n     * @param {Function} fn The function to execute.\n     */","meta":{"filename":"EffectManager.mjs","lineno":132,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Wraps a function in a batch operation, ensuring that all effects triggered\nwithin it are run only once after the function completes.</p>\n","kind":"function","name":"batch","params":[{"type":{"names":["function"]},"description":"<p>The function to execute.</p>\n","name":"fn"}],"memberof":"Neo","longname":"Neo.batch","scope":"static","$longname":"Neo.batch","$kind":"method","id":1884,"neoClassName":"Neo.core.EffectManager"}]}