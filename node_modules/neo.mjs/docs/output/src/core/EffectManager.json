{"classData":[{"comment":"/**\n * A singleton manager to track the currently running effect.\n * This allows reactive properties to know which effect to subscribe to.\n * @class Neo.core.EffectManager\n * @singleton\n */","meta":{"filename":"EffectManager.mjs","lineno":1,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A singleton manager to track the currently running effect.\nThis allows reactive properties to know which effect to subscribe to.</p>\n","kind":"class","name":"EffectManager","tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.core","longname":"Neo.core.EffectManager","scope":"static","$longname":"Neo.core.EffectManager","$kind":"class","id":1905,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Returns the effect currently at the top of the stack (i.e., the one currently running).\n     * @returns {Neo.core.Effect|null}\n     */","meta":{"range":[390,476],"filename":"EffectManager.mjs","lineno":14,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100059467","name":"getActiveEffect","type":"FunctionExpression"}},"description":"<p>Returns the effect currently at the top of the stack (i.e., the one currently running).</p>\n","returns":[{"type":{"names":["Neo.core.Effect","null"]}}],"name":"getActiveEffect","longname":"EffectManager.getActiveEffect","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.getActiveEffect","$kind":"method","id":1906,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Pops the current effect from the stack, returning to the previous effect (if any).\n     * @returns {Neo.core.Effect|null}\n     */","meta":{"range":[628,679],"filename":"EffectManager.mjs","lineno":22,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100059482","name":"pop","type":"FunctionExpression"}},"description":"<p>Pops the current effect from the stack, returning to the previous effect (if any).</p>\n","returns":[{"type":{"names":["Neo.core.Effect","null"]}}],"name":"pop","longname":"EffectManager.pop","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.pop","$kind":"method","id":1907,"neoClassName":"Neo.core.EffectManager"},{"comment":"/**\n     * Pushes an effect onto the stack, marking it as the currently running effect.\n     * @param {Neo.core.Effect} effect The effect to push.\n     */","meta":{"range":[845,903],"filename":"EffectManager.mjs","lineno":30,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100059492","name":"push","type":"FunctionExpression"}},"description":"<p>Pushes an effect onto the stack, marking it as the currently running effect.</p>\n","params":[{"type":{"names":["Neo.core.Effect"]},"description":"<p>The effect to push.</p>\n","name":"effect"}],"name":"push","longname":"EffectManager.push","kind":"function","memberof":"EffectManager","scope":"static","$longname":"EffectManager.push","$kind":"method","id":1908,"neoClassName":"Neo.core.EffectManager"}]}