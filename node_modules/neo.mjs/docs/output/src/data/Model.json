{"classData":[{"comment":"/**\n * @class Neo.data.Model\n * @extends Neo.core.Base\n */","meta":{"filename":"Model.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"class","name":"Model","augments":["Neo.core.Base"],"memberof":"Neo.data","longname":"Neo.data.Model","scope":"static","$longname":"Neo.data.Model","$kind":"class","id":1974,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} className='Neo.data.Model'\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":14,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.data.Model'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1975,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} ntype='model'\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":19,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'model'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1976,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {Object[]|null} fields_=null\n         * @reactive\n         */","meta":{"filename":"Model.mjs","lineno":24,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"fields_","type":{"names":["Array.<Object>","null"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"fields_","scope":"global","$longname":"fields_","$kind":"property","id":1977,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} keyProperty_='id'\n         * @reactive\n         */","meta":{"filename":"Model.mjs","lineno":29,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"keyProperty_","type":{"names":["String"]},"defaultvalue":"'id'","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"keyProperty_","scope":"global","$longname":"keyProperty_","$kind":"property","id":1978,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String|null} storeId=null\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"storeId","type":{"names":["String","null"]},"defaultvalue":null,"access":"protected","longname":"storeId","scope":"global","$longname":"storeId","$kind":"property","id":1979,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * Set this config to true in case you want to track modified fields.\n         * Be aware that this will double the amount of data inside each record,\n         * since each field will get an original value flag.\n         * @member {Boolean} trackModifiedFields=false\n         */","meta":{"filename":"Model.mjs","lineno":41,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"description":"<p>Set this config to true in case you want to track modified fields.\nBe aware that this will double the amount of data inside each record,\nsince each field will get an original value flag.</p>\n","kind":"member","name":"trackModifiedFields","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"trackModifiedFields","scope":"global","$longname":"trackModifiedFields","$kind":"property","id":1980,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * Internally storing all fields, which have a calculate property\n     * @member {Map} calculatedFieldsMap=new Map()\n     * @protected\n     */","meta":{"filename":"Model.mjs","lineno":49,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"description":"<p>Internally storing all fields, which have a calculate property</p>\n","kind":"member","name":"calculatedFieldsMap","type":{"names":["Map"]},"defaultvalue":"new","access":"protected","longname":"calculatedFieldsMap","scope":"global","$longname":"calculatedFieldsMap","$kind":"property","id":1981,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * Internally storing all fields inside a flat map => nested fields included\n     * @member {Map} fieldsMap=new Map()\n     * @protected\n     */","meta":{"filename":"Model.mjs","lineno":55,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"description":"<p>Internally storing all fields inside a flat map =&gt; nested fields included</p>\n","kind":"member","name":"fieldsMap","type":{"names":["Map"]},"defaultvalue":"new","access":"protected","longname":"fieldsMap","scope":"global","$longname":"fieldsMap","$kind":"property","id":1982,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * @member {Boolean} hasNestedFields=false\n     * @protected\n     */","meta":{"filename":"Model.mjs","lineno":60,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"hasNestedFields","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"hasNestedFields","scope":"global","$longname":"hasNestedFields","$kind":"property","id":1983,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     Triggered after the fields config got changed\n     * @param {Object[]|null} value\n     * @param {Object[]|null} oldValue\n     * @protected\n     */","meta":{"range":[1792,2232],"filename":"Model.mjs","lineno":68,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100060929","name":"Model#afterSetFields","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the fields config got changed</p>\n","params":[{"type":{"names":["Array.<Object>","null"]},"name":"value"},{"type":{"names":["Array.<Object>","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetFields","longname":"Model#afterSetFields","kind":"function","memberof":"Model","scope":"instance","$longname":"Model#afterSetFields","$kind":"method","id":1984,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * Finds a field config by a given field name\n     * @param {String} name\n     * @returns {Object|null} The field config object or null if no match was found\n     */","meta":{"range":[2416,2486],"filename":"Model.mjs","lineno":87,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100060960","name":"Model#getField","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"<p>Finds a field config by a given field name</p>\n","params":[{"type":{"names":["String"]},"name":"name"}],"returns":[{"type":{"names":["Object","null"]},"description":"The field config object or null if no match was found"}],"name":"getField","longname":"Model#getField","kind":"function","memberof":"Model","scope":"instance","$longname":"Model#getField","$kind":"method","id":1985,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * Finds a field type by a given field name\n     * @param {String} name\n     * @returns {String|null} The lowercase field type or null if no match was found\n     */","meta":{"range":[2669,2759],"filename":"Model.mjs","lineno":96,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100060975","name":"Model#getFieldType","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"<p>Finds a field type by a given field name</p>\n","params":[{"type":{"names":["String"]},"name":"name"}],"returns":[{"type":{"names":["String","null"]},"description":"The lowercase field type or null if no match was found"}],"name":"getFieldType","longname":"Model#getFieldType","kind":"function","memberof":"Model","scope":"instance","$longname":"Model#getFieldType","$kind":"method","id":1986,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * @param {Object[]} fields\n     * @param {Boolean} isRoot=true\n     * @param {String} path=''\n     */","meta":{"range":[2880,3616],"filename":"Model.mjs","lineno":105,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100060984","name":"Model#updateFieldsMap","type":"MethodDefinition","paramnames":["fields","isRoot","path"]},"vars":{"":null}},"params":[{"type":{"names":["Array.<Object>"]},"name":"fields"},{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"isRoot"},{"type":{"names":["String"]},"defaultvalue":"''","name":"path"}],"name":"updateFieldsMap","longname":"Model#updateFieldsMap","kind":"function","memberof":"Model","scope":"instance","$longname":"Model#updateFieldsMap","$kind":"method","id":1987,"neoClassName":"Neo.data.Model"}]}