{"classData":[{"comment":"/**\n * The abstract base class for e.g. the App, Data & VDom worker\n * @class Neo.worker.Base\n * @extends Neo.core.Base\n * @mixes Neo.core.Observable\n * @mixes Neo.worker.mixin.RemoteMethodAccess\n * @abstract\n */","meta":{"filename":"Base.mjs","lineno":8,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>The abstract base class for e.g. the App, Data &amp; VDom worker</p>\n","kind":"class","name":"Base","augments":["Neo.core.Base"],"mixes":["Neo.core.Observable","Neo.worker.mixin.RemoteMethodAccess"],"virtual":true,"memberof":"Neo.worker","longname":"Neo.worker.Base","scope":"static","$longname":"Neo.worker.Base","$kind":"class","id":5573,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n         * @member {String} className='Neo.worker.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":22,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.worker.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":5574,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n         * @member {String[]|Neo.core.Base[]|null} mixins=[Observable,RemoteMethodAccess]\n         */","meta":{"filename":"Base.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"mixins","type":{"names":["Array.<String>","Array.<Neo.core.Base>","null"]},"defaultvalue":"[Observable,RemoteMethodAccess]","longname":"mixins","scope":"global","$longname":"mixins","$kind":"property","id":5575,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @member {Object|null} channelPorts=null\n     * @protected\n     */","meta":{"filename":"Base.mjs","lineno":33,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"channelPorts","type":{"names":["Object","null"]},"defaultvalue":null,"access":"protected","longname":"channelPorts","scope":"global","$longname":"channelPorts","$kind":"property","id":5576,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only needed for SharedWorkers\n     * @member {Boolean} isConnected=false\n     * @protected\n     */","meta":{"filename":"Base.mjs","lineno":39,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>Only needed for SharedWorkers</p>\n","kind":"member","name":"isConnected","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isConnected","scope":"global","$longname":"isConnected","$kind":"property","id":5577,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @member {Boolean} isSharedWorker=false\n     * @protected\n     */","meta":{"filename":"Base.mjs","lineno":44,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"isSharedWorker","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isSharedWorker","scope":"global","$longname":"isSharedWorker","$kind":"property","id":5578,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only needed for SharedWorkers\n     * @member {Array|null} ports=null\n     */","meta":{"filename":"Base.mjs","lineno":49,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>Only needed for SharedWorkers</p>\n","kind":"member","name":"ports","type":{"names":["Array","null"]},"defaultvalue":null,"longname":"ports","scope":"global","$longname":"ports","$kind":"property","id":5579,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @member {String|null} workerId=null\n     * @protected\n     */","meta":{"filename":"Base.mjs","lineno":54,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"workerId","type":{"names":["String","null"]},"defaultvalue":null,"access":"protected","longname":"workerId","scope":"global","$longname":"workerId","$kind":"property","id":5580,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[1538,2164],"filename":"Base.mjs","lineno":59,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177111","name":"Worker#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Worker#construct","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#construct","$kind":"method","id":5581,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Entry point for dedicated and shared workers\n     */","meta":{"range":[2238,2255],"filename":"Base.mjs","lineno":86,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177205","name":"Worker#afterConnect","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Entry point for dedicated and shared workers</p>\n","name":"afterConnect","longname":"Worker#afterConnect","kind":"function","memberof":"Worker","scope":"instance","params":[],"$longname":"Worker#afterConnect","$kind":"method","id":5582,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {Object} opts\n     * @returns {Object|null}\n     */","meta":{"range":[2335,2768],"filename":"Base.mjs","lineno":92,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177209","name":"Worker#getPort","type":"MethodDefinition","paramnames":["opts"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"opts"}],"returns":[{"type":{"names":["Object","null"]}}],"name":"getPort","longname":"Worker#getPort","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#getPort","$kind":"method","id":5583,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only relevant for SharedWorkers\n     * @param {Object} data\n     */","meta":{"range":[2857,3063],"filename":"Base.mjs","lineno":117,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177266","name":"Worker#onConnect","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Only relevant for SharedWorkers</p>\n","params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onConnect","longname":"Worker#onConnect","kind":"function","memberof":"Worker","scope":"instance","async":true,"$longname":"Worker#onConnect","$kind":"method","id":5584,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only relevant for SharedWorkers\n     * @param {Object} e\n     */","meta":{"range":[3149,3705],"filename":"Base.mjs","lineno":129,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177297","name":"Worker#onConnected","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"description":"<p>Only relevant for SharedWorkers</p>\n","params":[{"type":{"names":["Object"]},"name":"e"}],"name":"onConnected","longname":"Worker#onConnected","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onConnected","$kind":"method","id":5585,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     *\n     */","meta":{"range":[3734,3954],"filename":"Base.mjs","lineno":155,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177385","name":"Worker#onConstructed","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"onConstructed","longname":"Worker#onConstructed","kind":"function","memberof":"Worker","scope":"instance","params":[],"$longname":"Worker#onConstructed","$kind":"method","id":5586,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only relevant for SharedWorkers\n     * @param {Object} data\n     */","meta":{"range":[4043,4162],"filename":"Base.mjs","lineno":170,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177418","name":"Worker#onDisconnect","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Only relevant for SharedWorkers</p>\n","params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onDisconnect","longname":"Worker#onDisconnect","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onDisconnect","$kind":"method","id":5587,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {Object} e\n     */","meta":{"range":[4209,4829],"filename":"Base.mjs","lineno":178,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177442","name":"Worker#onMessage","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"e"}],"name":"onMessage","longname":"Worker#onMessage","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onMessage","$kind":"method","id":5588,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {Object} msg\n     */","meta":{"range":[4878,4941],"filename":"Base.mjs","lineno":204,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177536","name":"Worker#onPing","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"msg"}],"name":"onPing","longname":"Worker#onPing","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onPing","$kind":"method","id":5589,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Only relevant for SharedWorkers\n     * @param {Object} msg\n     * @param {String} msg.appName\n     */","meta":{"range":[5064,5386],"filename":"Base.mjs","lineno":213,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177550","name":"Worker#onRegisterApp","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"description":"<p>Only relevant for SharedWorkers</p>\n","params":[{"type":{"names":["Object"]},"name":"msg"},{"type":{"names":["String"]},"name":"msg.appName"}],"name":"onRegisterApp","longname":"Worker#onRegisterApp","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onRegisterApp","$kind":"method","id":5590,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Handles the initial registration of the `Neo.config` for this worker's realm.\n     * Triggered when receiving a worker message with `{action: 'registerNeoConfig'}` from the Main Thread's `Neo.worker.Manager`.\n     * This method is primarily responsible for setting the initial global `Neo.config` object in this worker's scope\n     * upon its creation. It also handles associating `windowId` with `MessagePort`s for Shared Workers.\n     *\n     * @param {Object} msg The incoming message object.\n     * @param {Object} msg.data The initial global Neo.config data object.\n     * @param {Number} msg.data.windowId The unique ID of the window/tab (relevant for SharedWorkers).\n     */","meta":{"range":[6088,6438],"filename":"Base.mjs","lineno":237,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177597","name":"Worker#onRegisterNeoConfig","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"description":"<p>Handles the initial registration of the <code>Neo.config</code> for this worker&#39;s realm.\nTriggered when receiving a worker message with <code>{action: &#39;registerNeoConfig&#39;}</code> from the Main Thread&#39;s <code>Neo.worker.Manager</code>.\nThis method is primarily responsible for setting the initial global <code>Neo.config</code> object in this worker&#39;s scope\nupon its creation. It also handles associating <code>windowId</code> with <code>MessagePort</code>s for Shared Workers.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The incoming message object.</p>\n","name":"msg"},{"type":{"names":["Object"]},"description":"<p>The initial global Neo.config data object.</p>\n","name":"msg.data"},{"type":{"names":["Number"]},"description":"<p>The unique ID of the window/tab (relevant for SharedWorkers).</p>\n","name":"msg.data.windowId"}],"name":"onRegisterNeoConfig","longname":"Worker#onRegisterNeoConfig","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onRegisterNeoConfig","$kind":"method","id":5591,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Handles runtime updates to the global `Neo.config` for this worker's realm.\n     * This method is triggered when receiving a worker message with `{action: 'setNeoConfig'}`\n     * from the Main Thread's `Neo.worker.Manager`. This message signifies a global config change\n     * that originated either from this worker's Main Thread or was broadcast from another\n     * connected browser window via a Shared Worker.\n     *\n     * It merges the incoming configuration changes into this worker's local `Neo.config`\n     * and fires a local `neoConfigChange` event, allowing other instances within this worker\n     * to react to the updated configuration.\n     *\n     * @param {Object} msg The destructured arguments from the message payload.\n     * @param {Object} msg.config The partial or full `Neo.config` object to merge.\n     */","meta":{"range":[7289,7428],"filename":"Base.mjs","lineno":268,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177652","name":"Worker#onSetNeoConfig","type":"MethodDefinition","paramnames":[""]},"vars":{"":null}},"description":"<p>Handles runtime updates to the global <code>Neo.config</code> for this worker&#39;s realm.\nThis method is triggered when receiving a worker message with <code>{action: &#39;setNeoConfig&#39;}</code>\nfrom the Main Thread&#39;s <code>Neo.worker.Manager</code>. This message signifies a global config change\nthat originated either from this worker&#39;s Main Thread or was broadcast from another\nconnected browser window via a Shared Worker.</p>\n<p>It merges the incoming configuration changes into this worker&#39;s local <code>Neo.config</code>\nand fires a local <code>neoConfigChange</code> event, allowing other instances within this worker\nto react to the updated configuration.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The destructured arguments from the message payload.</p>\n","name":"msg"},{"type":{"names":["Object"]},"description":"<p>The partial or full <code>Neo.config</code> object to merge.</p>\n","name":"msg.config"}],"name":"onSetNeoConfig","longname":"Worker#onSetNeoConfig","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#onSetNeoConfig","$kind":"method","id":5592,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {String} dest app, data, main or vdom (excluding the current worker)\n     * @param {Object} opts configs for Neo.worker.Message\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\n     * and becomes available only to the worker it was sent to.\n     * @returns {Promise<any>}\n     */","meta":{"range":[7904,8375],"filename":"Base.mjs","lineno":284,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177679","name":"Worker#promiseMessage","type":"MethodDefinition","paramnames":["dest","opts","transfer"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"description":"<p>app, data, main or vdom (excluding the current worker)</p>\n","name":"dest"},{"type":{"names":["Object"]},"description":"<p>configs for Neo.worker.Message</p>\n","name":"opts"},{"type":{"names":["Array"]},"optional":true,"description":"<p>An optional array of Transferable objects to transfer ownership of.\nIf the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\nand becomes available only to the worker it was sent to.</p>\n","name":"transfer"}],"returns":[{"type":{"names":["Promise.<any>"]}}],"name":"promiseMessage","longname":"Worker#promiseMessage","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#promiseMessage","$kind":"method","id":5593,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * @param {String} dest app, canvas, data, main or vdom (excluding the current worker)\n     * @param {Object} opts configs for Neo.worker.Message\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\n     * and becomes available only to the worker it was sent to.\n     * @returns {Neo.worker.Message}\n     * @protected\n     */","meta":{"range":[8883,9898],"filename":"Base.mjs","lineno":309,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177730","name":"Worker#sendMessage","type":"MethodDefinition","paramnames":["dest","opts","transfer"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"description":"<p>app, canvas, data, main or vdom (excluding the current worker)</p>\n","name":"dest"},{"type":{"names":["Object"]},"description":"<p>configs for Neo.worker.Message</p>\n","name":"opts"},{"type":{"names":["Array"]},"optional":true,"description":"<p>An optional array of Transferable objects to transfer ownership of.\nIf the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\nand becomes available only to the worker it was sent to.</p>\n","name":"transfer"}],"returns":[{"type":{"names":["Neo.worker.Message"]}}],"access":"protected","name":"sendMessage","longname":"Worker#sendMessage","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#sendMessage","$kind":"method","id":5594,"neoClassName":"Neo.worker.Base"},{"comment":"/**\n     * Initiates a global Neo.config change from a worker's context.\n     * This method is exposed globally as `Neo.setGlobalConfig` within each worker realm.\n     *\n     * It orchestrates the propagation of the config change to the Main Thread\n     * and, if a Shared Worker is active, across all connected browser windows,\n     * ensuring a single, consistent Neo.config state everywhere.\n     *\n     * You can pass a partial config object to update specific keys.\n     * For nested objects, Neo.mjs performs a deep merge.\n     *\n     * @param {Object} config The partial or full Neo.config object with changes to apply.\n     */","meta":{"range":[10543,13045],"filename":"Base.mjs","lineno":358,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100177881","name":"Worker#setGlobalConfig","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Initiates a global Neo.config change from a worker&#39;s context.\nThis method is exposed globally as <code>Neo.setGlobalConfig</code> within each worker realm.</p>\n<p>It orchestrates the propagation of the config change to the Main Thread\nand, if a Shared Worker is active, across all connected browser windows,\nensuring a single, consistent Neo.config state everywhere.</p>\n<p>You can pass a partial config object to update specific keys.\nFor nested objects, Neo.mjs performs a deep merge.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The partial or full Neo.config object with changes to apply.</p>\n","name":"config"}],"name":"setGlobalConfig","longname":"Worker#setGlobalConfig","kind":"function","memberof":"Worker","scope":"instance","$longname":"Worker#setGlobalConfig","$kind":"method","id":5595,"neoClassName":"Neo.worker.Base"}]}