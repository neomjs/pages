{"classData":[{"comment":"/**\n * The App worker contains most parts of the framework as well as all apps which get created.\n * See the tutorials for further infos.\n * @class Neo.worker.App\n * @extends Neo.worker.Base\n * @singleton\n */","meta":{"filename":"App.mjs","lineno":9,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>The App worker contains most parts of the framework as well as all apps which get created.\nSee the tutorials for further infos.</p>\n","kind":"class","name":"App","augments":["Neo.worker.Base"],"tags":[{"originalTitle":"singleton","title":"singleton","text":""}],"memberof":"Neo.worker","longname":"Neo.worker.App","scope":"static","$longname":"Neo.worker.App","$kind":"class","id":5106,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {String} className='Neo.worker.App'\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":22,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.worker.App'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":5107,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * Remote method access for other workers\n         * @member {Object} remote\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":28,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>Remote method access for other workers</p>\n","kind":"member","name":"remote","type":{"names":["Object"]},"access":"protected","longname":"remote","scope":"global","$longname":"remote","$kind":"property","id":5108,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {Boolean} singleton=true\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":41,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"singleton","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"singleton","scope":"global","$longname":"singleton","$kind":"property","id":5109,"neoClassName":"Neo.worker.App"},{"comment":"/**\n         * @member {String} workerId='app'\n         * @protected\n         */","meta":{"filename":"App.mjs","lineno":46,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"workerId","type":{"names":["String"]},"defaultvalue":"'app'","access":"protected","longname":"workerId","scope":"global","$longname":"workerId","$kind":"property","id":5110,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @member {Object|null} data=null\n     * @protected\n     */","meta":{"filename":"App.mjs","lineno":53,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"data","type":{"names":["Object","null"]},"defaultvalue":null,"access":"protected","longname":"data","scope":"global","$longname":"data","$kind":"property","id":5111,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @member {Boolean} isUsingStateProviders=false\n     * @protected\n     */","meta":{"filename":"App.mjs","lineno":58,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"kind":"member","name":"isUsingStateProviders","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isUsingStateProviders","scope":"global","$longname":"isUsingStateProviders","$kind":"property","id":5112,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * We are storing the params of insertThemeFiles() calls here, in case the method does get triggered\n     * before the json theme structure got loaded.\n     * @member {Array[]} themeFilesCache=[]\n     * @protected\n     */","meta":{"filename":"App.mjs","lineno":65,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{}},"description":"<p>We are storing the params of insertThemeFiles() calls here, in case the method does get triggered\nbefore the json theme structure got loaded.</p>\n","kind":"member","name":"themeFilesCache","type":{"names":["Array.<Array>"]},"defaultvalue":"[]","access":"protected","longname":"themeFilesCache","scope":"global","$longname":"themeFilesCache","$kind":"property","id":5113,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[1868,2097],"filename":"App.mjs","lineno":70,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162324","name":"App#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"App#construct","kind":"function","memberof":"App","scope":"instance","$longname":"App#construct","$kind":"method","id":5114,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {String} appName\n     * @param {Array|Object} deltas\n     * @returns {Promise<*>}\n     */","meta":{"range":[2215,2335],"filename":"App.mjs","lineno":85,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162363","name":"App#applyDeltas","type":"MethodDefinition","paramnames":["appName","deltas"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"appName"},{"type":{"names":["Array","Object"]},"name":"deltas"}],"returns":[{"type":{"names":["Promise.<*>"]}}],"name":"applyDeltas","longname":"App#applyDeltas","kind":"function","memberof":"App","scope":"instance","$longname":"App#applyDeltas","$kind":"method","id":5115,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Remote method to use inside main threads for creating neo based class instances.\n     * Be aware that you can only pass configs which can get converted into pure JSON.\n     *\n     * Rendering a component into the document.body\n     * @example:\n     *     Neo.worker.App.createNeoInstance({\n     *         ntype     : 'button',\n     *         autoMount : true,\n     *         autoRender: true\n     *         text      : 'Hi Nige!'\n     *     }).then(id => console.log(id))\n     *\n     * Inserting a component into a container\n     * @example:\n     *     Neo.worker.App.createNeoInstance({\n     *         ntype      : 'button',\n     *         parentId   : 'neo-container-3',\n     *         parentIndex: 0\n     *         text       : 'Hi Nige!'\n     *     }).then(id => console.log(id))\n     *\n     * @param {Object} config\n     * @param {String} [config.importPath] you can lazy load missing classes via this config. dev mode only.\n     * @param {String} [config.parentId] passing a parentId will put your instance into a container\n     * @param {Number} [config.parentIndex] if a parentId is passed, but no index, neo will use add()\n     * @returns {String} the instance id\n     */","meta":{"range":[3537,4719],"filename":"App.mjs","lineno":117,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162382","name":"App#createNeoInstance","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Remote method to use inside main threads for creating neo based class instances.\nBe aware that you can only pass configs which can get converted into pure JSON.</p>\n<p>Rendering a component into the document.body</p>\n","tags":[{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.createNeoInstance({\n        ntype     : 'button',\n        autoMount : true,\n        autoRender: true\n        text      : 'Hi Nige!'\n    }).then(id => console.log(id))\n\nInserting a component into a container","value":"Neo.worker.App.createNeoInstance({\n        ntype     : 'button',\n        autoMount : true,\n        autoRender: true\n        text      : 'Hi Nige!'\n    }).then(id => console.log(id))\n\nInserting a component into a container"},{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.createNeoInstance({\n        ntype      : 'button',\n        parentId   : 'neo-container-3',\n        parentIndex: 0\n        text       : 'Hi Nige!'\n    }).then(id => console.log(id))","value":"Neo.worker.App.createNeoInstance({\n        ntype      : 'button',\n        parentId   : 'neo-container-3',\n        parentIndex: 0\n        text       : 'Hi Nige!'\n    }).then(id => console.log(id))"}],"params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["String"]},"optional":true,"description":"<p>you can lazy load missing classes via this config. dev mode only.</p>\n","name":"config.importPath"},{"type":{"names":["String"]},"optional":true,"description":"<p>passing a parentId will put your instance into a container</p>\n","name":"config.parentId"},{"type":{"names":["Number"]},"optional":true,"description":"<p>if a parentId is passed, but no index, neo will use add()</p>\n","name":"config.parentIndex"}],"returns":[{"type":{"names":["String"]},"description":"the instance id"}],"name":"createNeoInstance","longname":"App#createNeoInstance","kind":"function","memberof":"App","scope":"instance","async":true,"$longname":"App#createNeoInstance","$kind":"method","id":5116,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[4769,4916],"filename":"App.mjs","lineno":158,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162524","name":"App#createThemeMap","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"createThemeMap","longname":"App#createThemeMap","kind":"function","memberof":"App","scope":"instance","$longname":"App#createThemeMap","$kind":"method","id":5117,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Remote method to use inside main threads for destroying neo based class instances.\n     *\n     * @example:\n     *     Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))\n     *\n     * @param {String} id\n     * @returns {Boolean} returns true, in case the instance was found\n     */","meta":{"range":[5255,5704],"filename":"App.mjs","lineno":173,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162549","name":"App#destroyNeoInstance","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Remote method to use inside main threads for destroying neo based class instances.</p>\n","tags":[{"originalTitle":"example:","title":"example:","text":"Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))","value":"Neo.worker.App.destroyNeoInstance('neo-button-3').then(success => console.log(success))"}],"params":[{"type":{"names":["String"]},"name":"id"}],"returns":[{"type":{"names":["Boolean"]},"description":"returns true, in case the instance was found"}],"name":"destroyNeoInstance","longname":"App#destroyNeoInstance","kind":"function","memberof":"App","scope":"instance","$longname":"App#destroyNeoInstance","$kind":"method","id":5118,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Fires a custom event based on core.Observable on any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     * @param {String} data.name\n     */","meta":{"range":[5917,6210],"filename":"App.mjs","lineno":200,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162604","name":"App#fireEvent","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Fires a custom event based on core.Observable on any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String"]},"name":"data.name"}],"name":"fireEvent","longname":"App#fireEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#fireEvent","$kind":"method","id":5119,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Only needed for the SharedWorkers context\n     * @param {String} eventName\n     * @param {Object} data\n     */","meta":{"range":[6342,6499],"filename":"App.mjs","lineno":223,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162651","name":"App#fireMainViewsEvent","type":"MethodDefinition","paramnames":["eventName","data"]},"vars":{"":null}},"description":"<p>Only needed for the SharedWorkers context</p>\n","params":[{"type":{"names":["String"]},"name":"eventName"},{"type":{"names":["Object"]},"name":"data"}],"name":"fireMainViewsEvent","longname":"App#fireMainViewsEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#fireMainViewsEvent","$kind":"method","id":5120,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Get configs of any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     * @param {String|String[]} data.keys\n     * Returns an array of configs if a keys array was passed.\n     * Returns the value of a given config directly, in case no array was passed\n     * Returns false, in case no instance got found.\n     * @returns {*}\n     */","meta":{"range":[6904,7314],"filename":"App.mjs","lineno":239,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162682","name":"App#getConfigs","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Get configs of any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String","Array.<String>"]},"description":"<p>Returns an array of configs if a keys array was passed.\nReturns the value of a given config directly, in case no array was passed\nReturns false, in case no instance got found.</p>\n","name":"data.keys"}],"returns":[{"type":{"names":["*"]}}],"name":"getConfigs","longname":"App#getConfigs","kind":"function","memberof":"App","scope":"instance","$longname":"App#getConfigs","$kind":"method","id":5121,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {String} path\n     * @returns {Promise}\n     */","meta":{"range":[7390,7721],"filename":"App.mjs","lineno":263,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162740","name":"App#importApp","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"path"}],"returns":[{"type":{"names":["Promise"]}}],"name":"importApp","longname":"App#importApp","kind":"function","memberof":"App","scope":"instance","$longname":"App#importApp","$kind":"method","id":5122,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * In case you don't want to include prototype based CSS files, use the className param instead\n     * @param {Number} windowId\n     * @param {Neo.core.Base} [proto]\n     * @param {String} [className]\n     */","meta":{"range":[7948,10049],"filename":"App.mjs","lineno":282,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100162764","name":"App#insertThemeFiles","type":"MethodDefinition","paramnames":["windowId","proto","className"]},"vars":{"":null}},"description":"<p>In case you don&#39;t want to include prototype based CSS files, use the className param instead</p>\n","params":[{"type":{"names":["Number"]},"name":"windowId"},{"type":{"names":["Neo.core.Base"]},"optional":true,"name":"proto"},{"type":{"names":["String"]},"optional":true,"name":"className"}],"name":"insertThemeFiles","longname":"App#insertThemeFiles","kind":"function","memberof":"App","scope":"instance","$longname":"App#insertThemeFiles","$kind":"method","id":5123,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Every dom event will get forwarded as a worker message from main and ends up here first\n     * @param {Object} data useful event properties, differs for different event types. See Neo.main.DomEvents.\n     */","meta":{"range":[10278,10337],"filename":"App.mjs","lineno":336,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163032","name":"App#onDomEvent","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Every dom event will get forwarded as a worker message from main and ends up here first</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>useful event properties, differs for different event types. See Neo.main.DomEvents.</p>\n","name":"data"}],"name":"onDomEvent","longname":"App#onDomEvent","kind":"function","memberof":"App","scope":"instance","$longname":"App#onDomEvent","$kind":"method","id":5124,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Every URL hash-change will create a post message in main and end up here first.\n     * @param {Object} data parsed key-value pairs for each hash value\n     */","meta":{"range":[10517,10579],"filename":"App.mjs","lineno":344,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163043","name":"App#onHashChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Every URL hash-change will create a post message in main and end up here first.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>parsed key-value pairs for each hash value</p>\n","name":"data"}],"name":"onHashChange","longname":"App#onHashChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onHashChange","$kind":"method","id":5125,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * The starting point for apps\n     * @param {Object} data\n     */","meta":{"range":[10664,11448],"filename":"App.mjs","lineno":352,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163056","name":"App#onLoadApplication","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>The starting point for apps</p>\n","params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onLoadApplication","longname":"App#onLoadApplication","kind":"function","memberof":"App","scope":"instance","$longname":"App#onLoadApplication","$kind":"method","id":5126,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Triggered in case a connected ServiceWorker receives a new version.\n     * Especially inside dist envs, a reload of the connecting window is required,\n     * since the SW will clear its caches and the app can receive conflicting bundle versions.\n     * @param {Object} data\n     * @param {String} data.newVersion\n     * @param {String} data.oldVersion\n     */","meta":{"range":[11828,11889],"filename":"App.mjs","lineno":387,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163168","name":"App#onNewVersion","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Triggered in case a connected ServiceWorker receives a new version.\nEspecially inside dist envs, a reload of the connecting window is required,\nsince the SW will clear its caches and the app can receive conflicting bundle versions.</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.newVersion"},{"type":{"names":["String"]},"name":"data.oldVersion"}],"name":"onNewVersion","longname":"App#onNewVersion","kind":"function","memberof":"App","scope":"instance","$longname":"App#onNewVersion","$kind":"method","id":5127,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Fire event on all apps\n     * @param {Object} data\n     * @param {Number} data.angle\n     * @param {String} data.layout landscape|portrait\n     * @param {String} data.type landscape-primary|landscape-secondary|portrait-primary|portrait-secondary\n     */","meta":{"range":[12164,12310],"filename":"App.mjs","lineno":398,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163181","name":"App#onOrientationChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Fire event on all apps</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Number"]},"name":"data.angle"},{"type":{"names":["String"]},"description":"<p>landscape|portrait</p>\n","name":"data.layout"},{"type":{"names":["String"]},"description":"<p>landscape-primary|landscape-secondary|portrait-primary|portrait-secondary</p>\n","name":"data.type"}],"name":"onOrientationChange","longname":"App#onOrientationChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onOrientationChange","$kind":"method","id":5128,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} msg\n     */","meta":{"range":[12359,13204],"filename":"App.mjs","lineno":407,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163209","name":"App#onRegisterNeoConfig","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"msg"}],"name":"onRegisterNeoConfig","longname":"App#onRegisterNeoConfig","kind":"function","memberof":"App","scope":"instance","$longname":"App#onRegisterNeoConfig","$kind":"method","id":5129,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} msg\n     */","meta":{"range":[13253,13431],"filename":"App.mjs","lineno":441,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163341","name":"App#onRegisterPort","type":"MethodDefinition","paramnames":["msg"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"msg"}],"name":"onRegisterPort","longname":"App#onRegisterPort","kind":"function","memberof":"App","scope":"instance","$longname":"App#onRegisterPort","$kind":"method","id":5130,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[13481,13584],"filename":"App.mjs","lineno":453,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163377","name":"App#onWindowPositionChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onWindowPositionChange","longname":"App#onWindowPositionChange","kind":"function","memberof":"App","scope":"instance","$longname":"App#onWindowPositionChange","$kind":"method","id":5131,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Only needed for SharedWorkers\n     * @param {String} appName\n     */","meta":{"range":[13674,13863],"filename":"App.mjs","lineno":461,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163391","name":"App#registerApp","type":"MethodDefinition","paramnames":["appName"]},"vars":{"":null}},"description":"<p>Only needed for SharedWorkers</p>\n","params":[{"type":{"names":["String"]},"name":"appName"}],"name":"registerApp","longname":"App#registerApp","kind":"function","memberof":"App","scope":"instance","$longname":"App#registerApp","$kind":"method","id":5132,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Unregister the app from the CSS map\n     * Only needed for SharedWorkers\n     * @param {String} appName\n     */","meta":{"range":[13996,14083],"filename":"App.mjs","lineno":472,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163415","name":"App#removeAppFromThemeMap","type":"MethodDefinition","paramnames":["appName"]},"vars":{"":null}},"description":"<p>Unregister the app from the CSS map\nOnly needed for SharedWorkers</p>\n","params":[{"type":{"names":["String"]},"name":"appName"}],"name":"removeAppFromThemeMap","longname":"App#removeAppFromThemeMap","kind":"function","memberof":"App","scope":"instance","$longname":"App#removeAppFromThemeMap","$kind":"method","id":5133,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @private\n     */","meta":{"range":[14121,14308],"filename":"App.mjs","lineno":479,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163430","name":"App#resolveThemeFilesCache","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"access":"private","name":"resolveThemeFilesCache","longname":"App#resolveThemeFilesCache","kind":"function","memberof":"App","scope":"instance","params":[],"$longname":"App#resolveThemeFilesCache","$kind":"method","id":5134,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * Set configs of any app realm based Neo instance from main\n     * @param {Object} data\n     * @param {String} data.id\n     */","meta":{"range":[14454,14661],"filename":"App.mjs","lineno":494,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163461","name":"App#setConfigs","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Set configs of any app realm based Neo instance from main</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"}],"name":"setConfigs","longname":"App#setConfigs","kind":"function","memberof":"App","scope":"instance","$longname":"App#setConfigs","$kind":"method","id":5135,"neoClassName":"Neo.worker.App"},{"comment":"/**\n     * @param {Object} data\n     * @param {String} data.key\n     * @param {String} [data.priority] optionally pass 'important'\n     * @param {String} data.theme=Neo.config.themes[0]\n     * @param {String} data.value\n     * @returns {Promise<any>}\n     */","meta":{"range":[14930,15337],"filename":"App.mjs","lineno":515,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/worker","code":{"id":"astnode100163494","name":"App#setCssVariable","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.key"},{"type":{"names":["String"]},"optional":true,"description":"<p>optionally pass &#39;important&#39;</p>\n","name":"data.priority"},{"type":{"names":["String"]},"defaultvalue":"Neo.config.themes[0","name":"data.theme"},{"type":{"names":["String"]},"name":"data.value"}],"returns":[{"type":{"names":["Promise.<any>"]}}],"name":"setCssVariable","longname":"App#setCssVariable","kind":"function","memberof":"App","scope":"instance","$longname":"App#setCssVariable","$kind":"method","id":5136,"neoClassName":"Neo.worker.App"}]}