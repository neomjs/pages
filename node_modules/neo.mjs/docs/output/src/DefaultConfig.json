{"classData":[{"comment":"/**\n * Config object for the neo.mjs framework which will get passed to all workers\n * You can change the configs, e.g. inside the index.html of your app\n * @memberOf module:Neo\n * @name config\n * @type Object\n */","meta":{"filename":"DefaultConfig.mjs","lineno":12,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Config object for the neo.mjs framework which will get passed to all workers\nYou can change the configs, e.g. inside the index.html of your app</p>\n","memberof":"module:Neo","name":"config","type":{"names":["Object"]},"scope":"static","longname":"module:Neo.config","kind":"member","$longname":"Neo.config","$kind":"property","id":2040,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * true will apply 'neo-body' to the document.body classList\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.applyBodyCls\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":20,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>true will apply &#39;neo-body&#39; to the document.body classList</p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.applyBodyCls","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.applyBodyCls","kind":"member","$longname":"Neo.config.applyBodyCls","$kind":"property","id":2041,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * true will apply 'position: fixed' to the html tag itself\n     * See: https://github.com/neomjs/neo/issues/6429\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.applyFixedPositionToHtmlTag\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":29,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>true will apply &#39;position: fixed&#39; to the html tag itself\nSee: <a href=\"https://github.com/neomjs/neo/issues/6429\">https://github.com/neomjs/neo/issues/6429</a></p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.applyFixedPositionToHtmlTag","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.applyFixedPositionToHtmlTag","kind":"member","$longname":"Neo.config.applyFixedPositionToHtmlTag","$kind":"property","id":2042,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Path to your app.mjs file. You can create multiple apps there if needed.\n     * @default null\n     * @memberOf! module:Neo\n     * @name config.appPath\n     * @type String|null\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":37,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Path to your app.mjs file. You can create multiple apps there if needed.</p>\n","defaultvalue":"null","memberof":"module:Neo.config","name":"config.appPath","type":{"names":["String","null"]},"scope":"static","longname":"module:Neo.config.appPath","kind":"member","$longname":"Neo.config.appPath","$kind":"property","id":2043,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Path to the neo.mjs directory\n     * @default './'\n     * @memberOf! module:Neo\n     * @name config.basePath\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":45,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Path to the neo.mjs directory</p>\n","defaultvalue":"'./'","memberof":"module:Neo.config","name":"config.basePath","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.basePath","kind":"member","$longname":"Neo.config.basePath","$kind":"property","id":2044,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Pass a token in case you are using the CesiumJS main thread addon\n     * See: https://github.com/neomjs/neo/blob/dev/src/main/addon/CesiumJS.mjs\n     * @default undefined\n     * @memberOf! module:Neo\n     * @name config.cesiumJsToken\n     * @type String|null\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":54,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Pass a token in case you are using the CesiumJS main thread addon\nSee: <a href=\"https://github.com/neomjs/neo/blob/dev/src/main/addon/CesiumJS.mjs\">https://github.com/neomjs/neo/blob/dev/src/main/addon/CesiumJS.mjs</a></p>\n","defaultvalue":"undefined","memberof":"module:Neo.config","name":"config.cesiumJsToken","type":{"names":["String","null"]},"scope":"static","longname":"module:Neo.config.cesiumJsToken","kind":"member","$longname":"Neo.config.cesiumJsToken","$kind":"property","id":2045,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Set this config to false to disable the component logging using Ctrl-Right-Click\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.enableComponentLogger\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":62,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Set this config to false to disable the component logging using Ctrl-Right-Click</p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.enableComponentLogger","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.enableComponentLogger","kind":"member","$longname":"Neo.config.enableComponentLogger","$kind":"property","id":2046,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Set this config to true to enable util.Logger (Neo.log()) based logs in production\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.enableLogsInProduction\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":70,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Set this config to true to enable util.Logger (Neo.log()) based logs in production</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.enableLogsInProduction","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.enableLogsInProduction","kind":"member","$longname":"Neo.config.enableLogsInProduction","$kind":"property","id":2047,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * The current environment. Valid values: 'development', 'dist/development', 'dist/production'\n     * This config will get auto-generated\n     * @default 'dist/production'\n     * @memberOf! module:Neo\n     * @name config.environment\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":79,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>The current environment. Valid values: &#39;development&#39;, &#39;dist/development&#39;, &#39;dist/production&#39;\nThis config will get auto-generated</p>\n","defaultvalue":"'dist/production'","memberof":"module:Neo.config","name":"config.environment","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.environment","kind":"member","$longname":"Neo.config.environment","$kind":"property","id":2048,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * In case you are using the GoogleMaps main thread addon, you can pass the API key here.\n     * @default undefined\n     * @memberOf! module:Neo\n     * @name config.googleMapsApiKey\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":87,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>In case you are using the GoogleMaps main thread addon, you can pass the API key here.</p>\n","defaultvalue":"undefined","memberof":"module:Neo.config","name":"config.googleMapsApiKey","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.googleMapsApiKey","kind":"member","$longname":"Neo.config.googleMapsApiKey","$kind":"property","id":2049,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * In case you are using the GoogleAnalytics main thread addon or useGoogleAnalytics: true,\n     * you can change the gtag id here. Required for the online examples (gh pages)\n     * @default undefined\n     * @memberOf! module:Neo\n     * @name config.gtagId\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":96,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>In case you are using the GoogleAnalytics main thread addon or useGoogleAnalytics: true,\nyou can change the gtag id here. Required for the online examples (gh pages)</p>\n","defaultvalue":"undefined","memberof":"module:Neo.config","name":"config.gtagId","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.gtagId","kind":"member","$longname":"Neo.config.gtagId","$kind":"property","id":2050,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Flag for running on https://neomjs.github.io/pages/\n     * => to use local images paths instead of raw.githubusercontent.com\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.isGitHubPages\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":105,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Flag for running on <a href=\"https://neomjs.github.io/pages/\">https://neomjs.github.io/pages/</a>\n=&gt; to use local images paths instead of raw.githubusercontent.com</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.isGitHubPages","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.isGitHubPages","kind":"member","$longname":"Neo.config.isGitHubPages","$kind":"property","id":2051,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Flag for running the Neo main thread inside an iframe (Siesta Browser Harness)\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.isInsideSiesta\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":113,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Flag for running the Neo main thread inside an iframe (Siesta Browser Harness)</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.isInsideSiesta","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.isInsideSiesta","kind":"member","$longname":"Neo.config.isInsideSiesta","$kind":"property","id":2052,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * delay in ms for the worker.Manager:loadApplication() call\n     * @default 20\n     * @memberOf! module:Neo\n     * @name config.loadApplicationDelay\n     * @type Number\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":121,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>delay in ms for the worker.Manager:loadApplication() call</p>\n","defaultvalue":"20","memberof":"module:Neo.config","name":"config.loadApplicationDelay","type":{"names":["Number"]},"scope":"static","longname":"module:Neo.config.loadApplicationDelay","kind":"member","$longname":"Neo.config.loadApplicationDelay","$kind":"property","id":2053,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Used by Intl.DateTimeFormat, for details take a look at:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @default 'default'\n     * @memberOf! module:Neo\n     * @name config.locale\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":130,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Used by Intl.DateTimeFormat, for details take a look at:\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat</a></p>\n","defaultvalue":"'default'","memberof":"module:Neo.config","name":"config.locale","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.locale","kind":"member","$longname":"Neo.config.locale","$kind":"property","id":2054,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * true will log the delta updates inside the main thread(s) as well as the requestAnimation frames\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.logDeltaUpdates\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":138,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>true will log the delta updates inside the main thread(s) as well as the requestAnimation frames</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.logDeltaUpdates","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.logDeltaUpdates","kind":"member","$longname":"Neo.config.logDeltaUpdates","$kind":"property","id":2055,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * true will log console warnings, in case a component tries to update() while a parent update is running.\n     * A parent update results in a short delay, so you might want to resolve these collisions.\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.logVdomUpdateCollisions\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":147,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>true will log console warnings, in case a component tries to update() while a parent update is running.\nA parent update results in a short delay, so you might want to resolve these collisions.</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.logVdomUpdateCollisions","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.logVdomUpdateCollisions","kind":"member","$longname":"Neo.config.logVdomUpdateCollisions","$kind":"property","id":2056,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Add addons for the main thread\n     * ./src/main/addon/ contains all framework related options.\n     * You can also create your own addons within your workspace scope. Make sure to put them inside 'src/main/addon/'\n     * and prefix them with 'WS/' inside your neo-config.json file.\n     * Example: ['DragDrop', 'Stylesheet', 'WS/MyAddon']\n     * @default ['DragDrop', 'Navigator', 'Stylesheet']\n     * @memberOf! module:Neo\n     * @name config.mainThreadAddons\n     * @type String[]\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":159,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Add addons for the main thread\n./src/main/addon/ contains all framework related options.\nYou can also create your own addons within your workspace scope. Make sure to put them inside &#39;src/main/addon/&#39;\nand prefix them with &#39;WS/&#39; inside your neo-config.json file.\nExample: [&#39;DragDrop&#39;, &#39;Stylesheet&#39;, &#39;WS/MyAddon&#39;]</p>\n","defaultvalue":"/**","memberof":"module:Neo.config","name":"config.mainThreadAddons","type":{"names":["Array.<String>"]},"scope":"static","longname":"module:Neo.config.mainThreadAddons","kind":"member","$longname":"Neo.config.mainThreadAddons","$kind":"property","id":2057,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Pass the URL of a JSON-file, which contains the services and methods from your backend,\n     * which you want to expose to the client.\n     * See: https://github.com/neomjs/neo/projects/32\n     * @default null\n     * @memberOf! module:Neo\n     * @name config.remotesApiUrl\n     * @type String|null\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":169,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Pass the URL of a JSON-file, which contains the services and methods from your backend,\nwhich you want to expose to the client.\nSee: <a href=\"https://github.com/neomjs/neo/projects/32\">https://github.com/neomjs/neo/projects/32</a></p>\n","defaultvalue":"null","memberof":"module:Neo.config","name":"config.remotesApiUrl","type":{"names":["String","null"]},"scope":"static","longname":"module:Neo.config.remotesApiUrl","kind":"member","$longname":"Neo.config.remotesApiUrl","$kind":"property","id":2058,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * You can visually show the amount of delta updates per second using this config.\n     * It expects a dom node with the id \"neo-delta-updates\" as the rendering target.\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.renderCountDeltas\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":178,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>You can visually show the amount of delta updates per second using this config.\nIt expects a dom node with the id &quot;neo-delta-updates&quot; as the rendering target.</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.renderCountDeltas","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.renderCountDeltas","kind":"member","$longname":"Neo.config.renderCountDeltas","$kind":"property","id":2059,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Add themes you want to use here. The first theme will get applied.\n     * @default ['neo-theme-light','neo-theme-dark','neo-theme-neo-light']\n     * @memberOf! module:Neo\n     * @name config.themes\n     * @type String[]\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":186,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Add themes you want to use here. The first theme will get applied.</p>\n","defaultvalue":"/**","memberof":"module:Neo.config","name":"config.themes","type":{"names":["Array.<String>"]},"scope":"static","longname":"module:Neo.config.themes","kind":"member","$longname":"Neo.config.themes","$kind":"property","id":2060,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Flag for standalone Siesta module tests => prevent registerRemote worker messages\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.unitTestMode\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":194,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Flag for standalone Siesta module tests =&gt; prevent registerRemote worker messages</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.unitTestMode","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.unitTestMode","kind":"member","$longname":"Neo.config.unitTestMode","$kind":"property","id":2061,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Experimental flag if an offscreen canvas worker should get created.\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.useCanvasWorker\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":202,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Experimental flag if an offscreen canvas worker should get created.</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.useCanvasWorker","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useCanvasWorker","kind":"member","$longname":"Neo.config.useCanvasWorker","$kind":"property","id":2062,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Flag if vdom ids should get mapped into DOM element ids.\n     * false will convert them into a \"data-neo-id\" attribute.\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.useDomIds\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":211,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Flag if vdom ids should get mapped into DOM element ids.\nfalse will convert them into a &quot;data-neo-id&quot; attribute.</p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.useDomIds","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useDomIds","kind":"member","$longname":"Neo.config.useDomIds","$kind":"property","id":2063,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * True will automatically include the stylesheet\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.useFontAwesome\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":219,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>True will automatically include the stylesheet</p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.useFontAwesome","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useFontAwesome","kind":"member","$longname":"Neo.config.useFontAwesome","$kind":"property","id":2064,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Intended for the online examples where we need an easy way to add GA to every generated app\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.useGoogleAnalytics\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":227,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Intended for the online examples where we need an easy way to add GA to every generated app</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.useGoogleAnalytics","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useGoogleAnalytics","kind":"member","$longname":"Neo.config.useGoogleAnalytics","$kind":"property","id":2065,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * True will add the ServiceWorker main thread addon to support caching of assets (PWA)\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\n     *\n     * You can also use a string to specify the target environment => 'dist/production'\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.useServiceWorker\n     * @type Boolean|String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":238,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>True will add the ServiceWorker main thread addon to support caching of assets (PWA)\nSee: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\">https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API</a></p>\n<p>You can also use a string to specify the target environment =&gt; &#39;dist/production&#39;</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.useServiceWorker","type":{"names":["Boolean","String"]},"scope":"static","longname":"module:Neo.config.useServiceWorker","kind":"member","$longname":"Neo.config.useServiceWorker","$kind":"property","id":2066,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Creates App, Data & VDom as SharedWorkers.\n     * Set this one to true in case you want to connect multiple main threads.\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.useSharedWorkers\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":247,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Creates App, Data &amp; VDom as SharedWorkers.\nSet this one to true in case you want to connect multiple main threads.</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.useSharedWorkers","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useSharedWorkers","kind":"member","$longname":"Neo.config.useSharedWorkers","$kind":"property","id":2067,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * True will generate a new task worker, which can get filled with own expensive remote methods\n     * @default false\n     * @memberOf! module:Neo\n     * @name config.useTaskWorker\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":255,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>True will generate a new task worker, which can get filled with own expensive remote methods</p>\n","defaultvalue":"false","memberof":"module:Neo.config","name":"config.useTaskWorker","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useTaskWorker","kind":"member","$longname":"Neo.config.useTaskWorker","$kind":"property","id":2068,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * False will create the vdom.Helper within the App worker (experimental!)\n     * @default true\n     * @memberOf! module:Neo\n     * @name config.useVdomWorker\n     * @type Boolean\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":263,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>False will create the vdom.Helper within the App worker (experimental!)</p>\n","defaultvalue":"true","memberof":"module:Neo.config","name":"config.useVdomWorker","type":{"names":["Boolean"]},"scope":"static","longname":"module:Neo.config.useVdomWorker","kind":"member","$longname":"Neo.config.useVdomWorker","$kind":"property","id":2069,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * buildScripts/injectPackageVersion.mjs will update this value\n     * @default '8.24.0'\n     * @memberOf! module:Neo\n     * @name config.version\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":271,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>buildScripts/injectPackageVersion.mjs will update this value</p>\n","defaultvalue":"'8.24.0'","memberof":"module:Neo.config","name":"config.version","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.version","kind":"member","$longname":"Neo.config.version","$kind":"property","id":2070,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * Path to the top level neo.mjs resources folder\n     * @default Neo.config.basePath + 'resources/'\n     * @memberOf! module:Neo\n     * @name config.resourcesPath\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":282,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>Path to the top level neo.mjs resources folder</p>\n","defaultvalue":"Neo.config.basePath + 'resources/'","memberof":"module:Neo.config","name":"config.resourcesPath","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.resourcesPath","kind":"member","$longname":"Neo.config.resourcesPath","$kind":"property","id":2071,"neoClassName":"Neo.DefaultConfig"},{"comment":"/**\n     * The default base URL for web worker entry points (App, Data, Vdom)\n     * @default Neo.config.basePath + 'src/worker/'\n     * @memberOf! module:Neo\n     * @name config.workerBasePath\n     * @type String\n     */","meta":{"filename":"DefaultConfig.mjs","lineno":290,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src","code":{}},"description":"<p>The default base URL for web worker entry points (App, Data, Vdom)</p>\n","defaultvalue":"Neo.config.basePath + 'src/worker/'","memberof":"module:Neo.config","name":"config.workerBasePath","type":{"names":["String"]},"scope":"static","longname":"module:Neo.config.workerBasePath","kind":"member","$longname":"Neo.config.workerBasePath","$kind":"property","id":2072,"neoClassName":"Neo.DefaultConfig"}]}