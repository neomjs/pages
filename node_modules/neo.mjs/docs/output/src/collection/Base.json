{"classData":[{"comment":"/**\n * @class Neo.collection.Base\n * @extends Neo.core.Base\n * @mixes Neo.core.Observable\n */","meta":{"filename":"Base.mjs","lineno":16,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"class","name":"Base","augments":["Neo.core.Base"],"mixes":["Neo.core.Observable"],"memberof":"Neo.collection","longname":"Neo.collection.Base","scope":"static","$longname":"Neo.collection.Base","$kind":"class","id":643,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * True automatically applies the core.Observable mixin\n     * @member {Boolean} observable=true\n     * @static\n     */","meta":{"filename":"Base.mjs","lineno":27,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>True automatically applies the core.Observable mixin</p>\n","kind":"member","name":"observable","type":{"names":["Boolean"]},"defaultvalue":true,"scope":"static","longname":"observable","$longname":"observable","$kind":"property","id":644,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * @member {String} className='Neo.collection.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.collection.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":645,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * @member {String} ntype='collection'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":39,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'collection'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":646,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * When filtering the collection for the first time, allItems will become a new collection for the unfiltered\n         * state, using this id as the sourceCollectionId\n         * @member {Neo.collection.Base|null} allItems=null\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":46,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>When filtering the collection for the first time, allItems will become a new collection for the unfiltered\nstate, using this id as the sourceCollectionId</p>\n","kind":"member","name":"allItems","type":{"names":["Neo.collection.Base","null"]},"defaultvalue":null,"access":"protected","longname":"allItems","scope":"global","$longname":"allItems","$kind":"property","id":647,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * True to sort the collection items when adding / inserting new ones\n         * @member {Boolean} autoSort=true\n         */","meta":{"filename":"Base.mjs","lineno":51,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>True to sort the collection items when adding / inserting new ones</p>\n","kind":"member","name":"autoSort","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"autoSort","scope":"global","$longname":"autoSort","$kind":"property","id":648,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * Stores the items.length of the items array in use\n         * @member {Number} count_=0\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":57,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Stores the items.length of the items array in use</p>\n","kind":"member","name":"count_","type":{"names":["Number"]},"defaultvalue":0,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"count_","scope":"global","$longname":"count_","$kind":"property","id":649,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * Use 'primitive' for default filters, use 'advanced' for filters using a filterBy method\n         * which need to iterate over other collection items\n         * @member {String} filterMode='primitive'\n         */","meta":{"filename":"Base.mjs","lineno":63,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Use &#39;primitive&#39; for default filters, use &#39;advanced&#39; for filters using a filterBy method\nwhich need to iterate over other collection items</p>\n","kind":"member","name":"filterMode","type":{"names":["String"]},"defaultvalue":"'primitive'","longname":"filterMode","scope":"global","$longname":"filterMode","$kind":"property","id":650,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * An Array containing Neo.util.Filter config objects or instances\n         * @member {Array} filters_=[]\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":69,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>An Array containing Neo.util.Filter config objects or instances</p>\n","kind":"member","name":"filters_","type":{"names":["Array"]},"defaultvalue":"[]","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"filters_","scope":"global","$longname":"filters_","$kind":"property","id":651,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * @member {Object[]|null} items_=null\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":74,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"kind":"member","name":"items_","type":{"names":["Array.<Object>","null"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"items_","scope":"global","$longname":"items_","$kind":"property","id":652,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * The unique(!) key property of each collection item\n         * @member {String} keyProperty='id'\n         */","meta":{"filename":"Base.mjs","lineno":79,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The unique(!) key property of each collection item</p>\n","kind":"member","name":"keyProperty","type":{"names":["String"]},"defaultvalue":"'id'","longname":"keyProperty","scope":"global","$longname":"keyProperty","$kind":"property","id":653,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * Adding new items without an id (keyProperty) will use a negative index, which will decrease by -1\n         * for each new item\n         * @member {Number} keyPropertyIndex=-1\n         */","meta":{"filename":"Base.mjs","lineno":85,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>Adding new items without an id (keyProperty) will use a negative index, which will decrease by -1\nfor each new item</p>\n","kind":"member","name":"keyPropertyIndex","type":{"names":["Number"]},"defaultvalue":-1,"longname":"keyPropertyIndex","scope":"global","$longname":"keyPropertyIndex","$kind":"property","id":654,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * A map containing the key & reference of each collection item for faster access\n         * @member {Map} map_=null\n         * @protected\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":92,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>A map containing the key &amp; reference of each collection item for faster access</p>\n","kind":"member","name":"map_","type":{"names":["Map"]},"defaultvalue":null,"access":"protected","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"map_","scope":"global","$longname":"map_","$kind":"property","id":655,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * An internal Array of the sort directions for faster access\n         * @member {Array} sortDirections=null\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":98,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>An internal Array of the sort directions for faster access</p>\n","kind":"member","name":"sortDirections","type":{"names":["Array"]},"defaultvalue":null,"access":"protected","longname":"sortDirections","scope":"global","$longname":"sortDirections","$kind":"property","id":656,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * An internal Array of the sort properties for faster access\n         * @member {Array} sortProperties=null\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":104,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>An internal Array of the sort properties for faster access</p>\n","kind":"member","name":"sortProperties","type":{"names":["Array"]},"defaultvalue":null,"access":"protected","longname":"sortProperties","scope":"global","$longname":"sortProperties","$kind":"property","id":657,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * An Array containing Neo.util.Sorter config objects or instances\n         * @member {Array} sorters_=[]\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":110,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>An Array containing Neo.util.Sorter config objects or instances</p>\n","kind":"member","name":"sorters_","type":{"names":["Array"]},"defaultvalue":"[]","tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"sorters_","scope":"global","$longname":"sorters_","$kind":"property","id":658,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n         * The id of another collection instance to use as this data source\n         * @member {String|null} sourceId_=null\n         * @reactive\n         */","meta":{"filename":"Base.mjs","lineno":116,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The id of another collection instance to use as this data source</p>\n","kind":"member","name":"sourceId_","type":{"names":["String","null"]},"defaultvalue":null,"tags":[{"originalTitle":"reactive","title":"reactive","text":""}],"longname":"sourceId_","scope":"global","$longname":"sourceId_","$kind":"property","id":659,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param config\n     */","meta":{"range":[3802,4577],"filename":"Base.mjs","lineno":122,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021676","name":"Collection#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"name":"config"}],"name":"construct","longname":"Collection#construct","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#construct","$kind":"method","id":660,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Adds one or more items to the end of the collection\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Object[]} an array containing all added items\n     */","meta":{"range":[4774,4847],"filename":"Base.mjs","lineno":150,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021775","name":"Collection#add","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Adds one or more items to the end of the collection</p>\n","params":[{"type":{"names":["Array","Object"]},"description":"<p>The item(s) to add</p>\n","name":"item"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"an array containing all added items"}],"name":"add","longname":"Collection#add","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#add","$kind":"method","id":661,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Triggered after the filters config got changed\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */","meta":{"range":[5000,5315],"filename":"Base.mjs","lineno":160,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021790","name":"Collection#afterSetFilters","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the filters config got changed</p>\n","params":[{"type":{"names":["Array"]},"name":"value"},{"type":{"names":["Array"]},"name":"oldValue"}],"access":"protected","name":"afterSetFilters","longname":"Collection#afterSetFilters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#afterSetFilters","$kind":"method","id":662,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Triggered after the items config got changed\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */","meta":{"range":[5466,5875],"filename":"Base.mjs","lineno":179,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021838","name":"Collection#afterSetItems","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the items config got changed</p>\n","params":[{"type":{"names":["Array"]},"name":"value"},{"type":{"names":["Array"]},"name":"oldValue"}],"access":"protected","name":"afterSetItems","longname":"Collection#afterSetItems","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#afterSetItems","$kind":"method","id":663,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Triggered after the sorters config got changed\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */","meta":{"range":[6028,6392],"filename":"Base.mjs","lineno":202,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021896","name":"Collection#afterSetSorters","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the sorters config got changed</p>\n","params":[{"type":{"names":["Array"]},"name":"value"},{"type":{"names":["Array"]},"name":"oldValue"}],"access":"protected","name":"afterSetSorters","longname":"Collection#afterSetSorters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#afterSetSorters","$kind":"method","id":664,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Triggered after the sourceId config got changed\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */","meta":{"range":[6562,7124],"filename":"Base.mjs","lineno":223,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100021953","name":"Collection#afterSetSourceId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the sourceId config got changed</p>\n","params":[{"type":{"names":["Number","String"]},"name":"value"},{"type":{"names":["Number","String"]},"name":"oldValue"}],"access":"protected","name":"afterSetSourceId","longname":"Collection#afterSetSourceId","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#afterSetSourceId","$kind":"method","id":665,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Saves the sort property & direction multiplier of each sorter inside 2 arrays for faster access when sorting\n     * @protected\n     */","meta":{"range":[7280,7563],"filename":"Base.mjs","lineno":249,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022026","name":"Collection#applySorterConfigs","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Saves the sort property &amp; direction multiplier of each sorter inside 2 arrays for faster access when sorting</p>\n","access":"protected","name":"applySorterConfigs","longname":"Collection#applySorterConfigs","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#applySorterConfigs","$kind":"method","id":666,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */","meta":{"range":[7662,9157],"filename":"Base.mjs","lineno":266,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022076","name":"Collection#beforeSetFilters","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"params":[{"type":{"names":["Array"]},"name":"value"},{"type":{"names":["Array"]},"name":"oldValue"}],"access":"protected","name":"beforeSetFilters","longname":"Collection#beforeSetFilters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#beforeSetFilters","$kind":"method","id":667,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Map|null} value\n     * @param {Map|null} oldValue\n     * @protected\n     */","meta":{"range":[9262,9341],"filename":"Base.mjs","lineno":323,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022265","name":"Collection#beforeSetMap","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"params":[{"type":{"names":["Map","null"]},"name":"value"},{"type":{"names":["Map","null"]},"name":"oldValue"}],"access":"protected","name":"beforeSetMap","longname":"Collection#beforeSetMap","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#beforeSetMap","$kind":"method","id":668,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */","meta":{"range":[9440,10607],"filename":"Base.mjs","lineno":332,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022278","name":"Collection#beforeSetSorters","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"params":[{"type":{"names":["Array"]},"name":"value"},{"type":{"names":["Array"]},"name":"oldValue"}],"access":"protected","name":"beforeSetSorters","longname":"Collection#beforeSetSorters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#beforeSetSorters","$kind":"method","id":669,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param opts\n     * @protected\n     */","meta":{"range":[10666,11752],"filename":"Base.mjs","lineno":380,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022429","name":"Collection#cacheUpdate","type":"MethodDefinition","paramnames":["opts"]},"vars":{"":null}},"params":[{"name":"opts"}],"access":"protected","name":"cacheUpdate","longname":"Collection#cacheUpdate","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#cacheUpdate","$kind":"method","id":670,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes all items and clears the map\n     */","meta":{"range":[11818,11873],"filename":"Base.mjs","lineno":414,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022588","name":"Collection#clear","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Removes all items and clears the map</p>\n","name":"clear","longname":"Collection#clear","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#clear","$kind":"method","id":671,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Clears all current filters and optionally restores the original ones in case they existed.\n     * @param {boolean} [restoreOriginalFilters=false]\n     */","meta":{"range":[12048,12198],"filename":"Base.mjs","lineno":422,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022602","name":"Collection#clearFilters","type":"MethodDefinition","paramnames":["restoreOriginalFilters"]},"vars":{"":null}},"description":"<p>Clears all current filters and optionally restores the original ones in case they existed.</p>\n","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"restoreOriginalFilters"}],"name":"clearFilters","longname":"Collection#clearFilters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#clearFilters","$kind":"method","id":672,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes all items and clears the map, without firing a mutate event\n     */","meta":{"range":[12295,12407],"filename":"Base.mjs","lineno":429,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022626","name":"Collection#clearSilent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Removes all items and clears the map, without firing a mutate event</p>\n","name":"clearSilent","longname":"Collection#clearSilent","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#clearSilent","$kind":"method","id":673,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Clears all current sorters and optionally restores the original ones in case they existed.\n     * Without restoreInitialState as true this will not affect the current sorting of this collection.\n     * @param {boolean} [restoreOriginalSorters=false]\n     */","meta":{"range":[12686,12836],"filename":"Base.mjs","lineno":441,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022653","name":"Collection#clearSorters","type":"MethodDefinition","paramnames":["restoreOriginalSorters"]},"vars":{"":null}},"description":"<p>Clears all current sorters and optionally restores the original ones in case they existed.\nWithout restoreInitialState as true this will not affect the current sorting of this collection.</p>\n","params":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"restoreOriginalSorters"}],"name":"clearSorters","longname":"Collection#clearSorters","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#clearSorters","$kind":"method","id":674,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @returns {Neo.collection.Base} The cloned collection\n     */","meta":{"range":[12918,13878],"filename":"Base.mjs","lineno":448,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022677","name":"Collection#clone","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Neo.collection.Base"]},"description":"The cloned collection"}],"name":"clone","longname":"Collection#clone","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#clone","$kind":"method","id":675,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Clears the map & items array before the super call\n     */","meta":{"range":[13958,14095],"filename":"Base.mjs","lineno":486,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022821","name":"Collection#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Clears the map &amp; items array before the super call</p>\n","name":"destroy","longname":"Collection#destroy","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#destroy","$kind":"method","id":676,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     *\n     * @param {Object[]} items=this._items\n     * @param {Boolean} silent=false\n     * @protected\n     */","meta":{"range":[14222,17275],"filename":"Base.mjs","lineno":501,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100022854","name":"Collection#doSort","type":"MethodDefinition","paramnames":["items","silent"]},"vars":{"":null}},"params":[{"type":{"names":["Array.<Object>"]},"defaultvalue":"this._items","name":"items"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"access":"protected","name":"doSort","longname":"Collection#doSort","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#doSort","$kind":"method","id":677,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Resumes the collection events.\n     * If you started an update using the startSilentUpdateMode flag,\n     * you must use the endSilentUpdateMode param for this call.\n     * Using the endSilentUpdateMode param will not fire a mutation event.\n     * @param {Boolean} [endSilentUpdateMode]\n     * @see {@link Neo.collection.Base#startUpdate startUpdate}\n     */","meta":{"range":[17655,18178],"filename":"Base.mjs","lineno":602,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023184","name":"Collection#endUpdate","type":"MethodDefinition","paramnames":["endSilentUpdateMode"]},"vars":{"":null}},"description":"<p>Resumes the collection events.\nIf you started an update using the startSilentUpdateMode flag,\nyou must use the endSilentUpdateMode param for this call.\nUsing the endSilentUpdateMode param will not fire a mutation event.</p>\n","params":[{"type":{"names":["Boolean"]},"optional":true,"name":"endSilentUpdateMode"}],"see":["{@link Neo.collection.Base#startUpdate startUpdate}"],"name":"endUpdate","longname":"Collection#endUpdate","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#endUpdate","$kind":"method","id":678,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Needed for remote filtering\n     * @returns {Object[]}\n     */","meta":{"range":[18262,18512],"filename":"Base.mjs","lineno":626,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023256","name":"Collection#exportFilters","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Needed for remote filtering</p>\n","returns":[{"type":{"names":["Array.<Object>"]}}],"name":"exportFilters","longname":"Collection#exportFilters","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#exportFilters","$kind":"method","id":679,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Needed for remote sorting\n     * @returns {Object[]}\n     */","meta":{"range":[18594,18844],"filename":"Base.mjs","lineno":644,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023273","name":"Collection#exportSorters","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Needed for remote sorting</p>\n","returns":[{"type":{"names":["Array.<Object>"]}}],"name":"exportSorters","longname":"Collection#exportSorters","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#exportSorters","$kind":"method","id":680,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @protected\n     */","meta":{"range":[18884,22116],"filename":"Base.mjs","lineno":661,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023290","name":"Collection#filter","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"access":"protected","name":"filter","longname":"Collection#filter","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#filter","$kind":"method","id":681,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns items which match the property and value.\n     * Properties can contain dots for namespaces => find('vdom.id', 'neo-vnode-1')\n     * @param {Object|String} property\n     * @param {String|Number} [value] Only required in case the first param is a string\n     * @param {Boolean} returnFirstMatch=false\n     * @returns {Object|Object[]}\n     *     returnFirstMatch=false: Returns an empty Array in case no items are found\n     *     returnFirstMatch=true:  Returns the first found item or null\n     */","meta":{"range":[22644,23838],"filename":"Base.mjs","lineno":774,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023684","name":"Collection#find","type":"MethodDefinition","paramnames":["property","value","returnFirstMatch"]},"vars":{"":null}},"description":"<p>Returns items which match the property and value.\nProperties can contain dots for namespaces =&gt; find(&#39;vdom.id&#39;, &#39;neo-vnode-1&#39;)</p>\n","params":[{"type":{"names":["Object","String"]},"name":"property"},{"type":{"names":["String","Number"]},"optional":true,"description":"<p>Only required in case the first param is a string</p>\n","name":"value"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"returnFirstMatch"}],"returns":[{"type":{"names":["Object","Array.<Object>"]},"description":"returnFirstMatch=false: Returns an empty Array in case no items are found\n    returnFirstMatch=true:  Returns the first found item or null"}],"name":"find","longname":"Collection#find","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#find","$kind":"method","id":682,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns all items in the collection for which the passed function returns true\n     * @param {function} fn The function to run for each item inside the start-end range. Return true for a match.\n     * @param {Object} fn.item The current collection item\n     * @param {Object} scope=this The scope in which the passed function gets executed\n     * @param {Number} start=0 The start index\n     * @param {Number} end=this.getCount() The end index (up to, last value excluded)\n     * @returns {Array} Returns an empty Array in case no items are found\n     */","meta":{"range":[24414,24716],"filename":"Base.mjs","lineno":823,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023815","name":"Collection#findBy","type":"MethodDefinition","paramnames":["fn","scope","start","end"]},"vars":{"":null}},"description":"<p>Returns all items in the collection for which the passed function returns true</p>\n","params":[{"type":{"names":["function"]},"description":"<p>The function to run for each item inside the start-end range. Return true for a match.</p>\n","name":"fn"},{"type":{"names":["Object"]},"description":"<p>The current collection item</p>\n","name":"fn.item"},{"type":{"names":["Object"]},"defaultvalue":"this","description":"<p>The scope in which the passed function gets executed</p>\n","name":"scope"},{"type":{"names":["Number"]},"defaultvalue":0,"description":"<p>The start index</p>\n","name":"start"},{"type":{"names":["Number"]},"defaultvalue":"this.getCount()","description":"<p>The end index (up to, last value excluded)</p>\n","name":"end"}],"returns":[{"type":{"names":["Array"]},"description":"Returns an empty Array in case no items are found"}],"name":"findBy","longname":"Collection#findBy","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#findBy","$kind":"method","id":683,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the first item which matches the property and value\n     * @param {Object|String} property\n     * @param {Number|String} [value] Only required in case the first param is a string\n     * @returns {Object} Returns the first found item or null\n     */","meta":{"range":[24994,25076],"filename":"Base.mjs","lineno":843,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023873","name":"Collection#findFirst","type":"MethodDefinition","paramnames":["property","value"]},"vars":{"":null}},"description":"<p>Returns the first item which matches the property and value</p>\n","params":[{"type":{"names":["Object","String"]},"name":"property"},{"type":{"names":["Number","String"]},"optional":true,"description":"<p>Only required in case the first param is a string</p>\n","name":"value"}],"returns":[{"type":{"names":["Object"]},"description":"Returns the first found item or null"}],"name":"findFirst","longname":"Collection#findFirst","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#findFirst","$kind":"method","id":684,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the first item inside the collection\n     * @returns {Object}\n     */","meta":{"range":[25175,25220],"filename":"Base.mjs","lineno":851,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023887","name":"Collection#first","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the first item inside the collection</p>\n","returns":[{"type":{"names":["Object"]}}],"name":"first","longname":"Collection#first","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#first","$kind":"method","id":685,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the object associated to the key, or null if there is none.\n     * @param {Number|String} key\n     * @returns {Object|null}\n     */","meta":{"range":[25381,25438],"filename":"Base.mjs","lineno":860,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023897","name":"Collection#get","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns the object associated to the key, or null if there is none.</p>\n","params":[{"type":{"names":["Number","String"]},"name":"key"}],"returns":[{"type":{"names":["Object","null"]}}],"name":"get","longname":"Collection#get","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#get","$kind":"method","id":686,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the item for a given index\n     * @param {Number} index\n     * @returns {Object|undefined}\n     */","meta":{"range":[25566,25620],"filename":"Base.mjs","lineno":869,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023912","name":"Collection#getAt","type":"MethodDefinition","paramnames":["index"]},"vars":{"":null}},"description":"<p>Returns the item for a given index</p>\n","params":[{"type":{"names":["Number"]},"name":"index"}],"returns":[{"type":{"names":["Object","undefined"]}}],"name":"getAt","longname":"Collection#getAt","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#getAt","$kind":"method","id":687,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the config value of this.count\n     * @returns {Number}\n     * @deprecated Use `this.count` directly instead.\n     */","meta":{"range":[25767,25857],"filename":"Base.mjs","lineno":878,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023923","name":"Collection#getCount","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the config value of this.count</p>\n","returns":[{"type":{"names":["Number"]}}],"deprecated":"Use `this.count` directly instead.","name":"getCount","longname":"Collection#getCount","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#getCount","$kind":"method","id":688,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @returns {Number}\n     */","meta":{"range":[25904,25967],"filename":"Base.mjs","lineno":885,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023933","name":"Collection#getCountMutations","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Number"]}}],"name":"getCountMutations","longname":"Collection#getCountMutations","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#getCountMutations","$kind":"method","id":689,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the first matching filter for the given property config\n     * @param {String} property\n     * @returns {Neo.collection.Filter|null}\n     */","meta":{"range":[26137,26432],"filename":"Base.mjs","lineno":894,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023941","name":"Collection#getFilter","type":"MethodDefinition","paramnames":["property"]},"vars":{"":null}},"description":"<p>Returns the first matching filter for the given property config</p>\n","params":[{"type":{"names":["String"]},"name":"property"}],"returns":[{"type":{"names":["Neo.collection.Filter","null"]}}],"name":"getFilter","longname":"Collection#getFilter","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#getFilter","$kind":"method","id":690,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the key for a given index\n     * @param {Number} index\n     * @returns {Number|String|undefined}\n     */","meta":{"range":[26566,26668],"filename":"Base.mjs","lineno":913,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023984","name":"Collection#getKeyAt","type":"MethodDefinition","paramnames":["index"]},"vars":{"":null}},"description":"<p>Returns the key for a given index</p>\n","params":[{"type":{"names":["Number"]},"name":"index"}],"returns":[{"type":{"names":["Number","String","undefined"]}}],"name":"getKeyAt","longname":"Collection#getKeyAt","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#getKeyAt","$kind":"method","id":691,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns a shallow copy of a portion of the items array\n     * @param {Number} [start] Zero-based index at which to begin extraction.\n     * @param {Number} [end] Zero-based index before which to end extraction (extracts up to but not including end).\n     * @returns {Array}\n     * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n     */","meta":{"range":[27077,27150],"filename":"Base.mjs","lineno":925,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100023999","name":"Collection#getRange","type":"MethodDefinition","paramnames":["start","end"]},"vars":{"":null}},"description":"<p>Returns a shallow copy of a portion of the items array</p>\n","params":[{"type":{"names":["Number"]},"optional":true,"description":"<p>Zero-based index at which to begin extraction.</p>\n","name":"start"},{"type":{"names":["Number"]},"optional":true,"description":"<p>Zero-based index before which to end extraction (extracts up to but not including end).</p>\n","name":"end"}],"returns":[{"type":{"names":["Array"]}}],"tags":[{"originalTitle":"link","title":"link","text":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","value":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"}],"name":"getRange","longname":"Collection#getRange","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#getRange","$kind":"method","id":692,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the Source Collection in case the sourceCollectionId config was set\n     * @returns {Neo.collection.Base|undefined}\n     */","meta":{"range":[27303,27377],"filename":"Base.mjs","lineno":933,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024014","name":"Collection#getSource","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the Source Collection in case the sourceCollectionId config was set</p>\n","returns":[{"type":{"names":["Neo.collection.Base","undefined"]}}],"name":"getSource","longname":"Collection#getSource","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#getSource","$kind":"method","id":693,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns a boolean asserting whether a value has been associated to the key in the Collection or not\n     * @param {Number|String} key\n     * @returns {Boolean}\n     */","meta":{"range":[27566,27615],"filename":"Base.mjs","lineno":942,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024030","name":"Collection#has","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns a boolean asserting whether a value has been associated to the key in the Collection or not</p>\n","params":[{"type":{"names":["Number","String"]},"name":"key"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"has","longname":"Collection#has","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#has","$kind":"method","id":694,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns a boolean asserting whether an item exists in the Collection or not\n     * @param {Object} item\n     * @returns {Boolean}\n     */","meta":{"range":[27774,27847],"filename":"Base.mjs","lineno":951,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024043","name":"Collection#hasItem","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Returns a boolean asserting whether an item exists in the Collection or not</p>\n","params":[{"type":{"names":["Object"]},"name":"item"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasItem","longname":"Collection#hasItem","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#hasItem","$kind":"method","id":695,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the index for a given key or item\n     * @param {Number|String|Object} key\n     * @returns {Number} index (-1 in case no match is found)\n     */","meta":{"range":[28021,28137],"filename":"Base.mjs","lineno":960,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024060","name":"Collection#indexOf","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns the index for a given key or item</p>\n","params":[{"type":{"names":["Number","String","Object"]},"name":"key"}],"returns":[{"type":{"names":["Number"]},"description":"index (-1 in case no match is found)"}],"name":"indexOf","longname":"Collection#indexOf","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#indexOf","$kind":"method","id":696,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the index for a given item\n     * @param {Object} item\n     * @returns {Number} index (-1 in case no match is found)\n     */","meta":{"range":[28291,28357],"filename":"Base.mjs","lineno":970,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024090","name":"Collection#indexOfItem","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Returns the index for a given item</p>\n","params":[{"type":{"names":["Object"]},"name":"item"}],"returns":[{"type":{"names":["Number"]},"description":"index (-1 in case no match is found)"}],"name":"indexOfItem","longname":"Collection#indexOfItem","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#indexOfItem","$kind":"method","id":697,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the index for a given key\n     * @param {Number|String} key\n     * @returns {Number} index (-1 in case no match is found)\n     */","meta":{"range":[28516,28593],"filename":"Base.mjs","lineno":979,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024103","name":"Collection#indexOfKey","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns the index for a given key</p>\n","params":[{"type":{"names":["Number","String"]},"name":"key"}],"returns":[{"type":{"names":["Number"]},"description":"index (-1 in case no match is found)"}],"name":"indexOfKey","longname":"Collection#indexOfKey","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#indexOfKey","$kind":"method","id":698,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Inserts an item or an array of items at the specified index\n     * @param {Number} index\n     * @param {Array|Object} item\n     * @returns {Object[]} an array containing all added items\n     */","meta":{"range":[28808,28889],"filename":"Base.mjs","lineno":989,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024122","name":"Collection#insert","type":"MethodDefinition","paramnames":["index","item"]},"vars":{"":null}},"description":"<p>Inserts an item or an array of items at the specified index</p>\n","params":[{"type":{"names":["Number"]},"name":"index"},{"type":{"names":["Array","Object"]},"name":"item"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"an array containing all added items"}],"name":"insert","longname":"Collection#insert","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#insert","$kind":"method","id":699,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @returns {Boolean} true in case the collection is filtered\n     */","meta":{"range":[28977,29029],"filename":"Base.mjs","lineno":996,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024138","name":"Collection#isFiltered","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]},"description":"true in case the collection is filtered"}],"name":"isFiltered","longname":"Collection#isFiltered","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#isFiltered","$kind":"method","id":700,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Object} item\n     * @returns {boolean}\n     * @protected\n     */","meta":{"range":[29123,29508],"filename":"Base.mjs","lineno":1005,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024146","name":"Collection#isFilteredItem","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"item"}],"returns":[{"type":{"names":["boolean"]}}],"access":"protected","name":"isFilteredItem","longname":"Collection#isFilteredItem","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#isFilteredItem","$kind":"method","id":701,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Helper method to check if a given input is either object-like or a key\n     * @param {*} value\n     * @returns {Boolean} returns true for object-like values\n     */","meta":{"range":[29694,29863],"filename":"Base.mjs","lineno":1027,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024194","name":"Collection#isItem","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Helper method to check if a given input is either object-like or a key</p>\n","params":[{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["Boolean"]},"description":"returns true for object-like values"}],"name":"isItem","longname":"Collection#isItem","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#isItem","$kind":"method","id":702,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @returns {Boolean} true in case the collection is sorted\n     */","meta":{"range":[29949,29997],"filename":"Base.mjs","lineno":1035,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024204","name":"Collection#isSorted","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]},"description":"true in case the collection is sorted"}],"name":"isSorted","longname":"Collection#isSorted","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#isSorted","$kind":"method","id":703,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Returns the last item inside the collection\n     * @returns {Object}\n     */","meta":{"range":[30095,30156],"filename":"Base.mjs","lineno":1043,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024212","name":"Collection#last","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the last item inside the collection</p>\n","returns":[{"type":{"names":["Object"]}}],"name":"last","longname":"Collection#last","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#last","$kind":"method","id":704,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Moves an item from fromIndex to toIndex\n     * @param {Number} fromIndex\n     * @param {Number} toIndex\n     */","meta":{"range":[30289,30574],"filename":"Base.mjs","lineno":1052,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024227","name":"Collection#move","type":"MethodDefinition","paramnames":["fromIndex","toIndex"]},"vars":{"":null}},"description":"<p>Moves an item from fromIndex to toIndex</p>\n","params":[{"type":{"names":["Number"]},"name":"fromIndex"},{"type":{"names":["Number"]},"name":"toIndex"}],"name":"move","longname":"Collection#move","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#move","$kind":"method","id":705,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Object} opts\n     * @protected\n     */","meta":{"range":[30642,30692],"filename":"Base.mjs","lineno":1070,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024275","name":"Collection#onFilterChange","type":"MethodDefinition","paramnames":["opts"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"opts"}],"access":"protected","name":"onFilterChange","longname":"Collection#onFilterChange","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#onFilterChange","$kind":"method","id":706,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Object} opts\n     * @protected\n     */","meta":{"range":[30760,31035],"filename":"Base.mjs","lineno":1078,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024285","name":"Collection#onMutate","type":"MethodDefinition","paramnames":["opts"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"opts"}],"access":"protected","name":"onMutate","longname":"Collection#onMutate","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#onMutate","$kind":"method","id":707,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {Object} opts\n     * @protected\n     */","meta":{"range":[31103,31188],"filename":"Base.mjs","lineno":1095,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024312","name":"Collection#onSorterChange","type":"MethodDefinition","paramnames":["opts"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"opts"}],"access":"protected","name":"onSorterChange","longname":"Collection#onSorterChange","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#onSorterChange","$kind":"method","id":708,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes the last element from the items array and returns this element.\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\n     */","meta":{"range":[31393,31505],"filename":"Base.mjs","lineno":1104,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024327","name":"Collection#pop","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Removes the last element from the items array and returns this element.</p>\n","returns":[{"type":{"names":["Object"]},"description":"The removed element from the collection; undefined if the collection is empty."}],"name":"pop","longname":"Collection#pop","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#pop","$kind":"method","id":709,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Adds one or more items to the end of the collection and returns the new items count\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Number} the collection count\n     */","meta":{"range":[31717,31765],"filename":"Base.mjs","lineno":1114,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024351","name":"Collection#push","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Adds one or more items to the end of the collection and returns the new items count</p>\n","params":[{"type":{"names":["Array","Object"]},"description":"<p>The item(s) to add</p>\n","name":"item"}],"returns":[{"type":{"names":["Number"]},"description":"the collection count"}],"name":"push","longname":"Collection#push","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#push","$kind":"method","id":710,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes a given key, item or Array containing keys|items\n     * @param {Number|String|Object|Array} key\n     * @returns {Number} the collection count\n     */","meta":{"range":[31944,32052],"filename":"Base.mjs","lineno":1123,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024362","name":"Collection#remove","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Removes a given key, item or Array containing keys|items</p>\n","params":[{"type":{"names":["Number","String","Object","Array"]},"name":"key"}],"returns":[{"type":{"names":["Number"]},"description":"the collection count"}],"name":"remove","longname":"Collection#remove","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#remove","$kind":"method","id":711,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes the item at the given index\n     * @param {Number} index\n     * @returns {Number} the collection count\n     */","meta":{"range":[32192,32277],"filename":"Base.mjs","lineno":1133,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024387","name":"Collection#removeAt","type":"MethodDefinition","paramnames":["index"]},"vars":{"":null}},"description":"<p>Removes the item at the given index</p>\n","params":[{"type":{"names":["Number"]},"name":"index"}],"returns":[{"type":{"names":["Number"]},"description":"the collection count"}],"name":"removeAt","longname":"Collection#removeAt","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#removeAt","$kind":"method","id":712,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Reverses the items array in place.\n     * Intended for collections without sorters.\n     * @returns {Array} items\n     */","meta":{"range":[32420,32474],"filename":"Base.mjs","lineno":1143,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024404","name":"Collection#reverse","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Reverses the items array in place.\nIntended for collections without sorters.</p>\n","returns":[{"type":{"names":["Array"]},"description":"items"}],"name":"reverse","longname":"Collection#reverse","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#reverse","$kind":"method","id":713,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes the first element from the items array and returns this element.\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\n     */","meta":{"range":[32680,32775],"filename":"Base.mjs","lineno":1151,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024415","name":"Collection#shift","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Removes the first element from the items array and returns this element.</p>\n","returns":[{"type":{"names":["Object"]},"description":"The removed element from the collection; undefined if the collection is empty."}],"name":"shift","longname":"Collection#shift","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#shift","$kind":"method","id":714,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * @param {function} callback Function to test for each item, taking three parameters:\n     * @param {Object}   callback.item The current collection item being processed\n     * @param {Number}  [callback.index] The index of the current item being processed\n     * @param {Array}   [callback.items] The items array of the collection\n     *\n     * @param {Object} [scope] Value to use as \"this\" when executing the callback\n     * @returns {boolean} true if the callback function returns a truthy value for any collection item, otherwise false\n     */","meta":{"range":[33342,33404],"filename":"Base.mjs","lineno":1165,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024434","name":"Collection#some","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"type":{"names":["function"]},"description":"<p>Function to test for each item, taking three parameters:</p>\n","name":"callback"},{"type":{"names":["Object"]},"description":"<p>The current collection item being processed</p>\n","name":"callback.item"},{"type":{"names":["Number"]},"optional":true,"description":"<p>The index of the current item being processed</p>\n","name":"callback.index"},{"type":{"names":["Array"]},"optional":true,"description":"<p>The items array of the collection</p>\n","name":"callback.items"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Value to use as &quot;this&quot; when executing the callback</p>\n","name":"scope"}],"returns":[{"type":{"names":["boolean"]},"description":"true if the callback function returns a truthy value for any collection item, otherwise false"}],"name":"some","longname":"Collection#some","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#some","$kind":"method","id":715,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Removes items from and/or adds items to this collection\n     * If the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.\n     * If index is not passed, toAddArray is appended to the Collection.\n     * @param {Number|null} index\n     * @param {Number|Object[]} [removeCountOrToRemoveArray]\n     * @param {Object|Object[]} [toAddArray]\n     * @returns {Object} An object containing the addedItems & removedItems arrays\n     */","meta":{"range":[33925,37840],"filename":"Base.mjs","lineno":1178,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024449","name":"Collection#splice","type":"MethodDefinition","paramnames":["index","removeCountOrToRemoveArray","toAddArray"]},"vars":{"":null}},"description":"<p>Removes items from and/or adds items to this collection\nIf the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.\nIf index is not passed, toAddArray is appended to the Collection.</p>\n","params":[{"type":{"names":["Number","null"]},"name":"index"},{"type":{"names":["Number","Array.<Object>"]},"optional":true,"name":"removeCountOrToRemoveArray"},{"type":{"names":["Object","Array.<Object>"]},"optional":true,"name":"toAddArray"}],"returns":[{"type":{"names":["Object"]},"description":"An object containing the addedItems & removedItems arrays"}],"name":"splice","longname":"Collection#splice","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#splice","$kind":"method","id":716,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Prevents the collection from firing events until endUpdate gets called.\n     * If you start an update using the startSilentUpdateMode param,\n     * the mutation event will not fire after using endUpdate()\n     * (you must use the endSilentUpdateMode param for the endUpdate call in case you used\n     * startSilentUpdateMode here)\n     * @param {Boolean} [startSilentUpdateMode]\n     * @see {@link Neo.collection.Base#endUpdate endUpdate}\n     */","meta":{"range":[38308,38470],"filename":"Base.mjs","lineno":1298,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024961","name":"Collection#startUpdate","type":"MethodDefinition","paramnames":["startSilentUpdateMode"]},"vars":{"":null}},"description":"<p>Prevents the collection from firing events until endUpdate gets called.\nIf you start an update using the startSilentUpdateMode param,\nthe mutation event will not fire after using endUpdate()\n(you must use the endSilentUpdateMode param for the endUpdate call in case you used\nstartSilentUpdateMode here)</p>\n","params":[{"type":{"names":["Boolean"]},"optional":true,"name":"startSilentUpdateMode"}],"see":["{@link Neo.collection.Base#endUpdate endUpdate}"],"name":"startUpdate","longname":"Collection#startUpdate","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#startUpdate","$kind":"method","id":717,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n     * Adds one or more elements to the beginning of the collection and returns the new items count\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Number} the collection count\n     */","meta":{"range":[38691,38776],"filename":"Base.mjs","lineno":1311,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{"id":"astnode100024980","name":"Collection#unshift","type":"MethodDefinition","paramnames":["item"]},"vars":{"":null}},"description":"<p>Adds one or more elements to the beginning of the collection and returns the new items count</p>\n","params":[{"type":{"names":["Array","Object"]},"description":"<p>The item(s) to add</p>\n","name":"item"}],"returns":[{"type":{"names":["Number"]},"description":"the collection count"}],"name":"unshift","longname":"Collection#unshift","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#unshift","$kind":"method","id":718,"neoClassName":"Neo.collection.Base"},{"comment":"/**\n * The mutate event fires after every splice call (invoked by all methods which change the content of the items array).\n * @event mutate\n * @param {Object[]} addedItems\n * @param {Boolean} preventBubbleUp private\n * @param {Object[]} removedItems\n * @returns {Object}\n */","meta":{"filename":"Base.mjs","lineno":1317,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/collection","code":{}},"description":"<p>The mutate event fires after every splice call (invoked by all methods which change the content of the items array).</p>\n","kind":"event","name":"mutate","params":[{"type":{"names":["Array.<Object>"]},"name":"addedItems"},{"type":{"names":["Boolean"]},"description":"<p>private</p>\n","name":"preventBubbleUp"},{"type":{"names":["Array.<Object>"]},"name":"removedItems"}],"returns":[{"type":{"names":["Object"]}}],"longname":"event:mutate","scope":"global","$longname":"event:mutate","$kind":"event","id":719,"neoClassName":"Neo.collection.Base"}]}