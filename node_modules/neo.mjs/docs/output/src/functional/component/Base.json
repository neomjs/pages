{"classData":[{"comment":"/**\n * @class Neo.functional.component.Base\n * @extends Neo.component.Abstract\n */","meta":{"filename":"Base.mjs","lineno":13,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"class","name":"Base","augments":["Neo.component.Abstract"],"memberof":"Neo.functional.component","longname":"Neo.functional.component.Base","scope":"static","$longname":"Neo.functional.component.Base","$kind":"class","id":3179,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {String} className='Neo.functional.component.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":23,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.functional.component.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3180,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {Boolean} enableHtmlTemplates_=false\n         * @reactive\n         * Set this to true to enable using tagged template literals for VDOM creation\n         * via the render() method. This will lazy load the html parser.\n         */","meta":{"filename":"Base.mjs","lineno":30,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"enableHtmlTemplates_","type":{"names":["Boolean"]},"defaultvalue":false,"tags":[{"originalTitle":"reactive","title":"reactive","text":"Set this to true to enable using tagged template literals for VDOM creation\nvia the render() method. This will lazy load the html parser.","value":"Set this to true to enable using tagged template literals for VDOM creation\nvia the render() method. This will lazy load the html parser."}],"longname":"enableHtmlTemplates_","scope":"global","$longname":"enableHtmlTemplates_","$kind":"property","id":3181,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * @member {String} ntype='functional-component'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":35,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'functional-component'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":3182,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n         * The vdom markup for this component.\n         * @member {Object} vdom={}\n         */","meta":{"filename":"Base.mjs","lineno":40,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>The vdom markup for this component.</p>\n","kind":"member","name":"vdom","type":{"names":["Object"]},"defaultvalue":"{}","longname":"vdom","scope":"global","$longname":"vdom","$kind":"property","id":3183,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Neo component instances, which got defined inside createVdom()\n     * @member {Map|null} childComponents=null\n     */","meta":{"filename":"Base.mjs","lineno":47,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Neo component instances, which got defined inside createVdom()</p>\n","kind":"member","name":"childComponents","type":{"names":["Map","null"]},"defaultvalue":null,"longname":"childComponents","scope":"global","$longname":"childComponents","$kind":"property","id":3184,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * @member {Neo.functional.util.HtmlTemplateProcessor|null} htmlTemplateProcessor=null\n     * @private\n     */","meta":{"filename":"Base.mjs","lineno":52,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"kind":"member","name":"htmlTemplateProcessor","type":{"names":["Neo.functional.util.HtmlTemplateProcessor","null"]},"defaultvalue":null,"access":"private","longname":"htmlTemplateProcessor","scope":"global","$longname":"htmlTemplateProcessor","$kind":"property","id":3185,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Internal Map to store the next set of components after the createVdom() Effect has run.\n     * @member {Map|null} nextChildComponents=null\n     * @private\n     */","meta":{"filename":"Base.mjs","lineno":58,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{}},"description":"<p>Internal Map to store the next set of components after the createVdom() Effect has run.</p>\n","kind":"member","name":"nextChildComponents","type":{"names":["Map","null"]},"defaultvalue":null,"access":"private","longname":"nextChildComponents","scope":"global","$longname":"nextChildComponents","$kind":"property","id":3186,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[2023,3287],"filename":"Base.mjs","lineno":63,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090626","name":"FunctionalBase#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"FunctionalBase#construct","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#construct","$kind":"method","id":3187,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the isReady config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[3444,3636],"filename":"Base.mjs","lineno":104,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090751","name":"FunctionalBase#afterSetIsReady","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the isReady config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetIsReady","longname":"FunctionalBase#afterSetIsReady","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetIsReady","$kind":"method","id":3188,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the mounted config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[3793,4064],"filename":"Base.mjs","lineno":119,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090780","name":"FunctionalBase#afterSetMounted","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the mounted config got changed</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetMounted","longname":"FunctionalBase#afterSetMounted","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetMounted","$kind":"method","id":3189,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Triggered after the windowId config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[4230,4433],"filename":"Base.mjs","lineno":134,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090805","name":"FunctionalBase#afterSetWindowId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the windowId config got changed</p>\n","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetWindowId","longname":"FunctionalBase#afterSetWindowId","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#afterSetWindowId","$kind":"method","id":3190,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Applies the pending DOM event listeners and updates the active list.\n     * @private\n     */","meta":{"range":[4547,5299],"filename":"Base.mjs","lineno":146,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090820","name":"FunctionalBase#applyPendingDomListeners","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Applies the pending DOM event listeners and updates the active list.</p>\n","access":"private","name":"applyPendingDomListeners","longname":"FunctionalBase#applyPendingDomListeners","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#applyPendingDomListeners","$kind":"method","id":3191,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * A lifecycle hook that runs after a state change has been detected but before the\n     * VDOM update is dispatched. It provides a dedicated place for logic that needs to\n     * execute before rendering, such as calculating derived data or caching values.\n     *\n     * You can prevent the VDOM update by returning `false` from this method. This is\n     * useful for advanced cases where you might want to manually trigger a different\n     * update after modifying other component configs.\n     *\n     * **IMPORTANT**: Do not change the value of any config that is used as a dependency\n     * within the `createVdom` method from inside this hook, as it will cause an\n     * infinite update loop. This hook is for one-way data flow, not for triggering\n     * cascading reactive changes.\n     *\n     * @returns {Boolean|undefined} Return `false` to cancel the upcoming VDOM update.\n     * @example\n     * beforeUpdate() {\n     *     // Perform an expensive calculation and cache the result on the instance\n     *     this.processedData = this.processRawData(this.rawData);\n     *\n     *     // Example of conditionally cancelling an update\n     *     if (this.processedData.length === 0 && this.vdom.cn?.length === 0) {\n     *         return false; // Don't re-render if there's nothing to show\n     *     }\n     * }\n     */","meta":{"range":[6641,6718],"filename":"Base.mjs","lineno":195,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090889","name":"FunctionalBase#beforeUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>A lifecycle hook that runs after a state change has been detected but before the\nVDOM update is dispatched. It provides a dedicated place for logic that needs to\nexecute before rendering, such as calculating derived data or caching values.</p>\n<p>You can prevent the VDOM update by returning <code>false</code> from this method. This is\nuseful for advanced cases where you might want to manually trigger a different\nupdate after modifying other component configs.</p>\n<p><strong>IMPORTANT</strong>: Do not change the value of any config that is used as a dependency\nwithin the <code>createVdom</code> method from inside this hook, as it will cause an\ninfinite update loop. This hook is for one-way data flow, not for triggering\ncascading reactive changes.</p>\n","returns":[{"type":{"names":["Boolean","undefined"]},"description":"Return `false` to cancel the upcoming VDOM update."}],"examples":["beforeUpdate() {\n    // Perform an expensive calculation and cache the result on the instance\n    this.processedData = this.processRawData(this.rawData);\n\n    // Example of conditionally cancelling an update\n    if (this.processedData.length === 0 && this.vdom.cn?.length === 0) {\n        return false; // Don't re-render if there's nothing to show\n    }\n}"],"name":"beforeUpdate","longname":"FunctionalBase#beforeUpdate","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#beforeUpdate","$kind":"method","id":3192,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * This method is called by the HtmlTemplateProcessor after the async parsing is complete.\n     * It then continues the component update lifecycle.\n     * @param {Object} parsedVdom The VDOM object received from the parser addon.\n     * @protected\n     */","meta":{"range":[6992,9630],"filename":"Base.mjs","lineno":205,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100090893","name":"FunctionalBase#continueUpdateWithVdom","type":"MethodDefinition","paramnames":["parsedVdom"]},"vars":{"":null}},"description":"<p>This method is called by the HtmlTemplateProcessor after the async parsing is complete.\nIt then continues the component update lifecycle.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The VDOM object received from the parser addon.</p>\n","name":"parsedVdom"}],"access":"protected","name":"continueUpdateWithVdom","longname":"FunctionalBase#continueUpdateWithVdom","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#continueUpdateWithVdom","$kind":"method","id":3193,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Override this method in your functional component to return its VDOM structure.\n     * This method will be automatically re-executed when any of the component's configs change.\n     * To access data from a state provider, use `config.data`.\n     * @param {Neo.functional.component.Base} config - Mental model: while it contains the instance, it makes it clear to access configs\n     * @returns {Object} The VDOM structure for the component.\n     */","meta":{"range":[10100,10291],"filename":"Base.mjs","lineno":289,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091127","name":"FunctionalBase#createVdom","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Override this method in your functional component to return its VDOM structure.\nThis method will be automatically re-executed when any of the component&#39;s configs change.\nTo access data from a state provider, use <code>config.data</code>.</p>\n","params":[{"type":{"names":["Neo.functional.component.Base"]},"description":"<p>Mental model: while it contains the instance, it makes it clear to access configs</p>\n","name":"config"}],"returns":[{"type":{"names":["Object"]},"description":"The VDOM structure for the component."}],"name":"createVdom","longname":"FunctionalBase#createVdom","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#createVdom","$kind":"method","id":3194,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     *\n     */","meta":{"range":[10320,10775],"filename":"Base.mjs","lineno":302,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091156","name":"FunctionalBase#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"destroy","longname":"FunctionalBase#destroy","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"$longname":"FunctionalBase#destroy","$kind":"method","id":3195,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * This method recursively compares the new VDOM config with the last applied config\n     * for a given component instance and its sub-instances.\n     * @param {Neo.core.Base} instance The component instance to update.\n     * @param {Object} newConfig The new configuration object from the VDOM.\n     * @param {Object} lastConfig The last applied configuration object.\n     * @private\n     */","meta":{"range":[11186,12124],"filename":"Base.mjs","lineno":327,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091181","name":"FunctionalBase#diffAndSet","type":"MethodDefinition","paramnames":["instance","newConfig","lastConfig"]},"vars":{"":null}},"description":"<p>This method recursively compares the new VDOM config with the last applied config\nfor a given component instance and its sub-instances.</p>\n","params":[{"type":{"names":["Neo.core.Base"]},"description":"<p>The component instance to update.</p>\n","name":"instance"},{"type":{"names":["Object"]},"description":"<p>The new configuration object from the VDOM.</p>\n","name":"newConfig"},{"type":{"names":["Object"]},"description":"<p>The last applied configuration object.</p>\n","name":"lastConfig"}],"access":"private","name":"diffAndSet","longname":"FunctionalBase#diffAndSet","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#diffAndSet","$kind":"method","id":3196,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * @returns {Promise<void>}\n     */","meta":{"range":[12178,12559],"filename":"Base.mjs","lineno":354,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091273","name":"FunctionalBase#initAsync","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"initAsync","longname":"FunctionalBase#initAsync","kind":"function","memberof":"FunctionalBase","scope":"instance","params":[],"async":true,"$longname":"FunctionalBase#initAsync","$kind":"method","id":3197,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * This handler runs when the effect's `isRunning` state changes.\n     * It runs outside the effect's tracking scope, preventing feedback loops.\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     */","meta":{"range":[12793,13963],"filename":"Base.mjs","lineno":371,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091317","name":"FunctionalBase#onEffectRunStateChange","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>This handler runs when the effect&#39;s <code>isRunning</code> state changes.\nIt runs outside the effect&#39;s tracking scope, preventing feedback loops.</p>\n","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"name":"onEffectRunStateChange","longname":"FunctionalBase#onEffectRunStateChange","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#onEffectRunStateChange","$kind":"method","id":3198,"neoClassName":"Neo.functional.component.Base"},{"comment":"/**\n     * Recursively processes a VDOM node to instantiate components defined within it.\n     * @param {Object} vdomTree The VDOM node to process.\n     * @param {String} parentId The ID of the parent component (the functional component hosting it).\n     * @param {Number} [parentIndex] The index of the vdomNode within its parent's children.\n     * @returns {Object} The processed VDOM node, potentially replaced with a component reference.\n     * @private\n     */","meta":{"range":[14439,17008],"filename":"Base.mjs","lineno":406,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/functional/component","code":{"id":"astnode100091379","name":"FunctionalBase#processVdomForComponents","type":"MethodDefinition","paramnames":["vdomTree","parentId","parentIndex"]},"vars":{"":null}},"description":"<p>Recursively processes a VDOM node to instantiate components defined within it.</p>\n","params":[{"type":{"names":["Object"]},"description":"<p>The VDOM node to process.</p>\n","name":"vdomTree"},{"type":{"names":["String"]},"description":"<p>The ID of the parent component (the functional component hosting it).</p>\n","name":"parentId"},{"type":{"names":["Number"]},"optional":true,"description":"<p>The index of the vdomNode within its parent&#39;s children.</p>\n","name":"parentIndex"}],"returns":[{"type":{"names":["Object"]},"description":"The processed VDOM node, potentially replaced with a component reference."}],"access":"private","name":"processVdomForComponents","longname":"FunctionalBase#processVdomForComponents","kind":"function","memberof":"FunctionalBase","scope":"instance","$longname":"FunctionalBase#processVdomForComponents","$kind":"method","id":3199,"neoClassName":"Neo.functional.component.Base"}]}