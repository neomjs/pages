{"classData":[{"comment":"/**\n     * Recursively creates a DOM element (or DocumentFragment) from a VNode tree.\n     * This method handles two primary modes based on `isRoot`:\n     * 1. If `isRoot` is true:\n     *   a. Builds a detached DocumentFragment: if `parentNode` is null. Returns the fragment.\n     *   b. Builds and inserts directly into a host DOM: if `parentNode` is provided. Inserts the fragment.\n     * 2. If `isRoot` is false (default for recursive calls):\n     *   Appends created DOM nodes directly to the provided `parentNode` (which is the DOM element of the direct parent VNode).\n     *\n     * @param {Object}      config\n     * @param {Number}      [config.index]           The index within `parentNode` to insert the root fragment (used when `isRoot` is true).\n     * @param {Boolean}     [config.isRoot=false]    If true, this is the root call for the VNode tree.\n     * @param {HTMLElement} [config.parentNode=null] The parent DOM node to insert into. Its role changes based on `isRoot`.\n     * @param {Object}      config.vnode             The VNode object to convert to a real DOM element.\n     * @returns {DocumentFragment|HTMLElement|null}  The created DOM node, the root DocumentFragment, or null.\n     * @private\n     */","meta":{"range":[1319,5890],"filename":"DomApiRenderer.mjs","lineno":21,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/render","code":{"id":"astnode100127226","name":"createDomTree","type":"FunctionExpression"},"vars":{"domNode":"DomApiRenderer.createDomTree~domNode","commentStart":"DomApiRenderer.createDomTree~commentStart","commentEnd":"DomApiRenderer.createDomTree~commentEnd","fragment":"DomApiRenderer.createDomTree~fragment","domNode[undefined]":"DomApiRenderer.createDomTree~domNode.undefined]","":null,"domNode.innerHTML":"DomApiRenderer.createDomTree~domNode.innerHTML","domNode.textContent":"DomApiRenderer.createDomTree~domNode.textContent","nodeToInsert":"DomApiRenderer.createDomTree~nodeToInsert"}},"description":"<p>Recursively creates a DOM element (or DocumentFragment) from a VNode tree.\nThis method handles two primary modes based on <code>isRoot</code>:</p>\n<ol>\n<li>If <code>isRoot</code> is true:\n  a. Builds a detached DocumentFragment: if <code>parentNode</code> is null. Returns the fragment.\n  b. Builds and inserts directly into a host DOM: if <code>parentNode</code> is provided. Inserts the fragment.</li>\n<li>If <code>isRoot</code> is false (default for recursive calls):\n  Appends created DOM nodes directly to the provided <code>parentNode</code> (which is the DOM element of the direct parent VNode).</li>\n</ol>\n","params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Number"]},"optional":true,"description":"<p>The index within <code>parentNode</code> to insert the root fragment (used when <code>isRoot</code> is true).</p>\n","name":"config.index"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"<p>If true, this is the root call for the VNode tree.</p>\n","name":"config.isRoot"},{"type":{"names":["HTMLElement"]},"optional":true,"defaultvalue":null,"description":"<p>The parent DOM node to insert into. Its role changes based on <code>isRoot</code>.</p>\n","name":"config.parentNode"},{"type":{"names":["Object"]},"description":"<p>The VNode object to convert to a real DOM element.</p>\n","name":"config.vnode"}],"returns":[{"type":{"names":["DocumentFragment","HTMLElement","null"]},"description":"The created DOM node, the root DocumentFragment, or null."}],"access":"private","name":"createDomTree","longname":"DomApiRenderer.createDomTree","kind":"function","memberof":"DomApiRenderer","scope":"static","$longname":"DomApiRenderer.createDomTree","$kind":"method","id":4279,"neoClassName":"Neo.main.render.DomApiRenderer"}]}